<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WY CS</title>
    <link>https://wy-cs.info/</link>
    <description>Recent content on WY CS</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Oct 2025 11:49:54 -0500</lastBuildDate>
    <atom:link href="https://wy-cs.info/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Connect Four Overview</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/overview/</link>
      <pubDate>Fri, 22 Nov 2019 15:35:21 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/overview/</guid>
      <description>&lt;h2 id=&#34;basic-types&#34;&gt;Basic Types&lt;/h2&gt;&#xA;&lt;p&gt;Some years we have left the choice of representation to be up to the&#xA;writer. This description is one possible representation:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type Player = Int -- really only two choices&#xA;type Posn = (Int, Int) -- coordinates&#xA;type Piece = (Player, Posn)&#xA;type Board = [Piece]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;functions-to-write&#34;&gt;Functions to write&lt;/h2&gt;&#xA;&lt;p&gt;This is a minimum set of functions to write:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;draw_board :: Board -&amp;gt; String&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create a String representation of the board.&lt;/p&gt;</description>
    </item>
    <item>
      <title>02 Years</title>
      <link>https://wy-cs.info/ai/parsing/exercises/02-years/</link>
      <pubDate>Fri, 15 Mar 2024 12:22:58 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/exercises/02-years/</guid>
      <description>&lt;p&gt;An example of something that is much harder to do with regular&#xA;expressions than by other means.&lt;/p&gt;&#xA;&lt;h2 id=&#34;years-before-1990&#34;&gt;Years before 1990&lt;/h2&gt;&#xA;&lt;p&gt;Match titles of all films produced before 1990.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1 The Shawshank Redemption (1994)&#xA;2 The Godfather (1972)&#xA;3 The Godfather: Part II (1974)&#xA;4 Pulp Fiction (1994)&#xA;5 The Good, the Bad and the Ugly (1966)&#xA;6 The Dark Knight (2008)&#xA;7 12 Angry Men (1957)&#xA;8 Schindler&amp;#39;s List (1993)&#xA;9 The Lord of the Rings: The Return of the King (2003)&#xA;10 Fight Club (1999)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should match lines 2, 3, 5, and 7.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Start</title>
      <link>https://wy-cs.info/ml/fast-ai/start/</link>
      <pubDate>Thu, 30 Mar 2023 11:11:31 -0500</pubDate>
      <guid>https://wy-cs.info/ml/fast-ai/start/</guid>
      <description>&lt;h2 id=&#34;kaggle&#34;&gt;Kaggle&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Verify with a phone number.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Open a new notebook and rename it &lt;code&gt;00-fast.ai-intro&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;File -&amp;gt; Import Notebook and select the Link method. Go to&#xA;the &lt;a href=&#34;https://github.com/fastai/course22&#34;&gt;course22 github&#xA;repository&lt;/a&gt; and get the link&#xA;from &lt;a href=&#34;https://github.com/fastai/course22/blob/master/00-is-it-a-bird-creating-a-model-from-your-own-data.ipynb&#34;&gt;the file you&#xA;want&lt;/a&gt;. In&#xA;this case, you should get the following (do not type this by hand).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;https://github.com/fastai/course22/blob/master/00-is-it-a-bird-creating-a-model-from-your-own-data.ipynb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Check the &amp;ldquo;Notebook options&amp;rdquo; at the right sidebar.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pick an accelerator (some GPU).&lt;/li&gt;&#xA;&lt;li&gt;Internet on.&lt;/li&gt;&#xA;&lt;li&gt;No options? You probably have not verified a phone number.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No right sidebar. Cannot find &amp;ldquo;Notebook options&amp;rdquo;. Solution: when the&#xA;sidebar is hidden there is a small tab with a triangle on it in the&#xA;lower right. Use that to pull out the sidebar.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;deepnote&#34;&gt;Deepnote&lt;/h2&gt;&#xA;&lt;p&gt;Deepnote does not provide access to a GPU for free. When I checked,&#xA;they were $8/hour.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About this class</title>
      <link>https://wy-cs.info/ml/about/</link>
      <pubDate>Tue, 30 Aug 2022 19:42:14 -0500</pubDate>
      <guid>https://wy-cs.info/ml/about/</guid>
      <description>&lt;p&gt;This class will focus on classical &amp;ldquo;statistical learning&amp;rdquo;. We can&#xA;discuss whether to attempt &amp;ldquo;modern&amp;rdquo; work (e.g., neural networks) in&#xA;second semester after learning some of the foundations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;goals&#34;&gt;Goals&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You will see numerical evidence and do experiments to discover facts&#xA;about probability and statistics.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You will be able to analyze a dataset using R. You will know how to&#xA;ask interesting questions and answer them with statistical&#xA;reasoning.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You will know how to reason statistically using probability. For&#xA;example, you will know how to compute the probability of an occurrence&#xA;assuming some hypotheses is true (p-values and more).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Book</title>
      <link>https://wy-cs.info/ap-cs/karel/book/</link>
      <pubDate>Tue, 17 Oct 2017 10:17:40 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/book/</guid>
      <description>&lt;p&gt;The book is &lt;a href=&#34;https://www.amazon.com/Karel-Robot-Introduction-Object-Oriented-Programming/dp/0970579519&#34;&gt;Karel J Robot&lt;/a&gt;: &amp;ldquo;A Gentle Introduction to the Art of&#xA;Object-Oriented Programming in Java&amp;rdquo;, by Joseph Bergin, Mark Stehlik,&#xA;Jim Roberts, and Rich Pattis. We have the January 2008 printing, but&#xA;all versions are very similar. Happily, the book is available for under $10 used if you&#xA;want one or want to donate one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Review Topics</title>
      <link>https://wy-cs.info/ap-cs/haskell/review/review-topics/</link>
      <pubDate>Mon, 16 Dec 2024 07:12:00 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/review/review-topics/</guid>
      <description>&lt;h2 id=&#34;important&#34;&gt;Important&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pattern matching (including let and where).&#xA;Avoid: &lt;code&gt;fst&lt;/code&gt;, &lt;code&gt;snd&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;, &lt;code&gt;tail&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Records and data structures.&lt;/li&gt;&#xA;&lt;li&gt;map, filter, and fold&lt;/li&gt;&#xA;&lt;li&gt;Type classes: &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Maybe&lt;/li&gt;&#xA;&lt;li&gt;Semigroup?&lt;/li&gt;&#xA;&lt;li&gt;Functor? - If you had the class definition, could you&#xA;make an instance of it?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;sorting&lt;/li&gt;&#xA;&lt;li&gt;Inferring type signatures from usage.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;other-topics&#34;&gt;Other Topics&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Randomness: &lt;code&gt;mkStdGen&lt;/code&gt;, &lt;code&gt;randomR&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Stone Age&amp;rdquo; programming.&lt;/li&gt;&#xA;&lt;li&gt;Code World&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--&#xA;## Questions&#xA;&#xA;The purpose of a final exam is to provide accountability for the&#xA;learning. A secondary purpose is to provide a motivation to review the&#xA;semester&#39;s topics, and therefore retain more.&#xA;&#xA;&#xA;--&gt;</description>
    </item>
    <item>
      <title>Description</title>
      <link>https://wy-cs.info/intermediate-cs/projects/duck-shoot/05-description/</link>
      <pubDate>Thu, 08 Feb 2024 13:23:03 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/duck-shoot/05-description/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;A duck moves horizontally across the screen.&lt;/li&gt;&#xA;&lt;li&gt;You can control the direction of the duck (left/right) with the&#xA;A and D keys.&lt;/li&gt;&#xA;&lt;li&gt;When the duck hits the edge of the screen, it changes direction.&lt;/li&gt;&#xA;&lt;li&gt;A turret sits at the bottom of the screen and can move horizontally,&#xA;controlled by left/right arrows.&lt;/li&gt;&#xA;&lt;li&gt;A bullet can be fired vertically using the space bar.&lt;/li&gt;&#xA;&lt;li&gt;When the duck is hit, it changes direction.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/projects/duck-shoot/05-description/Duck-Game-1.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;enhancements&#34;&gt;Enhancements&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Graphic for duck changes when hit.&lt;/li&gt;&#xA;&lt;li&gt;Duck begins close (near the turret) and moves higher every time it is&#xA;hit.&lt;/li&gt;&#xA;&lt;li&gt;Track the number of hits and misses.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;Using &lt;code&gt;key=?&lt;/code&gt; to compare keys is highly recommended!&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Book</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-book/</link>
      <pubDate>Tue, 28 Nov 2023 07:10:00 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-book/</guid>
      <description>&lt;h2 id=&#34;exercise-notes--advice&#34;&gt;Exercise Notes / Advice&lt;/h2&gt;&#xA;&lt;p&gt;See the &lt;a href=&#34;https://wy-cs.info/intermediate-cs/pro/build-image/&#34;&gt;build-image&lt;/a&gt; tutorial. Use that to do 15.3.3 and&#xA;15.3.{7-10}. Do not use &lt;code&gt;build3-image&lt;/code&gt; even though the book says to use it. The &lt;code&gt;build-image&lt;/code&gt; function is better.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;15.3.4: The first input is the candidate for whom you are counting votes. (For example &amp;ldquo;Clinton&amp;rdquo;.) The next four inputs are votes cast for a person. (For example &amp;ldquo;Trump&amp;rdquo; &amp;ldquo;Clinton&amp;rdquo; &amp;ldquo;Sanders&amp;rdquo; &amp;ldquo;Trump&amp;rdquo;.) You are supposed to return the number of votes for the candidate from the first input. (For example: &lt;code&gt;1&lt;/code&gt; in this case.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 00</title>
      <link>https://wy-cs.info/ml/fast-ai/lesson-00/</link>
      <pubDate>Thu, 30 Mar 2023 10:05:12 -0500</pubDate>
      <guid>https://wy-cs.info/ml/fast-ai/lesson-00/</guid>
      <description>&lt;p&gt;These are my notes from the video. Please suggest things to add.&lt;/p&gt;&#xA;&lt;h2 id=&#34;knowledge&#34;&gt;Knowledge&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How does the &lt;code&gt;Path&lt;/code&gt; class work? How do you make a Path that refers&#xA;to a subdirectory of &lt;code&gt;Path p&lt;/code&gt;?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;data-sources&#34;&gt;Data Sources&lt;/h3&gt;&#xA;&lt;p&gt;There are a &lt;a href=&#34;https://docs.fast.ai/data.external.html#main-datasets&#34;&gt;bunch of&#xA;datasets&lt;/a&gt; that&#xA;are easily available from within the fast.ai framework.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain &lt;code&gt;untar_data&lt;/code&gt;. What does it do? Where does the information&#xA;go? What kind of information goes in? Look to see if the &lt;code&gt;URLs&lt;/code&gt; are&#xA;exactly the data we have worked with, or if it&amp;rsquo;s different.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Description</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/00-description/</link>
      <pubDate>Tue, 19 Apr 2022 07:01:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/00-description/</guid>
      <description>&lt;p&gt;This will be a step-by-step walkthrough of a very simple &amp;ldquo;game&amp;rdquo;. The&#xA;goal is to guide you through each step of the process one time. Your&#xA;goal should be to &lt;em&gt;understand the meaning of each step&lt;/em&gt;, not just&#xA;complete each step.&lt;/p&gt;&#xA;&lt;p&gt;We will make a simple multi-world &amp;ldquo;game&amp;rdquo;. Each world is a rectangle of&#xA;a particular color.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pressing a number key K (for example &amp;ldquo;1&amp;rdquo; or &amp;ldquo;2&amp;rdquo;) causes the current world to send a&#xA;message to world number K to change to the color of the current&#xA;world.&lt;/li&gt;&#xA;&lt;li&gt;Pressing &amp;ldquo;r&amp;rdquo; randomizes the color of the current world (among some&#xA;set of choices).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;steps-in-walkthrough&#34;&gt;Steps in Walkthrough&lt;/h1&gt;&#xA;&lt;p&gt;There are numbered steps in the sidebar.&#xA;After each step, save all files and verify that your code runs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animations Summary</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/animation0/</link>
      <pubDate>Wed, 13 Oct 2021 20:36:15 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/animation0/</guid>
      <description>&lt;p&gt;This is a summary, not an introduction. It has a digest of all of the&#xA;information you will want later.&lt;/p&gt;&#xA;&lt;h2 id=&#34;essentials&#34;&gt;Essentials&lt;/h2&gt;&#xA;&lt;p&gt;These essentials are on page 100 (PDF page 111) or page 138 (PDF page&#xA;149). &lt;strong&gt;There is a detailed checklist on page 105 (PDF page 116)&lt;/strong&gt;. Use it!&#xA;You should memorize them.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;model&lt;/code&gt;: What the computer remembers.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;draw-handler: model -&amp;gt; image&lt;/code&gt;: Draw the model on the screen; adds non-moving parts to the image. (&lt;code&gt;on-draw&lt;/code&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ML Startup</title>
      <link>https://wy-cs.info/ml/startup/</link>
      <pubDate>Tue, 08 Sep 2020 20:41:18 -0500</pubDate>
      <guid>https://wy-cs.info/ml/startup/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://r4ds.had.co.nz&#34;&gt;R for Data Science&lt;/a&gt;: Foundational skills&#xA;working with data in R.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://colab.fan/r&#34;&gt;R on Google Colaboratory&lt;/a&gt;: This link starts a&#xA;new R notebook. You can also follow Section 1.4 of the text.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://faculty.marshall.usc.edu/gareth-james/ISL/&#34;&gt;Introduction to Statistical&#xA;Learning&lt;/a&gt;: We&#xA;will use this book after you master basic R skills.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>7. Summary</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/ch07-summary/</link>
      <pubDate>Tue, 20 Nov 2018 11:22:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/ch07-summary/</guid>
      <description>&lt;p&gt;The chapter is about doing math with numbers.&lt;/p&gt;&#xA;&lt;h2 id=&#34;essential-summary&#34;&gt;Essential summary&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Basic arithmetic&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; thirteen divided by seven&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; nine minus one&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;quotient&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;21912&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;remainder&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;21912&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Maximum, minimum, absolute value&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; ==&amp;gt; 0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;min&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;255&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; ==&amp;gt; 255&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;abs&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; ==&amp;gt; 10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Exponents, square root, squaring:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;expt&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.01&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;95&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; 1.01 to the 95 power is about 2.57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;sqrt&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; square root of 9 is three&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;sqr&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1241&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; when you square 1241 you get 1540081&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Inexact answers, checking with tolerance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;sqrt&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;; about 2.236&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;#i2.23606797749979&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;#i&lt;/code&gt; at the start of &lt;code&gt;#i2.236...&lt;/code&gt; means that the number is an &amp;ldquo;inexact&amp;rdquo; decimal.&#xA;You should never use check-expect with inexact numbers, because the inexact results can be different on different computers! Instead, use &lt;code&gt;check-within&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Essentials</title>
      <link>https://wy-cs.info/ap-cs/karel/essentials/</link>
      <pubDate>Tue, 17 Oct 2017 10:17:44 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/essentials/</guid>
      <description>&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GitHub Classroom&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-url&#34; data-lang=&#34;url&#34;&gt;https://classroom.github.com/a/bOX4Z5jT&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should end up with a new repository which has all of the Karel starter files and also lets you save your files.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Note the link in the green box!&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Git clone&lt;/p&gt;&#xA;&lt;p&gt;In this step you download your new repository to the computer you are working on.&#xA;Start &amp;ldquo;Git Bash&amp;rdquo; or type the following in &amp;ldquo;Terminal&amp;rdquo; on your computer.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-git&#34; data-lang=&#34;git&#34;&gt;git clone paste-link-to-your-repository-here&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;One time settings&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect Four Timeline</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/timeline/</link>
      <pubDate>Sat, 07 Oct 2017 08:59:38 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/timeline/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Day&lt;/th&gt;&#xA;          &lt;th&gt;Date(s)&lt;/th&gt;&#xA;          &lt;th&gt;Project Assignment&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;TBA 9&lt;/td&gt;&#xA;          &lt;td&gt;Project assigned. Write &lt;code&gt;draw_board&lt;/code&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2-3&lt;/td&gt;&#xA;          &lt;td&gt;TBA 11&lt;/td&gt;&#xA;          &lt;td&gt;Plan, write, and test: &lt;code&gt;is_legal_move&lt;/code&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;TBA 12&lt;/td&gt;&#xA;          &lt;td&gt;Plan &lt;code&gt;is_won&lt;/code&gt; in class. Write and test at home.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;TBA 15&lt;/td&gt;&#xA;          &lt;td&gt;Project due.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;TBA 19&lt;/td&gt;&#xA;          &lt;td&gt;Last day to turn in project.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;I expect this project to take 4-6 hours to complete over the course of&#xA;a week. If you spend less than 3 hours on the project you should read&#xA;the advanced notes about the minimax algorithm and (partially?)&#xA;implement it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Check Expects</title>
      <link>https://wy-cs.info/ap-cs/haskell/check-expect/</link>
      <pubDate>Sun, 23 Sep 2018 12:36:16 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/check-expect/</guid>
      <description>&lt;p&gt;This page explains how to write &lt;code&gt;check-expect&lt;/code&gt; in Haskell in a basic&#xA;way that can be used on repl.it (or anywhere). This method works for&#xA;small numbers of tests. Hopefully it work well enough for now.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write out tests in a list so each gives True when it passes.&lt;/li&gt;&#xA;&lt;li&gt;Define a testing main function &lt;code&gt;test_main&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Run the &lt;code&gt;test_main&lt;/code&gt; yourself.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;If you have your own computer, you can learn to use the&#xA;&lt;a href=&#34;https://hackage.haskell.org/package/HUnit&#34;&gt;HUnit&lt;/a&gt; testing system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>09 Digit Commas</title>
      <link>https://wy-cs.info/ai/parsing/exercises/09-digit-commas/</link>
      <pubDate>Fri, 15 Mar 2024 12:01:02 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/exercises/09-digit-commas/</guid>
      <description>&lt;h2 id=&#34;digit-commas-formatting&#34;&gt;Digit commas formatting&lt;/h2&gt;&#xA;&lt;p&gt;Insert commas in the numbers for greater readability before each group of three digits.&lt;/p&gt;&#xA;&lt;p&gt;Input text:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Ten Countries with the Highest Population:&#xA;1 China 1361220000&#xA;2 India 1236800000&#xA;3 United States 317121000&#xA;4 Indonesia 237641326&#xA;5 Brazil 201032714&#xA;6 Pakistan 184872000&#xA;7 Nigeria 173615000&#xA;8 Bangladesh 152518015&#xA;9 Russia 143600000&#xA;10 Japan 127290000&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Desired output:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Ten Countries with the Highest Population:&#xA;1 China 1,361,220,000&#xA;2 India 1,236,800,000&#xA;3 United States 317,121,000&#xA;4 Indonesia 237,641,326&#xA;5 Brazil 201,032,714&#xA;6 Pakistan 184,872,000&#xA;7 Nigeria 173,615,000&#xA;8 Bangladesh 152,518,015&#xA;9 Russia 143,600,000&#xA;10 Japan 127,290,000&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Honestly, this isn&amp;rsquo;t even that interesting for a parser. The important&#xA;thing is that you be able to execute code before making the&#xA;replacement. (This is Perl&amp;rsquo;s &lt;code&gt;/e&lt;/code&gt; modifier to the regex. &lt;a href=&#34;https://perldoc.perl.org/perlrequick#:~:text=The%20evaluation%20modifier%20s///e%20wraps%20an%20eval%7B...%7D%20around%20the%20replacement%20string%20and%20the%20evaluated%20result%20is%20substituted%20for%20the%20matched%20substring.&#34;&gt;Examples in Perl.&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>01</title>
      <link>https://wy-cs.info/nand/review/01/</link>
      <pubDate>Thu, 29 May 2025 12:39:13 -0500</pubDate>
      <guid>https://wy-cs.info/nand/review/01/</guid>
      <description>&lt;h2 id=&#34;assembler&#34;&gt;Assembler&lt;/h2&gt;&#xA;&lt;p&gt;What Hack assembly is produced?&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;push constant 15&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How do you get the top item on the stack into the D register?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write assembly for &lt;code&gt;push local 2&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What registers is the caller responsible for saving? Write&#xA;pseudocode and explain how the save/restore mechanism works.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What register setup does the function do upon entry?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Who is responsible for restoring the registers when a function call&#xA;ends? How does the answer get returned to the caller? Explain how&#xA;that works, including pseudo-code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Symbols I</title>
      <link>https://wy-cs.info/nand/ch11/symbols-1/</link>
      <pubDate>Thu, 15 May 2025 10:28:24 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch11/symbols-1/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h3 id=&#34;variables&#34;&gt;Variables&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What segment and index number should each variable be mapped to based on&#xA;the code below?&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;type&lt;/th&gt;&#xA;          &lt;th&gt;kind&lt;/th&gt;&#xA;          &lt;th&gt;index&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;count&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;id&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;hours&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;working&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;days&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;holder&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;rate&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;amount&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class One {&#xA;  static int count;&#xA;  field int id;&#xA;  field int hours;&#xA;  field boolean working;&#xA;&#xA;  constructor One new(int days) {&#xA;     var int holder;&#xA;     let count = count + 1;&#xA;     let id = count;&#xA;     let holder = days;&#xA;     let hours = holder * 8;&#xA;     let working = false;&#xA;     return this;&#xA;   }&#xA;   method int payMe(int rate) {&#xA;     var int amount;&#xA;     let amount = rate * hours;&#xA;     if (working) {&#xA;       return amount;&#xA;     } else {&#xA;       return 0;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;symbol-tables&#34;&gt;Symbol Tables&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;How many symbol tables does the book suggest you use, and why?&#xA;What advantage do they see over just using one?&lt;/li&gt;&#xA;&lt;li&gt;If you wanted to use four symbol tables, what would you put in&#xA;each one? What would be different in your process for using four&#xA;vs the book&amp;rsquo;s recommended approach? Why do you think the book&#xA;doesn&amp;rsquo;t suggest four?&lt;/li&gt;&#xA;&lt;li&gt;In question 1, you should have identified something the book thinks&#xA;is easier with two symbol tables. How would you accomplish the same&#xA;thing with just one symbol table?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I think that the real reason the book introduces two symbol tables is&#xA;to give you an idea of the complexity of a real Java compiler, where&#xA;new variables can be introduced at any line of the program. (I think&#xA;Java only needs more than two symbol tables because of inheritance.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guidelines</title>
      <link>https://wy-cs.info/nand/blog/guidelines/</link>
      <pubDate>Fri, 27 Dec 2024 16:28:04 -0600</pubDate>
      <guid>https://wy-cs.info/nand/blog/guidelines/</guid>
      <description>&lt;p&gt;The construction of a good blog entry begins with &amp;ldquo;interesting&amp;rdquo;&#xA;details. Talk about the sources of the problems and (possibly) ways to&#xA;avoid them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;interesting-details&#34;&gt;Interesting details&lt;/h2&gt;&#xA;&lt;p&gt;Interesting details are usually points that you found&#xA;difficult.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Was it hard to understand how to avoid code duplication?&lt;/li&gt;&#xA;&lt;li&gt;Did you misunderstand parts of the specification originally?&lt;/li&gt;&#xA;&lt;li&gt;What kinds of mistakes did you make?&lt;/li&gt;&#xA;&lt;li&gt;Did you notice yourself making the&#xA;same kinds of mistakes in more than one place?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A critical point here is that your interesting details must be&#xA;&lt;em&gt;concrete&lt;/em&gt;. Making general statements is &lt;em&gt;never&lt;/em&gt; interesting. The&#xA;details are your evidence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024 Review A</title>
      <link>https://wy-cs.info/ap-cs/haskell/review/10-review-a/</link>
      <pubDate>Mon, 16 Dec 2024 07:08:57 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/review/10-review-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;q1&lt;/code&gt;) You get a list of &lt;code&gt;Maybe Int&lt;/code&gt;&#xA;Give out a list of &lt;code&gt;Int&lt;/code&gt;: all of the numbers that square&#xA;to something be less than 100. Write a type signature and the&#xA;function.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;q2&lt;/code&gt;) You get a list of &lt;code&gt;Maybe Int&lt;/code&gt;. Return their sum.&#xA;Count -5 for each &lt;code&gt;Nothing&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Define a data using the field names in the definition&#xA;the data should be called &lt;code&gt;Game&lt;/code&gt; and contain a &lt;code&gt;Point&lt;/code&gt; called&#xA;&lt;code&gt;pos&lt;/code&gt;, an &lt;code&gt;Int&lt;/code&gt; called &lt;code&gt;score&lt;/code&gt;, and a list of &lt;code&gt;Point&lt;/code&gt; called &lt;code&gt;enemies&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Random Setup</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/random-setup/</link>
      <pubDate>Thu, 21 Nov 2024 11:01:23 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/random-setup/</guid>
      <description>&lt;p&gt;You may have to install the random package. This only needs to happen&#xA;once.&lt;/p&gt;&#xA;&lt;h2 id=&#34;codespaces-or-simple-computer-install&#34;&gt;Codespaces or Simple Computer Install&lt;/h2&gt;&#xA;&lt;p&gt;In the terminal, in the folder you are doing your work, type:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cabal install --lib random --package-env $PWD&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The last item is the folder being used. You can write a period &lt;code&gt;.&lt;/code&gt;&#xA;instead of &lt;code&gt;$PWD&lt;/code&gt; if you want to feel even more mysterious.&lt;/p&gt;&#xA;&lt;h2 id=&#34;code-world&#34;&gt;Code World&lt;/h2&gt;&#xA;&lt;p&gt;The random package is already included in the CodeWorld environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overview</title>
      <link>https://wy-cs.info/nand/racket/overview/</link>
      <pubDate>Mon, 07 Oct 2024 21:50:39 -0500</pubDate>
      <guid>https://wy-cs.info/nand/racket/overview/</guid>
      <description>&lt;p&gt;Check out the regular Intermediate CS course&amp;rsquo;s &lt;a href=&#34;https://wy-cs.info/intermediate-cs/pro/&#34;&gt;Pro&#xA;Features&lt;/a&gt; section. We will&#xA;use it for for loops and matching.&lt;/p&gt;&#xA;&lt;h2 id=&#34;useful-topics&#34;&gt;Useful Topics&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Structures (not nearly as useful as other material)!&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Match&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;For &amp;ldquo;Loops&amp;rdquo; (a misnomer in Racket): for/list and for/fold.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Symbols&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Association Lists&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Quoting and Quasiquoting - making templates.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.racket-lang.org/guide/define.html#%28part._multiple-values%29&#34;&gt;Multiple&#xA;values&lt;/a&gt;. (Optional.)&#xA;One legitimate use: updating two &amp;ldquo;accumulators&amp;rdquo; in &lt;code&gt;for/fold&lt;/code&gt;.&#xA;Usually not appropriate; consider returning a structure instead.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>If Statements</title>
      <link>https://wy-cs.info/nand/ch04/examples/if/</link>
      <pubDate>Tue, 24 Sep 2024 12:58:01 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch04/examples/if/</guid>
      <description>&lt;h2 id=&#34;if-statements&#34;&gt;if statements&lt;/h2&gt;&#xA;&lt;p&gt;Pseudocode:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (ram[100]&amp;gt;50) {&#xA;  ram[0]=1;&#xA;} else {&#xA;  ram[0]=-1;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Assembler:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// D=ram[100]-50&#xA;@100&#xA;D=M&#xA;@50&#xA;D=D-A&#xA;// if ram[100]-50 &amp;lt;= 0 then goto ELSE&#xA;@ELSE&#xA;D;JLE&#xA;(THEN)&#xA;// begin of THEN&#xA;// ram[0] = 1&#xA;@0&#xA;M=1&#xA;@DONE&#xA;1;JMP&#xA;// end of THEN&#xA;// begin of ELSE&#xA;(ELSE)&#xA;// ram[0] = -1&#xA;@0&#xA;M=-1&#xA;// end of ELSE&#xA;// infinite loop at the end&#xA;(DONE)&#xA;@DONE&#xA;1;JMP&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://wy-cs.info/nand/ch04/summary/</link>
      <pubDate>Fri, 20 Sep 2024 15:42:02 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch04/summary/</guid>
      <description>&lt;p&gt;Purpose: a quick summary of how machine language works.&#xA;Aka assembly language.&lt;/p&gt;&#xA;&lt;h2 id=&#34;parts-of-the-computer&#34;&gt;Parts of the Computer&lt;/h2&gt;&#xA;&lt;h3 id=&#34;pc-program-counter&#34;&gt;PC: Program Counter&lt;/h3&gt;&#xA;&lt;p&gt;The program counter (PC) register holds the location in ROM of the&#xA;currently executing instruction.&lt;/p&gt;&#xA;&lt;p&gt;Changing the PC:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Default to adding 1. (PC=PC+1)&lt;/li&gt;&#xA;&lt;li&gt;Jumping sets the PC to the A register. (PC=A)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;address-register-a&#34;&gt;Address Register (A)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Holds either (1) a value or (2) a RAM memory location.&lt;/li&gt;&#xA;&lt;li&gt;There is &lt;em&gt;no difference&lt;/em&gt;. &lt;code&gt;@13&lt;/code&gt; loads 13 into the A register. It can&#xA;then be used as either the the number 13 or the to access the&#xA;memory location RAM[13].&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;data-register-d&#34;&gt;Data Register (D)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Holds a value.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;memory-register-m&#34;&gt;Memory &amp;ldquo;Register&amp;rdquo; (M)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;M is not a real register. It always points to RAM[A].&lt;/li&gt;&#xA;&lt;li&gt;When A changes, M changes automatically.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;execution&#34;&gt;Execution&lt;/h2&gt;&#xA;&lt;p&gt;Every executable line must have an ALU instruction, even if you don&amp;rsquo;t&#xA;care about it. This is &amp;ldquo;the answer&amp;rdquo; from that step. It can be 0 if you&#xA;don&amp;rsquo;t care. Beware: handwritten D is close to 0. There would be some&#xA;logic to using 1 as your default &amp;ldquo;I don&amp;rsquo;t care&amp;rdquo; result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.Project</title>
      <link>https://wy-cs.info/nand/ch01/project/</link>
      <pubDate>Wed, 04 Sep 2024 12:31:08 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch01/project/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1_wg5pVD8L0tmepOidYXe45QSZBLP4K0bNaHCNhQ8eAw/edit#heading=h.4tdloq5rpym9&#34;&gt;Google docs&#xA;source&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;n2t-chapter-1-boolean-logic&#34;&gt;N2T Chapter 1: Boolean Logic&lt;/h2&gt;&#xA;&lt;h3 id=&#34;written-explanations&#34;&gt;Written Explanations&lt;/h3&gt;&#xA;&lt;p&gt;Explain in words. Clarity is more important than length. These explanations must be 100% written by yourself. If you have to look up definitions, wait 8 hours before you write. Do not look up more than definitions.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is the purpose of a mux chip? Explain briefly, at a high level.&lt;/li&gt;&#xA;&lt;li&gt;What is the purpose of a dmux chip? Explain briefly, at a high level.&lt;/li&gt;&#xA;&lt;li&gt;What is the difference between dmux4way and dmux8way?&lt;/li&gt;&#xA;&lt;li&gt;Compare using &lt;code&gt;Or16&lt;/code&gt; and using two &lt;code&gt;Or8Way&lt;/code&gt; chips, showing what you&#xA;understand.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;reflection-questions&#34;&gt;Reflection Questions&lt;/h3&gt;&#xA;&lt;p&gt;Check your notebook for ideas. One paragraph.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Book Pictures</title>
      <link>https://wy-cs.info/intermediate-cs/ch03/book-pictures/</link>
      <pubDate>Tue, 27 Aug 2024 21:16:14 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch03/book-pictures/</guid>
      <description>&lt;p&gt;DrRacket &lt;a href=&#34;DocMo--A00-Early-Homework-Template.rkt&#34;&gt;homework template&#xA;file&lt;/a&gt;, including pictures and&#xA;variables. Right click and &amp;ldquo;Save as&amp;hellip;&amp;rdquo; on your own computer.&lt;/p&gt;&#xA;&lt;p&gt;These pictures used in the book are also available from the author&amp;rsquo;s&#xA;web site.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;bloch.jpg&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/bloch.jpg&#34;&#xA;    alt=&#34;pic:bloch&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:bloch&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;hieroglyphics.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/hieroglyphics.png&#34;&#xA;    alt=&#34;pic:hieroglyphics&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:hieroglyphics&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;hacker.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/hacker.png&#34;&#xA;    alt=&#34;pic:hacker&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:hacker&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;book.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/book.png&#34;&#xA;    alt=&#34;pic:book&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:book&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;calendar.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/calendar.png&#34;&#xA;    alt=&#34;pic:calendar&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:calendar&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;stick-figure.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/stick-figure.png&#34;&#xA;    alt=&#34;pic:stick-figure&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:stick-figure&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;scheme-logo.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/scheme-logo.png&#34;&#xA;    alt=&#34;pic:scheme-logo&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:scheme-logo&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;The following pictures have no built-in variables:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;train-engine.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/train-engine.png&#34;&#xA;    alt=&#34;pic:train-engine (download or copy and paste)&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:train-engine (download or copy and paste)&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;train-car.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/book-pictures/train-car.png&#34;&#xA;    alt=&#34;pic:train-car (download or copy and paste)&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;pic:train-car (download or copy and paste)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Misc 01</title>
      <link>https://wy-cs.info/intermediate-cs/misc/misc-01/</link>
      <pubDate>Wed, 17 Apr 2024 08:56:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/misc/misc-01/</guid>
      <description>&lt;p&gt;New functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;explode&lt;/code&gt;: Break a string in to a list of one letter strings.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;implode&lt;/code&gt;: Take a list of one letter strings and join them together.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;explode&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;peace&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;implode&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;war&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Usually you would write a helper function that works on one letter&#xA;strings, then use these functions to convert to ordinary strings.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercises-revised&#34;&gt;Exercises Revised&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;code&gt;1-String&lt;/code&gt; is a String of length 1. Examples: &lt;code&gt;&amp;quot;a&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;4&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;$&amp;quot;&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write &lt;code&gt;is-digit?: 1-String -&amp;gt; boolean&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (is-digit? &amp;quot;3&amp;quot;) #true)&#xA; (check-expect (is-digit? &amp;quot;w&amp;quot;) #false)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write &lt;code&gt;only-digits: (Listof 1-String) -&amp;gt; (Listof 1-String)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regular Expressions I</title>
      <link>https://wy-cs.info/ai/parsing/regex-intro/</link>
      <pubDate>Thu, 14 Mar 2024 21:31:15 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/regex-intro/</guid>
      <description>&lt;p&gt;There are many good online resources for learning regular&#xA;expressions. If you are unhappy with one, search for another.&lt;/p&gt;&#xA;&lt;p&gt;Essentials to know:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Grouping: &lt;code&gt;( ... )&lt;/code&gt; makes a group. The parentheses do not appear in&#xA;the item you are matching.&lt;/li&gt;&#xA;&lt;li&gt;Choices: &lt;code&gt;(A|B)&lt;/code&gt; matches either A or B.&lt;/li&gt;&#xA;&lt;li&gt;Repeat the last item: &lt;code&gt;?&lt;/code&gt; means 0 or 1; &lt;code&gt;*&lt;/code&gt; means 0 or more; &lt;code&gt;+&lt;/code&gt;&#xA;means 1 or more.&lt;/li&gt;&#xA;&lt;li&gt;Character classes:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;[abc]&lt;/code&gt; matches one of a, b, or c.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[abc]+&lt;/code&gt; matches aba, cba, and abcbca. Any string of length 1 or&#xA;more made up of the letters a, b, and/or c.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;[a-z]&lt;/code&gt; matches any letter from a through z.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The convention is to use lowercase for a kind of character (like&#xA;digit is &lt;code&gt;\d&lt;/code&gt;) and uppercase for &lt;em&gt;not&lt;/em&gt; that kind of character&#xA;(non-digits would match &lt;code&gt;\D&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;p&gt;Match with a regular expression, or say what patterns will match the&#xA;given regex.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prolog Setup</title>
      <link>https://wy-cs.info/ai/logic/20-prolog/10-setup/</link>
      <pubDate>Thu, 22 Feb 2024 15:25:45 -0600</pubDate>
      <guid>https://wy-cs.info/ai/logic/20-prolog/10-setup/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://www.swi-prolog.org/&#34;&gt;SWI Prolog&lt;/a&gt; system has more features&#xA;than other free Prolog systems, so that is what I recommend using.&lt;/p&gt;&#xA;&lt;h2 id=&#34;online&#34;&gt;Online&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://replit.com/@maueroats/WY-AI-Prolog&#34;&gt;ReplIt Prolog&lt;/a&gt;, or&#xA;search for Prolog on &lt;a href=&#34;https://replit.com/new&#34;&gt;Create a Repl&lt;/a&gt; page.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://swish.swi-prolog.org/&#34;&gt;SWISH&lt;/a&gt;, an online version of SWI&#xA;Prolog.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;offline&#34;&gt;Offline&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install the &lt;a href=&#34;https://www.swi-prolog.org/Download.html&#34;&gt;stable SWI-Prolog&#xA;release&lt;/a&gt;. There are&#xA;packages for Windows and MacOS, and instructions for installing on&#xA;several Linux releases. (Search packages for prolog.)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Introduction</title>
      <link>https://wy-cs.info/ai/logic/10-intro/</link>
      <pubDate>Mon, 12 Feb 2024 12:48:16 -0600</pubDate>
      <guid>https://wy-cs.info/ai/logic/10-intro/</guid>
      <description>&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Human solutions to constraint problems works when there are a&#xA;reasonable number of constraints. Humans can solve Sudoku problems,&#xA;but sometimes it takes a while. That&amp;rsquo;s a maximum of 81 variables and&#xA;roughly 27 constraints (there are 9 rows, 9 columns, and 9&#xA;squares).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Industrial problems like checking to see if a printed circuit board&#xA;correctly implements a specification will take a lot more&#xA;variables. (The technique could even be applied to the internal&#xA;&amp;ldquo;wiring&amp;rdquo; of a single semiconductor chip.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Model and Draw</title>
      <link>https://wy-cs.info/intermediate-cs/projects/duck-shoot/10-model/</link>
      <pubDate>Thu, 08 Feb 2024 13:22:20 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/duck-shoot/10-model/</guid>
      <description>&lt;p&gt;There are videos giving help for each step of the construction process.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/AjxBeNbBgjo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;</description>
    </item>
    <item>
      <title>Creating Classes</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/10-classes/</link>
      <pubDate>Mon, 27 Nov 2023 07:06:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/10-classes/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;This material motivated by &lt;em&gt;Haskell Programming from first principles&lt;/em&gt;,&#xA;by Allen and Moronuki. The Github user&#xA;&lt;a href=&#34;https://github.com/kingparra/hpfp&#34;&gt;kingparra&lt;/a&gt; has&#xA;&lt;a href=&#34;https://hpfp.readthedocs.io/en/latest/15_-_monoid_semigroup/notes.html&#34;&gt;notes&lt;/a&gt;&#xA;that might be useful.&lt;/p&gt;&#xA;&lt;p&gt;If you are using a compiler older than GHC 2021, you will need to add&#xA;FlexibleInstances to your language. You need this line if you have&#xA;problems with your &lt;code&gt;Demo String&lt;/code&gt; (see below).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mini A</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-a/</link>
      <pubDate>Tue, 14 Nov 2023 10:09:41 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-a/</guid>
      <description>&lt;p&gt;Make an activity:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use the keys WASD to drive a solid circle around the screen.&lt;/li&gt;&#xA;&lt;li&gt;Click on the circle to switch the color between orange and blue.&lt;/li&gt;&#xA;&lt;li&gt;Clicking outside of the circle does not change the color.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Strings 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch09/strings-1/</link>
      <pubDate>Thu, 09 Nov 2023 07:00:28 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch09/strings-1/</guid>
      <description>&lt;p&gt;Write each of these functions. Include at least one check-expect that&#xA;you write (in addition to mine).&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;numage: number -&amp;gt; image&lt;/code&gt; takes in an integer&#xA;and makes an image of that number in a purple 36 point font.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;first-five: string -&amp;gt; string&lt;/code&gt; gives the first five&#xA;letters of the word.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (first-five &amp;quot;kangaroo&amp;quot;) &amp;quot;kanga&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;chop-five: string -&amp;gt; string&lt;/code&gt; removes the first five&#xA;letters of the word. It gives an error if the word does not have 5 letters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create a Grid</title>
      <link>https://wy-cs.info/ai/game/maze/make-grid/</link>
      <pubDate>Fri, 03 Nov 2023 10:19:54 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/maze/make-grid/</guid>
      <description>&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    New recommendation: use coordinates for the grid instead of single&#xA;numbers.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The first basic step is to write a function to create the adjacency&#xA;list representation for a grid. This should be easy. Working this way&#xA;allows us not to hard-code the shape of graph into the maze-creation&#xA;or maze-solving steps, so we could theoretically make other shaped&#xA;mazes.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(0,0) - (1,0) - (2,0)&#xA;  |       |       |&#xA;(0,1) - (1,1) - (2,1)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The code should fit in this framework:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyGame Resources</title>
      <link>https://wy-cs.info/ai/game/pygame-resources/</link>
      <pubDate>Mon, 23 Oct 2023 15:12:50 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/pygame-resources/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://trinket.io/library/trinkets/create?lang=pygame&#34;&gt;Trinket.io&lt;/a&gt;&#xA;makes PyGame available.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://replit.com/new/pygame&#34;&gt;Replit.com&lt;/a&gt; has a PyGame language&#xA;but their method of running it is blocked on the CPS internet.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.pygame.org/docs/&#34;&gt;documentation&lt;/a&gt; for PyGame is&#xA;good. The pages I use a lot are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pygame.org/docs/ref/event.html&#34;&gt;event&lt;/a&gt; - There is a&#xA;table that lists the types of event and the data available for those&#xA;types. Important event types: &lt;code&gt;QUIT&lt;/code&gt;,&#xA;&lt;code&gt;KEYDOWN&lt;/code&gt;, &lt;code&gt;MOUSEMOTION&lt;/code&gt;, &lt;code&gt;MOUSEBUTTONUP&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pygame.org/docs/ref/mouse.html&#34;&gt;mouse&lt;/a&gt; - The &lt;code&gt;pos&lt;/code&gt; field&#xA;contains the coordinates of the event.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.pygame.org/docs/ref/key.html&#34;&gt;key&lt;/a&gt; - Contains a massive&#xA;table with the names of all the keys. The key &lt;code&gt;K_BACKSPACE&lt;/code&gt; is at&#xA;the top of the list if you want to search for it.&lt;/li&gt;&#xA;&lt;li&gt;a &lt;a href=&#34;https://www.pygame.org/docs/ref/color_list.html&#34;&gt;list of all named colors&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You will also need to know/memorize/copy the boilerplate code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Intro Ex</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-intro-ex/</link>
      <pubDate>Wed, 11 Oct 2023 07:12:20 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-intro-ex/</guid>
      <description>&lt;p&gt;Important knowledge: &lt;code&gt;Maybe&lt;/code&gt; class, &lt;code&gt;Nothing&lt;/code&gt; and &lt;code&gt;Just value&lt;/code&gt;. Pattern&#xA;matching to destructure.&lt;/p&gt;&#xA;&lt;!-- Checks are hand typed and not verified, 2023. Edited errors, 2024. --&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write &lt;code&gt;good_sqrt :: Float -&amp;gt; Maybe Float&lt;/code&gt; that gives &lt;code&gt;Nothing&lt;/code&gt; when&#xA;asked to find the square root of a negative number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; check1 = [ good_sqrt 16 == Just 4.0,&#xA;            good_sqrt (-25) == Nothing ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;cn :: [Maybe Int] -&amp;gt; Int&lt;/code&gt; that counts how many&#xA;&lt;code&gt;Nothing&lt;/code&gt; appear in the list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Overview</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/10-survey/</link>
      <pubDate>Sun, 08 Oct 2023 21:53:07 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/10-survey/</guid>
      <description>&lt;p&gt;Some examples in this chapter assume you are familiar with &lt;code&gt;Data.Set&lt;/code&gt;&#xA;and &lt;code&gt;Data.Map&lt;/code&gt;. You should ignore them on a first reading if they are&#xA;unfamiliar.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Types must start with capital letters. A type can be called&#xA;&lt;code&gt;Dinosaur&lt;/code&gt; but not &lt;code&gt;dinosaur&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Type synonyms, also known as type aliases.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  type BasicPoint = (Float, Float)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use Data to create new data types. Here is a Point data type:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  data Point = Point Float Float&#xA;  getX (Point x y) = x&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use &lt;code&gt;deriving&lt;/code&gt; to have an automatic simple output format and&#xA;equality operation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Definitions</title>
      <link>https://wy-cs.info/ai/graph/10-defs/</link>
      <pubDate>Tue, 22 Aug 2023 10:35:01 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/10-defs/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Adjacency list&lt;/li&gt;&#xA;&lt;li&gt;Adjacency matrix&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Python Resources</title>
      <link>https://wy-cs.info/ai/python/10-resources/</link>
      <pubDate>Tue, 22 Aug 2023 10:05:53 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/10-resources/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Using Python&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Online: &lt;a href=&#34;https://replit.com/new/python3&#34;&gt;replit&lt;/a&gt; or &lt;a href=&#34;https://trinket.io/embed/python3&#34;&gt;trinket&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Local version: &lt;a href=&#34;https://www.jetbrains.com/pycharm/&#34;&gt;PyCharm&lt;/a&gt; is my&#xA;favorite by far.&lt;/li&gt;&#xA;&lt;li&gt;For graphics: use &lt;a href=&#34;https://replit.com/new/pygame&#34;&gt;Pygame&lt;/a&gt; on ReplIt.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How to Think Like a Computer Scientist: &lt;a href=&#34;https://runestone.academy/ns/books/published/thinkcspy/index.html&#34;&gt;interactive&#xA;version&lt;/a&gt;,&#xA;&lt;a href=&#34;https://howtothink.readthedocs.io/en/latest/&#34;&gt;basic web site version&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Python 3 documentation:&#xA;&lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;tutorial&lt;/a&gt;,&#xA;&lt;a href=&#34;https://docs.python.org/3/reference/index.html&#34;&gt;language&#xA;reference&lt;/a&gt;,&#xA;&lt;a href=&#34;https://docs.python.org/3/library/index.html&#34;&gt;library reference&lt;/a&gt; -&#xA;includes how to use common libraries.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Loops 1 (for)</title>
      <link>https://wy-cs.info/ecs/javascript/for-1/</link>
      <pubDate>Wed, 07 Jun 2023 10:37:03 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/javascript/for-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print out the following without repeating code:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; 1 Mississippi&#xA; 2 Mississippi&#xA; 3 Mississippi&#xA; 4 Mississippi&#xA; 5 Mississippi&#xA; 6 Mississippi&#xA; 7 Mississippi&#xA; 8 Mississippi&#xA; 9 Mississippi&#xA; 10 Mississippi&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print out a launch sequence:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; 10&#xA; 9&#xA; 8&#xA; 7&#xA; 6&#xA; 5&#xA; 4&#xA; 3&#xA; 2&#xA; 1&#xA; blast off&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There are 15 people on the bus so far. The bus stop has seven&#xA;more. Print out the number of people on the bus as each person gets&#xA;on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 01</title>
      <link>https://wy-cs.info/ml/fast-ai/lesson-01/</link>
      <pubDate>Tue, 11 Apr 2023 11:29:24 -0500</pubDate>
      <guid>https://wy-cs.info/ml/fast-ai/lesson-01/</guid>
      <description>&lt;p&gt;Use the &lt;a href=&#34;https://github.com/fastai/course22&#34;&gt;course22 github repo&lt;/a&gt; to&#xA;find the files you need.&lt;/p&gt;&#xA;&lt;p&gt;We are reading&#xA;&lt;a href=&#34;https://github.com/fastai/course22/blob/master/01-jupyter-notebook-101.ipynb&#34;&gt;01-jupyter-notebook&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Go to kaggle.com&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a new notebook&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;File -&amp;gt; Import the file from the github repository&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  https://github.com/fastai/course22/blob/master/01-jupyter-notebook-101.ipynb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This one is an easy read.&lt;/p&gt;&#xA;&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;&#xA;&lt;p&gt;Markdown&amp;rsquo;s simplicity means that there are many extra features that&#xA;people wish it supported. This has caused many spin-offs with small differences, like&#xA;&lt;a href=&#34;https://github.github.com/gfm/&#34;&gt;Github-Flavored Markdown&lt;/a&gt; (GFM).&lt;/p&gt;&#xA;&lt;h2 id=&#34;comprehension-check&#34;&gt;Comprehension Check&lt;/h2&gt;&#xA;&lt;p&gt;You should know how to use Markdown when you are done.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CodeWorld Intro</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/01-intro/</link>
      <pubDate>Mon, 14 Nov 2022 10:02:33 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/01-intro/</guid>
      <description>&lt;p&gt;Code World provides an animation framework that is a lot like Racket&amp;rsquo;s&#xA;&lt;code&gt;big-bang&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use &lt;a href=&#34;https://code.world/haskell&#34;&gt;code.world/haskell&lt;/a&gt;. This is the&#xA;full-featured environment. If you go to &amp;ldquo;plain&amp;rdquo; CodeWorld without&#xA;the &lt;code&gt;haskell&lt;/code&gt;, you will&#xA;be using a limited and modified version of Haskell&amp;hellip; you want the&#xA;real thing.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Header: you should start every program with the few lines below.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  {-# LANGUAGE OverloadedStrings #-}&#xA;  import CodeWorld&#xA;  import qualified Data.Text as T&#xA;  main = drawingOf coordinatePlane&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The CodeWorld &lt;a href=&#34;https://code.world/doc.html?shelf=help/haskell.shelf&#34;&gt;Reference&#xA;Desk&lt;/a&gt; specific&#xA;to Haskell is&#xA;pretty minimal. The &lt;a href=&#34;https://code.world/doc.html?shelf=help/haskell.shelf&#34;&gt;Beginner&amp;rsquo;s Help&#xA;Desk&lt;/a&gt; is quite&#xA;a bit easier to read. Unfortunately, the functions have been&#xA;&amp;ldquo;beginner-ized&amp;rdquo; (see below).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sources</title>
      <link>https://wy-cs.info/ml/data/sources/</link>
      <pubDate>Thu, 15 Sep 2022 10:38:41 -0500</pubDate>
      <guid>https://wy-cs.info/ml/data/sources/</guid>
      <description>&lt;p&gt;Source of lots of datasets: &lt;a href=&#34;https://vincentarelbundock.github.io/Rdatasets/&#34;&gt;R datasets&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Search the &lt;a href=&#34;https://vincentarelbundock.github.io/Rdatasets/articles/data.html&#34;&gt;HTML&#xA;index&lt;/a&gt;&#xA;until you find the dataset you want. Example: 1377 is&#xA;&amp;ldquo;education expenditure data&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;To load the dataset, use &lt;code&gt;read_csv&lt;/code&gt;. Get the link by right&#xA;clicking on the &amp;ldquo;CSV&amp;rdquo; column in the table. If you download the&#xA;data to a file, then use a filename here.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;edu_raw &amp;lt;- read_csv(&#39;https://vincentarelbundock.github.io/Rdatasets/csv/robustbase/education.csv&#39;)&#xA;glimpse(edu_raw)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Run &lt;code&gt;glimpse&lt;/code&gt; to make sure the result of reading the data was&#xA;acceptable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 Model</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/01-model/</link>
      <pubDate>Tue, 19 Apr 2022 14:16:14 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/01-model/</guid>
      <description>&lt;p&gt;Every world should know its id number and a color. The name &lt;code&gt;ic&lt;/code&gt; comes&#xA;from &lt;code&gt;i&lt;/code&gt; for id number and &lt;code&gt;c&lt;/code&gt; for color.&lt;/p&gt;&#xA;&lt;p&gt;An &lt;code&gt;IC&lt;/code&gt; is a structure.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(make-ic Number Image-Color)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Interpretation:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(make-ic id col)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;id&lt;/code&gt;: specifies the number of the world (you choose)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;col&lt;/code&gt;: the color to show in the world&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Begin your main file with a structure definition for &lt;code&gt;ic&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(define-struct ic (id col))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You will want to require picturing-programs as always.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Learn Recursion</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/10-learnrec/</link>
      <pubDate>Fri, 11 Feb 2022 06:55:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/10-learnrec/</guid>
      <description>&lt;p&gt;Review this list once you have learned enough recursion to find&#xA;discovering patterns and debugging difficult.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a sequence of related examples.&lt;/p&gt;&#xA;&lt;p&gt;Related examples mean that the larger ones build off the smaller&#xA;ones. For example, &lt;code&gt;(f 1234)&lt;/code&gt; and &lt;code&gt;(f 123)&lt;/code&gt; are related. &lt;code&gt;(f 4321)&lt;/code&gt; is not related to the other two.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Digit patterns should grow in the ones place. See helpful&#xA;vs. unhelpful in the &lt;em&gt;Common Errors&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Identify a pattern using concrete cases before converting to an&#xA;unknown &amp;ldquo;N&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jan Return 1</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-1/</link>
      <pubDate>Mon, 03 Jan 2022 10:09:24 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-1/</guid>
      <description>&lt;p&gt;State: at the start of class, people do not remember how to write a&#xA;&amp;ldquo;for&amp;rdquo; loop and could barely write an &amp;ldquo;if&amp;rdquo; statement.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print all of the numbers 1 to 100.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Except print &lt;code&gt;*&lt;/code&gt; instead of multiples of 13.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count from 50 down to 10.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print &lt;code&gt;*&lt;/code&gt; on multiples of 7.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Oops, you should also print &lt;code&gt;*&lt;/code&gt; for multiples of 5.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How many digits in an integer?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static int countDigits (int n) {&#xA;  // ... think of more than one way ...&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Given the String below, how do you get the letters &amp;ldquo;eLsi&amp;rdquo;?&lt;/p&gt;</description>
    </item>
    <item>
      <title>14. Essentials</title>
      <link>https://wy-cs.info/intermediate-cs/ch14/ch14-essentials/</link>
      <pubDate>Mon, 06 Dec 2021 11:51:16 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch14/ch14-essentials/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(check-with good-model?)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(stop-when game-over? win-draw-handler)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;check-with&#34;&gt;check-with&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;check-with&lt;/code&gt; clause verifies that each handler returns a valid&#xA;model. You need to provide the function &lt;code&gt;good-model? : Any -&amp;gt; Boolean&lt;/code&gt;. Write it yourself or use a built-in function like&#xA;&lt;code&gt;number?&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;good-model?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;radius&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;number?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;radius&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;radius&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stop-when&#34;&gt;stop-when&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;stop-when&lt;/code&gt; clause stops the animation when your &lt;code&gt;game-over?&lt;/code&gt;&#xA;function returns true. The last image shown is given by calling&#xA;&lt;code&gt;win-draw-handler: model -&amp;gt; image&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One typical is is to have your win draw handler call your regular&#xA;draw handler and overlay text (like &amp;ldquo;Game Over&amp;rdquo;) on the result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java vs Haskell</title>
      <link>https://wy-cs.info/ap-cs/jm/intro/10-java-vs-haskell/</link>
      <pubDate>Mon, 06 Dec 2021 07:17:52 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/intro/10-java-vs-haskell/</guid>
      <description>&lt;h2 id=&#34;haskell&#34;&gt;Haskell&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;pure = no side effects for any function&lt;/li&gt;&#xA;&lt;li&gt;lazy = we did not encounter this&lt;/li&gt;&#xA;&lt;li&gt;functional = functions can be inputs to other functions&lt;/li&gt;&#xA;&lt;li&gt;lots of cool syntax like &lt;code&gt;[1..10]&lt;/code&gt; or &lt;code&gt;[x^2 | x &amp;lt;- [1..9]]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;types were optional (deduced)&lt;/li&gt;&#xA;&lt;li&gt;indentation made one thing go inside another (where)&lt;/li&gt;&#xA;&lt;li&gt;the last line of a function is returned the function output value&lt;/li&gt;&#xA;&lt;li&gt;syntax can be over the top &lt;code&gt;()-()&lt;/code&gt; could be a function?!&lt;/li&gt;&#xA;&lt;li&gt;very crap error messages&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;java&#34;&gt;Java&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;side effects are the way everything is done (objects change state)&lt;/li&gt;&#xA;&lt;li&gt;imperative (say how to do it, not just what to do)&lt;/li&gt;&#xA;&lt;li&gt;not using functions as inputs to other functions (changed in Java 8+)&lt;/li&gt;&#xA;&lt;li&gt;no cool syntax&lt;/li&gt;&#xA;&lt;li&gt;lots of syntax and special &amp;ldquo;reserved&amp;rdquo; words&lt;/li&gt;&#xA;&lt;li&gt;types are required&lt;/li&gt;&#xA;&lt;li&gt;braces &lt;code&gt;{ ... }&lt;/code&gt; to put things inside each other&lt;/li&gt;&#xA;&lt;li&gt;output values must be specified using a &lt;code&gt;return&lt;/code&gt; statement&lt;/li&gt;&#xA;&lt;li&gt;semicolons to end each &amp;ldquo;line&amp;rdquo; = statement or group of statements&lt;/li&gt;&#xA;&lt;li&gt;consistency is weird sometimes (I will point this out)&lt;/li&gt;&#xA;&lt;li&gt;need to understand how the computer sees &amp;ldquo;memory&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;crap error messages&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cook, &lt;a href=&#34;http://www.bluepelicanjava.com/&#34;&gt;&lt;em&gt;Blue Pelican Java&lt;/em&gt;&lt;/a&gt;. Free&#xA;online download.&lt;/li&gt;&#xA;&lt;li&gt;Litvin, &lt;a href=&#34;http://www.skylit.com/jm.html&#34;&gt;&lt;em&gt;Java Methods&lt;/em&gt;&lt;/a&gt;. For purchase only.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://codingbat.com/java&#34;&gt;CodingBat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Overview</title>
      <link>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/overview/</link>
      <pubDate>Fri, 19 Nov 2021 10:31:05 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/overview/</guid>
      <description>&lt;p&gt;We will start by writing a draw handler to render a Tic-Tac-Toe board,&#xA;then add in an event handler.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    Every function you write should have a signature. Lack of signatures&#xA;makes error messages very hard to understand.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;basic-definitions&#34;&gt;Basic Definitions&lt;/h2&gt;&#xA;&lt;p&gt;We will use the definitions below.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Player&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Piece&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Player&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Board&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Piece&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Danger: using &lt;code&gt;(Double, Double)&lt;/code&gt; for &lt;code&gt;Posn&lt;/code&gt; makes the draw handler&#xA;easier but the event handler harder.&lt;/p&gt;&#xA;&lt;p&gt;The coordinates (0,0) will represent the lower left square on the&#xA;tic-tac-toe board, and (0,1) will be the middle left square.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch07 WS 01</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws01/</link>
      <pubDate>Mon, 25 Oct 2021 11:36:11 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws01/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Translate each expression into Racket. You can look up &lt;a href=&#34;https://docs.racket-lang.org/reference/generic-numbers.html&#34;&gt;lots of&#xA;arithmetic&#xA;functions&lt;/a&gt;&#xA;if you are interested. There&amp;rsquo;s more if you are into &lt;a href=&#34;https://docs.racket-lang.org/math/number-theory.html&#34;&gt;KAM or math&#xA;team&lt;/a&gt; subjects.&lt;/p&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Does the test &lt;code&gt;(check-within (sqrt 11) 3 0.3)&lt;/code&gt; pass?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In this statement, what is the expected answer?&lt;/li&gt;&#xA;&lt;li&gt;In this statement, what is the tolerance (the amount of error&#xA;allowed in a correct answer)?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a &lt;code&gt;check-within&lt;/code&gt; statement that says &lt;code&gt;(sqrt 19)&lt;/code&gt; is $4.4 \pm&#xA;0.05$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snake Intro</title>
      <link>https://wy-cs.info/intermediate-cs/projects/snake/10-snake-intro/</link>
      <pubDate>Mon, 26 Apr 2021 13:07:59 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/snake/10-snake-intro/</guid>
      <description>&lt;p&gt;In the game of snake, your object is to eat food and get as long as&#xA;you can without running into yourself, the walls, or another player.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Wikipedia entry on the&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Snake_(video_game_genre)&#34;&gt;Snake&lt;/a&gt;&#xA;video game.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Play &lt;a href=&#34;https://www.google.com/fbx?fbx=snake_arcade&#34;&gt;snake&lt;/a&gt; online in&#xA;one of its &lt;a href=&#34;https://playsnake.org/&#34;&gt;many&lt;/a&gt;&#xA;&lt;a href=&#34;https://slither.io&#34;&gt;forms&lt;/a&gt;. You might not be able to access some of&#xA;these from the school internet.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The Google version of the game looks like the one below. Make sure you&#xA;turn the sound off!&lt;/p&gt;</description>
    </item>
    <item>
      <title>p-values</title>
      <link>https://wy-cs.info/ml/daily/20210421/</link>
      <pubDate>Wed, 21 Apr 2021 10:48:29 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/20210421/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Key questions for class discussion:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;I get the purpose of the null hypothesis $H_0$, what is the purpose&#xA;of the other distribution?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How often do you expect your experiment to produce $p$-values less&#xA;than 0.05?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grid</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/parcels/grid/</link>
      <pubDate>Tue, 13 Apr 2021 21:50:03 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/parcels/grid/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;A grid is a set of evenly spaced points. For example, below is a 4x3&#xA;grid.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(1,1) (2,1) (3,1) (4,1)&#xA;(1,2) (2,2) (3,2) (4,2)&#xA;(1,3) (2,3) (3,3) (4,3)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;We would represent this grid as one long list of posns. It is easier&#xA;to write the grid-creating functions if we count down, for example&#xA;beginning with x=4 and ending with x=1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Intro</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/intro/</link>
      <pubDate>Tue, 23 Feb 2021 08:58:13 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/intro/</guid>
      <description>&lt;p&gt;You move a little ball around the screen by positioning your mouse&#xA;inside the control center in the upper right corner of the screen. The&#xA;position of the mouse relative to the &amp;ldquo;origin&amp;rdquo; of the axes in the&#xA;control center detemines which way the ball will move (and how far).&lt;/p&gt;&#xA;&lt;p&gt;Motion is caused by mouse-events, so the ball does not move unless you&#xA;are moving or clicking the mouse.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch20/ball-driving/intro/ball-driving-1.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;When the ball is entirely inside the target circle, the game is over&#xA;and you win.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CS Questions</title>
      <link>https://wy-cs.info/docs/future/cs-questions/</link>
      <pubDate>Thu, 11 Feb 2021 22:15:08 -0600</pubDate>
      <guid>https://wy-cs.info/docs/future/cs-questions/</guid>
      <description>&lt;h2 id=&#34;do-i-need-lots-of-math&#34;&gt;Do I need lots of math?&lt;/h2&gt;&#xA;&lt;p&gt;You can be successful in computer science without being good at math,&#xA;but it is more challenging.&lt;/p&gt;&#xA;&lt;p&gt;You should take all of the math classes you can.&lt;/p&gt;&#xA;&lt;p&gt;Develop an &lt;strong&gt;understanding why&lt;/strong&gt; you are doing things in math&#xA;class. That understanding of &lt;em&gt;why&lt;/em&gt; math works translates directly into thinking&#xA;about &lt;em&gt;why&lt;/em&gt; a computer is doing the things it is doing.&lt;/p&gt;&#xA;&lt;p&gt;There is a lot more &lt;strong&gt;problem solving&lt;/strong&gt; in a computer science class than&#xA;in a many math classes. Solving the same problem over and over to&#xA;build a skill happens a lot in math classes. While you are learning&#xA;computer science, you have to learn how to solve new problems in every&#xA;assignment. The expectation is that you will be able to use the ideas&#xA;you learn in new ways.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jupyter Graphing</title>
      <link>https://wy-cs.info/ml/rmisc/jupyter-graphing/</link>
      <pubDate>Mon, 21 Sep 2020 11:52:18 -0500</pubDate>
      <guid>https://wy-cs.info/ml/rmisc/jupyter-graphing/</guid>
      <description>&lt;p&gt;This page includes code to make plots more readable and code to update&#xA;an internal package.&lt;/p&gt;&#xA;&lt;h2 id=&#34;more-readable-plots&#34;&gt;More readable plots&lt;/h2&gt;&#xA;&lt;p&gt;I use these options to make my Jupyter notebook plots look good.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;options(repr.plot.width=10, repr.plot.height=6)&#xA;theme_update(text = element_text(size=20))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;farver-update&#34;&gt;Farver Update&lt;/h2&gt;&#xA;&lt;p&gt;(Last tested: 2020-09-23.)&#xA;I have had weird errors (see below) when trying to use fill colors&#xA;with a continuous variable. Solution: make&#xA;sure you have an up-to-date &amp;ldquo;farver&amp;rdquo; package.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;install.packages(c(&amp;#34;farver&amp;#34;))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you get the error message, you will need to reload the kernel to&#xA;get the up-to-date &amp;ldquo;farver&amp;rdquo; package.&#xA;Choose the menu option &amp;ldquo;Runtime -&amp;gt; Restart and run all&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch01</title>
      <link>https://wy-cs.info/ml/r4ds/ch01/</link>
      <pubDate>Thu, 10 Sep 2020 09:57:10 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch01/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Section 1.4 does not describe the method we will use for accessing R.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What are the steps used in a typical data science project?&lt;/li&gt;&#xA;&lt;li&gt;Define what the authors mean by &amp;ldquo;tidy data&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;Transformations&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There are three types of transformations listed. Give each type.&lt;/li&gt;&#xA;&lt;li&gt;Briefly describe a (possibly imaginary) dataset (&lt;em&gt;not&lt;/em&gt; from the book).&lt;/li&gt;&#xA;&lt;li&gt;Using this data set, give an example of each type of transformation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;The book mentions both visualization and modeling. Which is more appropriate for the beginning of an investigation, and why?&lt;/li&gt;&#xA;&lt;li&gt;How large does the book consider to be a &amp;ldquo;small&amp;rdquo; data set? How big would a &amp;ldquo;larger&amp;rdquo; data set be? Does the book give a clue at what point the authors start to consider a data set &amp;ldquo;Big Data&amp;rdquo;?&lt;/li&gt;&#xA;&lt;li&gt;Name at least two other computer languages commonly uesd in data science.&lt;/li&gt;&#xA;&lt;li&gt;What would the authors think about me teaching Python and Hadoop alongside of R in this class? Explain their reasoning.&lt;/li&gt;&#xA;&lt;li&gt;In a nutshell, what is the difference between  exploration and hypothesis confirmation?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;getting-help&#34;&gt;Getting Help&lt;/h2&gt;&#xA;&lt;p&gt;Section 1.6 has some brief information about how to figure out what is going on when something goes wrong. At the start, here is some advice:&lt;/p&gt;</description>
    </item>
    <item>
      <title>AP CS Skills Intro</title>
      <link>https://wy-cs.info/ap-cs/prep/skills-intro/</link>
      <pubDate>Wed, 17 Jun 2020 12:16:19 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/prep/skills-intro/</guid>
      <description>&lt;p&gt;At Whitney Young, AP Computer Science A is the second course in the&#xA;programming sequence. The expectation is that you have mastered the&#xA;skills of Intermediate Computer Science.&lt;/p&gt;&#xA;&lt;p&gt;The purpose of a summer assignment is so that you have some additional&#xA;evidence that you have mastered these skills. The end of Spring 2020&#xA;was unusual, so more people than usual may need to review in the&#xA;summer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;skills-required&#34;&gt;Skills Required&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;structures&lt;/li&gt;&#xA;&lt;li&gt;lists&lt;/li&gt;&#xA;&lt;li&gt;write check-expects to see if functions work&lt;/li&gt;&#xA;&lt;li&gt;how to manage a large project&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;skills-we-will-learn&#34;&gt;Skills We Will Learn&lt;/h2&gt;&#xA;&lt;p&gt;There is no need to learn these in the summer, we will learn them in&#xA;AP CS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Checkers Outline</title>
      <link>https://wy-cs.info/intermediate-cs/typed/checkers/outline/</link>
      <pubDate>Mon, 20 May 2019 07:21:56 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/checkers/outline/</guid>
      <description>&lt;p&gt;The game development process has several steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/typed/checkers/model/&#34;&gt;Examples&lt;/a&gt;: write down several examples&#xA;showing different situations&#xA;that will occur in the game. Make sure you consider all of the&#xA;possiblities.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/typed/checkers/model/#model-structure&#34;&gt;Model&lt;/a&gt;: decide on the model you will use for the game.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Draw handler. Show whose move it is as well as drawing the board.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/typed/checkers/legal-moves/&#34;&gt;Legal moves&lt;/a&gt;. A very important&#xA;function: determine if a move is legal!&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; legal-move?: Game Posn -&amp;gt; Boolean&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Support functions: we will practice function design (including&#xA;writing check-expects) to make functions we will need.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino Intro</title>
      <link>https://wy-cs.info/ecs/arduino/arduino-intro/</link>
      <pubDate>Mon, 06 May 2019 11:52:37 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/arduino-intro/</guid>
      <description>&lt;p&gt;We use &lt;a href=&#34;https://store.arduino.cc/usa/arduino-uno-rev3&#34;&gt;Arduino Uno&lt;/a&gt;&#xA;compatible boards, programmed with &lt;a href=&#34;https://snap4arduino.rocks&#34;&gt;Snap4Arduino&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The materials we used are based off of the &lt;a href=&#34;https://www.sparkfun.com/&#34;&gt;SparkFun&lt;/a&gt; &lt;a href=&#34;https://www.sparkfun.com/products/14265&#34;&gt;Inventor&amp;rsquo;s Kit&lt;/a&gt;&#xA;&lt;a href=&#34;https://learn.sparkfun.com/tutorials/sparkfun-inventors-kit-experiment-guide---v40/all&#34;&gt;&lt;strong&gt;Experiment&#xA;Guide&lt;/strong&gt;&lt;/a&gt;. SparkFun&#xA;has lots of &lt;a href=&#34;https://learn.sparkfun.com/&#34;&gt;learning materials&lt;/a&gt; if you&#xA;are interested.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;If you are not using a school computer, you will want to install the&#xA;same software that we have:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.arduino.cc/en/Main/Software#download&#34;&gt;Arduino IDE&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://snap4arduino.rocks/#download&#34;&gt;Snap4Arduino&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If you are using a school computer that does not have Snap4Arduino,&#xA;you should install the &amp;ldquo;MS Windows portable (64 bits)&amp;rdquo; version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typed Intro</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-intro/</link>
      <pubDate>Mon, 06 May 2019 07:20:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-intro/</guid>
      <description>&lt;p&gt;Many of the most common languages in use today require you to specify&#xA;the types on inputs and outputs of a function. That is to say, they&#xA;every function requires a signature.&lt;/p&gt;&#xA;&lt;p&gt;There are two main benefits to this kind of typing:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;. The code runs faster when the computer has no doubt that&#xA;a certain variable always contains a certain kind of value, like a&#xA;posn.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Reliability&lt;/strong&gt;. The computer can check before starting the program&#xA;that there is never a time when the &lt;code&gt;posn-x&lt;/code&gt; function is called on&#xA;a &lt;code&gt;color&lt;/code&gt;. In regular Racket, this kind of mistake causes the&#xA;program to halt with an error &lt;em&gt;when the mistake runs&lt;/em&gt;. In Typed&#xA;Racket, the mistake is detected before the program starts running -&#xA;there is no suspense and no uncertainty.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Model</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/model/</link>
      <pubDate>Mon, 08 Apr 2019 08:17:17 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/model/</guid>
      <description>&lt;p&gt;The process for developing a model is always the same:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Background knowledge: understand the rules and decide what you want&#xA;your game to look like when you play it. We will play &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Battleships_Paper_Game.svg&#34;&gt;Battleship on paper&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Draw at least three scenes from different stages of the game. In&#xA;this case, you will want more &amp;ndash; include a win screen, a lose&#xA;screen, and three others.&lt;/li&gt;&#xA;&lt;li&gt;List the information necessary to draw the scenes.&lt;/li&gt;&#xA;&lt;li&gt;Write down the model you will use.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;step-1-battleship-on-paper&#34;&gt;Step 1: Battleship on paper&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make two 8x8 grids, one for your ships and one for your attacks on the opponent.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Triangle</title>
      <link>https://wy-cs.info/ap-cs/solving/number-triangle/</link>
      <pubDate>Mon, 18 Mar 2019 15:32:57 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/number-triangle/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a function to read a file full of numbers into an array&#xA;(&lt;code&gt;int [][]nums&lt;/code&gt;), one row of numbers from the file becomes one row&#xA;of numbers in the array. It is OK to just have an input be how many rows are&#xA;in the triangle. Signature:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static int[][] readNums(int rows, Scanner s)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a function to write a triangle of numbers into a&#xA;file.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static void triwrite (int rows, PrintWriter p)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Find the maximum possible sum along any path that goes down or down&#xA;and right from the top to the bottom row of your triangle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. File</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/file/</link>
      <pubDate>Thu, 14 Mar 2019 09:18:19 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/file/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.skylit.com/javamethods2/ppt/Ch15.ppt&#34;&gt;Java Method Chapter 15 powerpoint&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Doc Mo &lt;a href=&#34;https://docs.google.com/presentation/d/1V2-4-zOpXjqM_QwZbr6-rGa5xGRsRN7PViIGPeMKwuM/edit?usp=sharing&#34;&gt;chapter 15 presentation with exercises&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Official Java&#xA;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/io/File.html&#34;&gt;File&lt;/a&gt; documentation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;exercises-day-1&#34;&gt;Exercises Day 1&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Day 1: &lt;code&gt;public static void listAll(String location)&lt;/code&gt;: print out&#xA;files in a given folder/directory. Example: &lt;code&gt;listAll(&amp;quot;stuff/aaron&amp;quot;);&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Review 01-05</title>
      <link>https://wy-cs.info/ecs/python/review-01-05/</link>
      <pubDate>Mon, 11 Mar 2019 14:06:10 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/review-01-05/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The key next to the return key has both a single and double quote&#xA;on it. Write a single print statement to show both characters on&#xA;that key.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;figure&amp;gt;&amp;lt;img src=&amp;quot;/ecs/python/review-01-05/keys.png&amp;quot;&amp;gt;&amp;lt;figcaption&amp;gt;&#xA;      &amp;lt;h4&amp;gt;Part of a keyboard&amp;lt;/h4&amp;gt;&#xA;    &amp;lt;/figcaption&amp;gt;&#xA;&amp;lt;/figure&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Line maker: input an integer m. Fill in the value of m in the print&#xA;statement below.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Print: y = m * x&lt;/li&gt;&#xA;&lt;li&gt;Print the answer to the question: when x = 8, what is y?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example: person types &amp;ldquo;3&amp;rdquo;, then the program prints out:&lt;/p&gt;</description>
    </item>
    <item>
      <title>14. Comparable Intro</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/comparable-intro/</link>
      <pubDate>Tue, 26 Feb 2019 09:45:33 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/comparable-intro/</guid>
      <description>&lt;p&gt;A class implements the &lt;code&gt;Comparable&lt;/code&gt; interface when there is a way to&#xA;decide whether one object of the class is greater than another. The&#xA;&lt;code&gt;compareTo&lt;/code&gt; method is the way to find out how the two classes&#xA;compare.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Posn Util</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/posn-util/</link>
      <pubDate>Tue, 08 Jan 2019 08:32:15 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/posn-util/</guid>
      <description>&lt;p&gt;The functions in 20.5 are all useful later. When you do them, you should&#xA;save them in a file called &lt;code&gt;posn-util.rkt&lt;/code&gt;. (Please use that name.)&lt;/p&gt;&#xA;&lt;p&gt;The following functions should be in &lt;code&gt;posn-util.rkt&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;posn=?&lt;/code&gt;: posn posn -&amp;gt; boolean. Are both positions exactly the same? (Both corresponding coordinates match.)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;posn-add&lt;/code&gt;: posn posn -&amp;gt; posn. Add corresponding coordinates.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;posn-sub&lt;/code&gt;: posn posn -&amp;gt; posn. Subtract corresponding&#xA;coordinates. First minus second.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;posn-scale&lt;/code&gt;: number posn -&amp;gt; posn. Multiply both coordinates by the&#xA;same number.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;posn-distance&lt;/code&gt;: posn posn -&amp;gt; number. The distance in the plane between&#xA;the points specified by the two posns.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;place-image/posn&lt;/code&gt;: image posn image(background) -&amp;gt; image. Purpose:&#xA;Place one image at a given set of coordinates on a given background.&lt;/li&gt;&#xA;&lt;li&gt;Anything else you want to have available for re-use. (Maybe from&#xA;physics or trig&amp;hellip;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You should write tests for yourself. You are going to use these&#xA;functions for a month, so you do not want any mistakes. If you really&#xA;need them, you can see &lt;a href=&#34;posn-tests.rkt&#34;&gt;some tests I wrote&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Slides</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-slides/</link>
      <pubDate>Tue, 11 Dec 2018 08:52:32 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-slides/</guid>
      <description>&lt;h1 id=&#34;hurts&#34;&gt;Hurts?&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;hurts?: boolean(hit) boolean(hard) -&amp;gt; boolean&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;It only hurts if you get hit and the hit was hard.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;care&#34;&gt;Care&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;care: boolean(injured) number(blood) -&amp;gt; string&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;ER&amp;rdquo; if injured with more than 10 blood.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Urgent Care&amp;rdquo; if injured but the amount of blood is between 5 and 10.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;No&amp;rdquo; if you are not injured or there is not much blood.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;red-blue&#34;&gt;Red-Blue&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;(red-blue-1 n)&lt;/code&gt; gives &amp;ldquo;red&amp;rdquo; if the number is less than 30,&#xA;otherwise &amp;ldquo;blue&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(red-blue-2 xxx)&lt;/code&gt; gives &amp;ldquo;red&amp;rdquo; 30% of the time and &amp;ldquo;blue&amp;rdquo; 70% of&#xA;the time.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;mystery-function&#34;&gt;Mystery Function&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;scrunch&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Give 3 examples what it does.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Array Basic Facts</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-intro-1/</link>
      <pubDate>Fri, 07 Dec 2018 09:11:27 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-intro-1/</guid>
      <description>&lt;p&gt;The fundamentals:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create (make space for) an array:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;names&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Justyn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Connor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Leo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Ellie&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Arrays in Java do not grow or shrink. There is no &lt;code&gt;+=&lt;/code&gt; for arrays.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The length of the &lt;code&gt;data&lt;/code&gt; array is &lt;code&gt;data.length&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Arrays without &lt;code&gt;new&lt;/code&gt; have no space created for them.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// error, array is not made at all!!&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// error, certainly no item 0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Getting values from an array:&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Number Models 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/models-1/</link>
      <pubDate>Tue, 13 Nov 2018 14:25:10 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/models-1/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A circle increases its radius by 5 every tick. Hitting a key&#xA;reduces the radius by 50%.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A square moves along a horizontal line. Every time you move the mouse, it moves right 1 pixel. When you hit a key it moves left 4 pixels.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A small solid circle randomly moves between x=20, x=60, and x=100 on a fixed horizontal line. (You pick the $y$ coordinate.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Writing Basic Classes 1</title>
      <link>https://wy-cs.info/ap-cs/jm/ch03/class-basic-1/</link>
      <pubDate>Wed, 07 Nov 2018 09:42:05 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch03/class-basic-1/</guid>
      <description>&lt;h1 id=&#34;rectangle&#34;&gt;Rectangle&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Class header&lt;/li&gt;&#xA;&lt;li&gt;Instance variables&lt;/li&gt;&#xA;&lt;li&gt;Constructor&lt;/li&gt;&#xA;&lt;li&gt;Accessor: getWidth&lt;/li&gt;&#xA;&lt;li&gt;Method: area&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;square&#34;&gt;Square&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Class header&lt;/li&gt;&#xA;&lt;li&gt;Constructor&lt;/li&gt;&#xA;&lt;li&gt;etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;addconstant&#34;&gt;AddConstant&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Constructor, &lt;code&gt;addTo&lt;/code&gt;, &lt;code&gt;setConstant&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Knows constant to add&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AddConstant&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;AddConstant&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;addTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// gives x=12&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;addTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// gives x=85&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;setConstant&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// now does +3 &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;addTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// gives x=10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;rainbowbug&#34;&gt;RainbowBug&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Straight 5 steps&lt;/li&gt;&#xA;&lt;li&gt;Change color: red -&amp;gt; green -&amp;gt; blue&lt;/li&gt;&#xA;&lt;li&gt;Repeat color changes forever&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;instance-variables&#34;&gt;Instance variables?&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Animations Intro Slides</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/animation1/</link>
      <pubDate>Fri, 12 Oct 2018 21:34:49 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/animation1/</guid>
      <description>&lt;h1 id=&#34;intro-to-animation&#34;&gt;Intro to Animation&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;opener&#34;&gt;Opener&lt;/h1&gt;&#xA;&lt;p&gt;Write two functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;rotator: image -&amp;gt; image&lt;/code&gt; that turns the image 10 degrees.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;middle-placer: image -&amp;gt; image&lt;/code&gt; that places the given&#xA;image in the center of a yellow circle of radius 200.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;animation-code&#34;&gt;Animation Code&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;starter&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;purple&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;delay-time&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;starter&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-tick&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rotator&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;delay-time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;middle-placer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;animation-vocabulary&#34;&gt;Animation Vocabulary&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;model: the part that changes&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;on-tick: model -&amp;gt; model&lt;/p&gt;&#xA;&lt;p&gt;Moves to next time.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;on-draw: model -&amp;gt; image&lt;/p&gt;&#xA;&lt;p&gt;Shows the result. Draw things that do not move here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Set Map Intro</title>
      <link>https://wy-cs.info/ap-cs/jm/ch20/10-set-map-intro/</link>
      <pubDate>Tue, 22 May 2018 08:53:38 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch20/10-set-map-intro/</guid>
      <description>&lt;p&gt;See the &lt;a href=&#34;http://www.skylit.com/javamethods2/ppt/Ch20.ppt&#34;&gt;Java Methods Chapter 20&#xA;Powerpoint&lt;/a&gt; for a&#xA;discussion, beginning around page 33.&lt;/p&gt;&#xA;&lt;h2 id=&#34;set&#34;&gt;Set&lt;/h2&gt;&#xA;&lt;p&gt;The interface &lt;code&gt;Set&lt;/code&gt; represents a mathematical set. Implementing classes include &lt;code&gt;HashSet&lt;/code&gt; and &lt;code&gt;TreeSet&lt;/code&gt;. Sets can answer the question &amp;ldquo;is this item in the set?&amp;rdquo; using the &lt;code&gt;contains&lt;/code&gt; method. That&amp;rsquo;s really all a set can do.&lt;/p&gt;&#xA;&lt;h2 id=&#34;map&#34;&gt;Map&lt;/h2&gt;&#xA;&lt;p&gt;The interface &lt;code&gt;Map&lt;/code&gt; represents a mathematical function. The inputs to the function are called &amp;ldquo;keys&amp;rdquo; and the outputs of the function are called &amp;ldquo;values&amp;rdquo;. Implementing classes include &lt;code&gt;HashMap&lt;/code&gt; and &lt;code&gt;TreeMap&lt;/code&gt;.&#xA;A map can answer the question &amp;ldquo;when I put this item in, what value comes out?&amp;rdquo; by using the &lt;code&gt;get&lt;/code&gt; method. There is no &lt;code&gt;set&lt;/code&gt; method, but you can change the output value by using &lt;code&gt;put(key, newValue)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Overview</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-overview/</link>
      <pubDate>Mon, 30 Apr 2018 09:22:06 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-overview/</guid>
      <description>&lt;p&gt;Universe gives a way to have multiple big-bangs communicate.&lt;/p&gt;&#xA;&lt;p&gt;Each big-bang is individually called a &amp;ldquo;world&amp;rdquo;. They are also called &amp;ldquo;clients&amp;rdquo;. There is one &amp;ldquo;universe&amp;rdquo; running, which is the &amp;ldquo;server&amp;rdquo;. The universe server coordinates all of the communication between the big-bang clients.&lt;/p&gt;&#xA;&lt;p&gt;There are some new technical additions to &lt;code&gt;big-bang&lt;/code&gt;, and some recommendations for the design process.&lt;/p&gt;&#xA;&lt;h2 id=&#34;technical-information&#34;&gt;Technical Information&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(make-package model message)&lt;/code&gt;: Returned from a handler to update the model and send a message.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. File Intro</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/file-intro/</link>
      <pubDate>Wed, 18 Apr 2018 10:28:09 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/file-intro/</guid>
      <description>&lt;p&gt;Sample code: &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone/tree/master/ch15&#34;&gt;class github&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You should be familiar with the basic methods listed in the &lt;a href=&#34;http://www.skylit.com/javamethods2/ppt/index.html&#34;&gt;JavaMethods Chapter 15 PowerPoint&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;file&#34;&gt;File&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/io/File.html&#34;&gt;official File documentation&lt;/a&gt; has all of the details. This is a brief summary of methods you are likely to use.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;new File(&amp;quot;filename&amp;quot;)&lt;/code&gt;. I recommend you only files in the same directory as your Java program, until you become very comfortable with Files.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;String getName()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;long lastModified()&lt;/code&gt;: Return modification time, in unusual units.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;boolean isDirectory()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;File[] listFiles()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;scanner&#34;&gt;Scanner&lt;/h2&gt;&#xA;&lt;p&gt;Consult the &lt;a href=&#34;http://www.skylit.com/javamethods2/ppt/Ch15.ppt&#34;&gt;Chapter 15 PowerPoint&lt;/a&gt; for common functions or &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/Scanner.html&#34;&gt;the official documentation&lt;/a&gt; for full information.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Q3. Classes More 1</title>
      <link>https://wy-cs.info/ap-cs/jm/q3review/classes-more-1/</link>
      <pubDate>Wed, 04 Apr 2018 08:51:54 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/q3review/classes-more-1/</guid>
      <description>&lt;p&gt;We have &lt;code&gt;NoisyDog&lt;/code&gt; and &lt;code&gt;SportsFan&lt;/code&gt; classes to practice working with&#xA;abstract classes and implementing interfaces.&lt;/p&gt;&#xA;&lt;h2 id=&#34;noisydog&#34;&gt;NoisyDog&lt;/h2&gt;&#xA;&lt;p&gt;Write the abstract class &lt;code&gt;Noisy&lt;/code&gt; and the subclass &lt;code&gt;NoisyDog&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The constructor should take in a number N that represents how many&#xA;times it makes a noise. Remember the number N to use later.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;noise()&lt;/code&gt; method will make the (unspecified) noise one time. It&#xA;is abstract because the noise is not specified and there is no good&#xA;&amp;ldquo;default&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming Practice 1</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-1/</link>
      <pubDate>Mon, 05 Mar 2018 09:57:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-1/</guid>
      <description>&lt;p&gt;2018-02-26:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/keep-swimming&#34;&gt;Keep Swimming&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/keep-swimming&#34;&gt;Pipe Pals&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We learned how to look up the Javadoc pages for the &lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/lang/Character.html&#34;&gt;Character&lt;/a&gt; class to find the &lt;code&gt;isUpperCase&lt;/code&gt; and &lt;code&gt;isLowerCase&lt;/code&gt; methods.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2018-02-28:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/blurry-memory&#34;&gt;Blurry Memory&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We wrote code to read in the data and discussed a strategy to finish.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>22. List Intro</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-intro/</link>
      <pubDate>Fri, 23 Feb 2018 11:14:59 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-intro/</guid>
      <description>&lt;p&gt;We started learning about lists. (Chapter 22-23 in Picturing Programs.) Picturing Programs can be kind of long-winded in these chapters.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/ch22b/list-resources/&#34;&gt;Alternative sources&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Things to know:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Empty lists: &lt;code&gt;empty&lt;/code&gt; or &lt;code&gt;(list )&lt;/code&gt; or &lt;code&gt;&#39;()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;empty?&lt;/code&gt; : list -&amp;gt; boolean&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(list &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;first&lt;/code&gt;: list of Things -&amp;gt; Thing&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;: list -&amp;gt; list&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;list*&lt;/code&gt; to add to the front of a list&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cons&lt;/code&gt;: adds one item at the front of a list (not needed)&lt;/li&gt;&#xA;&lt;li&gt;Contract example: &lt;code&gt;(-&amp;gt; (listof number?) number?)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;List processing always begins with a choice (conditional) to see if&#xA;the list is empty or not. The else clause almost always contains&#xA;&lt;code&gt;(first the-list)&lt;/code&gt; and &lt;code&gt;(recursive-call (rest the-list))&lt;/code&gt;, combined in&#xA;some way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14. Comparable</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/comparable/</link>
      <pubDate>Mon, 12 Feb 2018 11:49:54 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/comparable/</guid>
      <description>&lt;p&gt;Comparable means that two items in a class can be compared (less than,&#xA;equal to, greater than). It is similar to the &lt;code&gt;Ord&lt;/code&gt; typeclass in Haskell.&lt;/p&gt;&#xA;&lt;p&gt;Comparable is an interface. You implement it.  It is a template, so&#xA;you put the class you are able to compare to in angle brackets&#xA;afterwards. I expect this to be the same class as the one that is&#xA;implementing the &lt;code&gt;Comparable&lt;/code&gt; interface.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;public class Whatever implements Comparable&amp;lt;Thing&amp;gt; { &#xA;    public int compareTo (Thing other) {&#xA;        // ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The &lt;code&gt;compareTo&lt;/code&gt; function gives an integer that indicates whether&#xA;&lt;code&gt;this&lt;/code&gt; is greater than &lt;code&gt;other&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14. Comparable Exercises</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/comparable-ex/</link>
      <pubDate>Mon, 12 Feb 2018 11:49:54 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/comparable-ex/</guid>
      <description>&lt;p&gt;Comparable means that two items in a class can be compared (less than,&#xA;equal to, greater than). It is similar to the &lt;code&gt;Ord&lt;/code&gt; typeclass in Haskell.&lt;/p&gt;&#xA;&lt;p&gt;Comparable is an interface. You implement it.  It is a template, so&#xA;you put the class you are able to compare to in angle brackets&#xA;afterwards. I expect this to be the same class as the one that is&#xA;implementing the &lt;code&gt;Comparable&lt;/code&gt; interface.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;public class Whatever implements Comparable&amp;lt;Thing&amp;gt; { &#xA;    public int compareTo (Thing other) {&#xA;        // ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The &lt;code&gt;compareTo&lt;/code&gt; function gives an integer that indicates whether&#xA;&lt;code&gt;this&lt;/code&gt; is greater than &lt;code&gt;other&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Math Soln 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/pv-tick-handler/math-soln-1/</link>
      <pubDate>Wed, 07 Feb 2018 08:18:24 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/pv-tick-handler/math-soln-1/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;sqr&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>13. Avoid Aardvark</title>
      <link>https://wy-cs.info/ap-cs/jm/ch13/aardvark/</link>
      <pubDate>Tue, 06 Feb 2018 10:31:58 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch13/aardvark/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1gLoI2KTCvALpSvW26gLePK7NVkqIe84Aq9lgYkWqL24/edit?usp=sharing&#34;&gt;Google Presentation with all of the ArrayList in-class problems&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ArrayList 5, page 12&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;avoidAardvarks&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Include the &lt;a href=&#34;https://wy-cs.info/ap-cs/testing/testing-intro/&#34;&gt;boilerplate&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  import org.junit.*;&#xA;  import org.junit.runner.*;&#xA;  import static org.junit.Assert.*;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;See code at the end of the presentation (linked above) if you prefer not to just &amp;ldquo;add&amp;rdquo; to  results.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Recall: &lt;code&gt;@Before&lt;/code&gt; and &lt;code&gt;@Test&lt;/code&gt; must appear before &lt;em&gt;functions&lt;/em&gt;, not statements.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Testing &lt;code&gt;ArrayList&lt;/code&gt; is simplest if you use the &lt;code&gt;toArray()&lt;/code&gt; method and &lt;code&gt;assertArrayEquals&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit Testing Level I</title>
      <link>https://wy-cs.info/ap-cs/testing/testing-intro/</link>
      <pubDate>Fri, 19 Jan 2018 10:23:21 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/testing/testing-intro/</guid>
      <description>&lt;p&gt;Start testing little pieces of your code so it is not so hard for you&#xA;to figure out what goes wrong. In Racket, we used the &lt;code&gt;check-expect&lt;/code&gt;&#xA;system.  In Java there is a similar system called JUnit. This page&#xA;explains how to use the &lt;a href=&#34;http://junit.org/junit4/&#34;&gt;JUnit 4&lt;/a&gt; system&#xA;that is built into BlueJ.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-testing&#34;&gt;Basic Testing&lt;/h2&gt;&#xA;&lt;p&gt;(Include the boilerplate code from the next section!)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;@Test&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;assertEquals(correct, actual)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;assertEquals(correct, actual, close_enough)&lt;/code&gt;: Like &lt;code&gt;check-within&lt;/code&gt;, this is for comparing floating point values (&lt;code&gt;double&lt;/code&gt;). Test succeeds if &lt;code&gt;|correct - actual| &amp;lt; close_enough&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;assertArrayEquals(correct, actual)&lt;/code&gt;: Compare arrays.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>21. Worksheet A</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/21-ws-a/</link>
      <pubDate>Thu, 11 Jan 2018 22:07:05 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/21-ws-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Write a data description for a structure &amp;ldquo;computer&amp;rdquo; that stores the memory (e.g., 4GB), used hard disk space (e.g., 104.9 GB) , and has a textual description of its location (e.g., &amp;ldquo;leftmost computer by the window&amp;rdquo;).&lt;/li&gt;&#xA;&lt;li&gt;Write the definition for this structure.&lt;/li&gt;&#xA;&lt;li&gt;Create the computer from the example above.&lt;/li&gt;&#xA;&lt;li&gt;Test your code by showing that the location of the computer you made is &amp;ldquo;leftmost computer by the window&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;Design and test a function that is true when the computer has at least 4GB of memory.&lt;/li&gt;&#xA;&lt;li&gt;Design and test a function &amp;ldquo;empty-trash&amp;rdquo; which takes a computer and decreases the used hard disk space by 15% (producing a computer).&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>I.1 Semester I Review 1</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-1/</link>
      <pubDate>Mon, 08 Jan 2018 08:49:18 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Random shape&lt;/strong&gt;. Write a function that returns a square, circle, or triangle. All should be equally likely.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;random-shape: ignore -&amp;gt; image&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Drift&lt;/strong&gt;. A smiley face starts at some position on the screen. It randomly drifts 5 pixels in some direction (up, down, left, or right) every 0.2 seconds. Write the function that gives its new position.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drift-to-new: posn(old) -&amp;gt; posn(new)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reduce green&lt;/strong&gt;. Write a function &lt;code&gt;less-green&lt;/code&gt; that reduces the amount of green in a color by 25%.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less-green: color -&amp;gt; color&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>10. Overview</title>
      <link>https://wy-cs.info/ap-cs/jm/ch10/10-overview/</link>
      <pubDate>Thu, 14 Dec 2017 22:19:19 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch10/10-overview/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Strings are immutable. &amp;ldquo;Changing&amp;rdquo; functions like &lt;code&gt;s.toUpperCase()&lt;/code&gt; actually return a copy; they do not affect the original.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Understand the box and arrow diagrams on page 269.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;String methods (summarized on page 271, Figure 10-3):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;s.length()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.charAt(idx)&lt;/code&gt;: but note the answer is a &lt;code&gt;char&lt;/code&gt; not a &lt;code&gt;String&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.substring(start)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.substring(start,end)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.equals(otherString)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.compareTo()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;s.indexOf(&amp;quot;wanted&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Useful in real life: &lt;code&gt;trim&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt;, &lt;code&gt;toLowerCase&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;105-formatting&#34;&gt;10.5: Formatting&lt;/h3&gt;&#xA;&lt;p&gt;Lots of detail on how to get a number to appear exactly the way you want it. Read if you are advanced.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Strings for Experts</title>
      <link>https://wy-cs.info/intermediate-cs/pro/pro-string/</link>
      <pubDate>Sun, 19 Nov 2017 15:30:06 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/pro-string/</guid>
      <description>&lt;p&gt;This page contains information about advanced topics that I have been asked.&lt;/p&gt;&#xA;&lt;h2 id=&#34;randomizing-letters-of-a-string&#34;&gt;Randomizing Letters of a String&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;implode&lt;/code&gt; and &lt;code&gt;explode&lt;/code&gt; functions change strings to and from lists of single letters.&#xA;To randomize a list, import &lt;code&gt;racket/list&lt;/code&gt; and then use the &lt;code&gt;shuffle&lt;/code&gt; function.&#xA;If you are actually looking at lists, you should change to Beginning Student with List Abbreviations.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;picturing-programs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;racket/list&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mix&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;implode&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;shuffle&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;explode&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;letters&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mix&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;alphabet soup&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;advanced-string-making&#34;&gt;Advanced String Making&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There is an optional second argument to &lt;code&gt;number-&amp;gt;string&lt;/code&gt; that is the base to work in.&#xA;&lt;code&gt;(check-expect (number-&amp;gt;string 31 2) &amp;quot;11111&amp;quot;)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Models 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-1/</link>
      <pubDate>Thu, 26 Oct 2017 12:56:12 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-1/</guid>
      <description>&lt;h1 id=&#34;identify-the-model&#34;&gt;Identify the model&lt;/h1&gt;&#xA;&lt;p&gt;A white rectangle background that slowly fades to blue.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;identify-the-model-1&#34;&gt;Identify the model&lt;/h1&gt;&#xA;&lt;p&gt;A shape of your choice moves across the screen, rotating as it moves.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;animate&#34;&gt;Animate&lt;/h1&gt;&#xA;&lt;p&gt;A shape of your choice moves across the screen, rotating as it moves.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Model&lt;/li&gt;&#xA;&lt;li&gt;Get on computer and do it&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;create-the-animation&#34;&gt;Create the animation&lt;/h1&gt;&#xA;&lt;p&gt;A star moves diagonally across the screen from (0,0) to (200,100) on a big 200x200 background.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;challenge&#34;&gt;Challenge&lt;/h1&gt;&#xA;&lt;p&gt;A red star follows the equation of the ellipse (x/100)^2 + (y/50)^2 = 1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git-ting Started</title>
      <link>https://wy-cs.info/ap-cs/git/getting-started/</link>
      <pubDate>Wed, 25 Oct 2017 19:55:58 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/git/getting-started/</guid>
      <description>&lt;h2 id=&#34;downloads-for-home&#34;&gt;Downloads for Home&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git package&lt;/a&gt; for all operating systems.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tortoisegit.org/download/&#34;&gt;Tortoise Git&lt;/a&gt; for Windows only.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tutorials&#34;&gt;Tutorials&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A command line &lt;a href=&#34;https://try.github.io/&#34;&gt;intro to git in 15 minutes&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sitepoint.com/git-for-beginners/&#34;&gt;Git for Beginners&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Beautiful and simple &lt;a href=&#34;http://rogerdudler.github.io/git-guide/&#34;&gt;Git Guide&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;local-instructions&#34;&gt;Local instructions&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an account on GitHub. Use your CPS email.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Apply for an education account.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Join our class in the GitHub Classroom.&#xA;(Tell the teacher your username and get added manually.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>7. Exercises 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-1/</link>
      <pubDate>Tue, 17 Oct 2017 12:46:06 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-1/</guid>
      <description>&lt;p&gt;Practice the design process making each of these functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function that takes in the radius of a circle and outputs the circumference.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function to find the cost of a cart full of g pounds of grapefruit and b pounds of bananas. The grapefruit costs $1.49/lb and the bananas cost $0.59/lb.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Karel 1 and 2</title>
      <link>https://wy-cs.info/ap-cs/karel/ch1&#43;2/</link>
      <pubDate>Mon, 16 Oct 2017 14:53:49 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch1&#43;2/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2017-10-16 Monday: Homework - read Chapters 1 and 2 (pages 1-20).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2017-10-17 Tuesday: Follow GitHub Classroom procedures in the &lt;a href=&#34;https://wy-cs.info/ap-cs/karel/essentials/&#34;&gt;Essentials&lt;/a&gt; Learn enough git to save to the cloud. Homework: spend 20 minutes learning a little more about git.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2017-10-18 Wednesday:&#xA;Do exercises 2.7 and 2.11, incuding making the worlds.&#xA;Please use the names below for the classes you make:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ex 2.7: &lt;code&gt;GroceryPickup&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Ex 2.11: &lt;code&gt;BeeperHandoff&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Chapter 5 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch05/ch05-reading-guide/</link>
      <pubDate>Sun, 24 Sep 2017 13:52:19 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch05/ch05-reading-guide/</guid>
      <description>&lt;p&gt;The purpose of reading this section is to see how an experienced&#xA;author writes functions that work on lists.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-reading-guide/</link>
      <pubDate>Sun, 17 Sep 2017 20:47:05 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-reading-guide/</guid>
      <description>&lt;h2 id=&#34;sections-4143&#34;&gt;Sections 4.1&amp;ndash;4.3&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A pattern starts out with &amp;ldquo;dog&amp;rdquo;,&amp;ldquo;cat&amp;rdquo;, &amp;ldquo;cat dog&amp;rdquo;, &amp;ldquo;cat dog cat&amp;rdquo;,&#xA;&amp;ldquo;cat dog cat cat dog&amp;rdquo;, &amp;ldquo;cat dog cat cat dog cat dog cat&amp;rdquo; and so on - each new string is created by appending the previous two with a space in between them. Write a function that takes in the number of the word in the sequence and returns the word, starting with 1 is &amp;ldquo;dog&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;scalar_mult :: (Num a) =&amp;gt; a -&amp;gt; (a,a) -&amp;gt; (a,a)&lt;/code&gt; that multiplies each number in a coordinate pair by the same number, so &lt;code&gt;scalar_mult 5 (1,3) == (5,15)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pygame Details</title>
      <link>https://wy-cs.info/ai/game/pygame-details/</link>
      <pubDate>Tue, 24 Oct 2023 12:15:58 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/pygame-details/</guid>
      <description>&lt;h2 id=&#34;rectangle-positioning&#34;&gt;Rectangle Positioning&lt;/h2&gt;&#xA;&lt;p&gt;You can control the size and location of a&#xA;&lt;a href=&#34;https://www.pygame.org/docs/ref/rect.html&#34;&gt;Rect&lt;/a&gt; by using these attributes:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;x,y&#xA;top, left, bottom, right&#xA;topleft, bottomleft, topright, bottomright&#xA;midtop, midleft, midbottom, midright&#xA;center, centerx, centery&#xA;size, width, height&#xA;w,h&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;For example, begin by creating a 30x20 rectangle whose upper left is at&#xA;the origin.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;r = pygame.rect.Rect(0,0,30,20)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Moving the center to (150, 100) is simple:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;r.center = (150,100)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Making the rectangle 60 pixels high:&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Libraries</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/20-require/</link>
      <pubDate>Thu, 11 Feb 2021 22:03:55 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/20-require/</guid>
      <description>&lt;p&gt;Use &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;provide&lt;/code&gt; to make functions from one file available&#xA;in another file.&lt;/p&gt;&#xA;&lt;h2 id=&#34;require-and-provide&#34;&gt;Require and provide&lt;/h2&gt;&#xA;&lt;p&gt;Require loads functions from another file. Provide makes functions available for other files to load.&lt;/p&gt;&#xA;&lt;h3 id=&#34;provide&#34;&gt;Provide&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;provide&lt;/code&gt; command makes functions available for other files to&#xA;use. You put it into the file with the functions you want to make&#xA;available.&lt;/p&gt;&#xA;&lt;p&gt;If you just want to make every function in the file available,&#xA;there is a shortcut to do that:&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Exercises 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-2/</link>
      <pubDate>Tue, 17 Oct 2017 12:46:09 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-2/</guid>
      <description>&lt;p&gt;Exercises:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;hypotenuse&lt;/code&gt;: Given the lengths of two legs of a right triangle, return the length of the third side.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;slope&lt;/code&gt;: Given the x and y coordinates of two points (x1,y1) and (x2,y2) - in that order - return the slope of the line between those points. (OK if it does not work for vertical lines.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;distance&lt;/code&gt;: Given the x and y coordinates of two points (x1,y1) and (x2,y2), find the distance between them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14 P2c Param</title>
      <link>https://wy-cs.info/ai/parsing/exercises/14-p2c-param/</link>
      <pubDate>Fri, 15 Mar 2024 11:56:32 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/exercises/14-p2c-param/</guid>
      <description>&lt;h2 id=&#34;pascal-style-to-c-style-parameters&#34;&gt;Pascal style to C-style parameters&lt;/h2&gt;&#xA;&lt;p&gt;In Pascal, fuction parameters are delimited by a semicolon. Replace it&#xA;by C-style comma delimiter. Do not modify semicolons elsewhere.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;void Foo(int x; float y; char z)&#xA;{&#xA;  write(x, y, z);&#xA;}&#xA;&#xA;int Avg(List&amp;lt;int&amp;gt; l; int count)&#xA;{&#xA;  return Sum(l, count)/count;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Desired output:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;void Foo(int x, float y, char z)&#xA;{&#xA;  write(x, y, z);&#xA;}&#xA;&#xA;int Avg(List&amp;lt;int&amp;gt; l, int count)&#xA;{&#xA;  return Sum(l, count)/count;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;http://regextutorials.com/excercise.html?Pascal%20style%20to%20C-style%20parameters&#34;&gt;Original&#xA;source&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Warmups A</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-warmups-a/</link>
      <pubDate>Wed, 07 Dec 2022 14:22:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-warmups-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;pick-pic : Number -&amp;gt; Image&lt;/code&gt; that uses a number 1,&#xA;2, or 3 to select a picture of a water balloon, a deck of cards, or&#xA;a car.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Modify your function so that putting any other number produces a&#xA;picture of a mouse.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;cshape: String -&amp;gt; Image&lt;/code&gt; that uses words&#xA;&amp;ldquo;triangle&amp;rdquo;, &amp;ldquo;rectangle&amp;rdquo;, and &amp;ldquo;circle&amp;rdquo; to select a picture of a red&#xA;triangle, a blue rectangle, or a green circle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Troubleshoot</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/20-troubleshoot/</link>
      <pubDate>Thu, 11 Feb 2021 22:03:59 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/20-troubleshoot/</guid>
      <description>&lt;p&gt;This troubleshooting guide is focused on using &lt;code&gt;posn-util.rkt&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;problems&#34;&gt;Problems&lt;/h3&gt;&#xA;&lt;h4 id=&#34;save-your-posn-util-in-your-cs-folder&#34;&gt;Save your posn-util in your CS folder&lt;/h4&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;&#xA;&#xA;    You need to save your work in the same folder as your &amp;ldquo;posn-util.rkt&amp;rdquo; file, since Racket only looks in the current folder for other files.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This has been the source of a lot of issues:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Verify that the folder you save in is &amp;ldquo;Documents&amp;rdquo; and not &amp;ldquo;Downloads&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;If you are not asked where to save, the file probably ended up in&#xA;Downloads. Go there and drag the file to where you actually want it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;name-the-file-carefully&#34;&gt;Name the file carefully&lt;/h4&gt;&#xA;&lt;p&gt;Downloading the Racket file, one can end up with a file that has two&#xA;suffixes (one of them is invisible). If &lt;code&gt;(require &amp;quot;posn-util.rkt&amp;quot;)&lt;/code&gt;&#xA;does not work, try &lt;code&gt;(require &amp;quot;posn-util.rkt.rkt&amp;quot;)&lt;/code&gt;. If that works,&#xA;delete the extra &lt;code&gt;.rkt&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Exercises 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-3/</link>
      <pubDate>Wed, 18 Oct 2017 15:03:26 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;at-most-250&lt;/code&gt; that takes in a number and puts out the same number, or 250 if the number is larger than 250.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;small-0&lt;/code&gt; that takes in two numbers and gives out the distance to zero of the number that is closest to zero on the number line. It should work with negative numbers as well.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;stuck-50-150&lt;/code&gt; that takes in a number x and gives out x. Except if x is below 50, give an answer of 50. Also if x is more than 150, give an answer of 150.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regex Quizzes</title>
      <link>https://wy-cs.info/ai/parsing/regex-quiz/</link>
      <pubDate>Mon, 18 Mar 2024 10:38:25 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/regex-quiz/</guid>
      <description>&lt;h2 id=&#34;quiz-i&#34;&gt;Quiz I&lt;/h2&gt;&#xA;&lt;h3 id=&#34;a&#34;&gt;A.&lt;/h3&gt;&#xA;&lt;p&gt;Create a regular expression that matches class names in&#xA;Java that begin with capital letters. Examples: &lt;code&gt;AmazingClass&lt;/code&gt;, &lt;code&gt;Sunk_Cost&lt;/code&gt;,&#xA;&lt;code&gt;Goon_1900&lt;/code&gt;. Non-examples: &lt;code&gt;notThisOne&lt;/code&gt; and &lt;code&gt;50_Colors&lt;/code&gt;. Class&#xA;names in Java cannot begin with a number.&lt;/p&gt;&#xA;&lt;h3 id=&#34;b&#34;&gt;B.&lt;/h3&gt;&#xA;&lt;p&gt;The sign of the devil is believed to be 666. The devil has gotten&#xA;craftier, so it is now hiding its sign by putting digits between the&#xA;6&amp;rsquo;s. Write a devil-detecting regex what will not be fooled by this&#xA;method of hiding.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15 Var Init</title>
      <link>https://wy-cs.info/ai/parsing/exercises/15-var-init/</link>
      <pubDate>Fri, 15 Mar 2024 11:54:48 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/exercises/15-var-init/</guid>
      <description>&lt;p&gt;Change variable initialization from &lt;code&gt;var a = new A(...)&lt;/code&gt;&#xA;to C-style:  &lt;code&gt;A a(...)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Input text:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function init() {&#xA;  var foo = new Foo();&#xA;  var bar = new Bar(foo, true);&#xA;  var foos = new List&amp;lt;Foo&amp;gt;(3);&#xA;  var baz = new Baz(random());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Desired output:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function init() {&#xA;  Foo foo();&#xA;  Bar bar(foo, true);&#xA;  List&amp;lt;Foo&amp;gt; foos(3);&#xA;  Baz baz(random());&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;http://regextutorials.com/excercise.html?Change%20variable%20initialization&#34;&gt;Original source&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Types with Parameters</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/15-classes-param/</link>
      <pubDate>Wed, 29 Nov 2023 19:57:22 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/15-classes-param/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;The &lt;code&gt;Maybe&lt;/code&gt; &amp;ldquo;data type&amp;rdquo; has a definition like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;data Maybe a = Nothing | Just a&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This means that putting in types gives out different data types:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;data Maybe Double = Nothing | Just Double&#xA;data Maybe String = Nothing | Just String&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;(Warning: the lines are not legal Haskell because &lt;code&gt;Maybe&lt;/code&gt; is already defined.&#xA;To make them legal, make the left side one word like &lt;code&gt;Maybe_Double&lt;/code&gt;.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding Standards</title>
      <link>https://wy-cs.info/ai/game/coding-standards/</link>
      <pubDate>Mon, 23 Oct 2023 18:05:10 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/coding-standards/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;This is a draft, open for discussion&lt;/p&gt;&#xA;&lt;h2 id=&#34;main-points&#34;&gt;Main Points&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;All game state is encapsulated in a single class.&lt;/li&gt;&#xA;&lt;li&gt;Separate handler functions for drawing, interaction with user.&lt;/li&gt;&#xA;&lt;li&gt;Pass the minimum amount of information required for the function to&#xA;do its job. (Unless the function modifies the model.)&lt;/li&gt;&#xA;&lt;li&gt;Testing of all non-drawing functions is required.&lt;/li&gt;&#xA;&lt;li&gt;Demonstration of drawing capabilities in one function.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create example states.&lt;/li&gt;&#xA;&lt;li&gt;Render each.&lt;/li&gt;&#xA;&lt;li&gt;Hit enter to continue via &lt;code&gt;input()&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;details-for-discussion&#34;&gt;Details for Discussion&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Do we want to force a separation of game logic from user interface&#xA;logic? (Explore: &lt;code&gt;model.g&lt;/code&gt; and &lt;code&gt;model.ui&lt;/code&gt;.)&lt;/li&gt;&#xA;&lt;li&gt;Game logic-manipulating functions only receive game logic variables,&#xA;not UI variables.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>8. Warmups</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/15-warmup/</link>
      <pubDate>Thu, 19 Oct 2023 17:19:21 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/15-warmup/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;These functions are just warmups to be used the first day you learn&#xA;about data types. We presented solutions to 1 and 3. The fourth wasn&amp;rsquo;t&#xA;visible until the first three were done.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(WhoseTurn)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a &lt;code&gt;WhoseTurn&lt;/code&gt; data type that could be &lt;code&gt;Nobody&lt;/code&gt;, &lt;code&gt;Player_A&lt;/code&gt;&#xA;or &lt;code&gt;Player_B&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;nextPlayer&lt;/code&gt; function that says that after Player A&#xA;comes Player B, and after Player B comes Player A. If it is&#xA;nobody&amp;rsquo;s turn, then the next player is still nobody.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Rock, Paper, Scissors)&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Posn Math</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/posnmath/</link>
      <pubDate>Wed, 17 Feb 2021 22:07:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/posnmath/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;posnmath-20D.pdf&#34;&gt;posn math worksheet&lt;/a&gt; starts with the ideas on a&#xA;number line (1 dimension) and then changes over to working with posns&#xA;(2 dimensions).&lt;/p&gt;&#xA;&lt;p&gt;The important ideas are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Posns work a lot like numbers on the number line. Know the analogies&#xA;(below).&lt;/li&gt;&#xA;&lt;li&gt;Think $+$ and $-$ even if you have to say &lt;code&gt;posn-add&lt;/code&gt; and&#xA;&lt;code&gt;posn-subtract&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Distance from the origin on the number line is &lt;code&gt;abs&lt;/code&gt;; in 2d use&#xA;&lt;code&gt;posn-length&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Adding $A+B$ takes a point at $A$ and moves it in direction $B$.&lt;/li&gt;&#xA;&lt;li&gt;Subtracting $-B+A$ or $A-B$ finds the motion from $B$ to $A$. Experiment to&#xA;understand why the $B$ has the minus sign not the $A$.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Pacing: expect to be able to do and discuss the first two pages in&#xA;about 45 minutes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Exercises 4</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-4/</link>
      <pubDate>Tue, 24 Oct 2017 08:14:20 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-4/</guid>
      <description>&lt;h2 id=&#34;planning-and-testing&#34;&gt;Planning and Testing&lt;/h2&gt;&#xA;&lt;p&gt;Write every part of the design process &lt;strong&gt;except&lt;/strong&gt; the function.&#xA;Do write tests!&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;count-factors: take a number N and find out how many numbers 1,2,&amp;hellip;,N divide N.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;angle-pts: take in six numbers (x1,y1) (x2,y2) (x3,y3) and give the angle in degrees made by line segments going to those three points in that order.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Classwork: make a point follow the graph of y = sqrt(100^2-x^2) from x=-95 to x=95&#xA;(Don&amp;rsquo;t like math? Use the &lt;a href=&#34;better-mathgraph.rkt&#34;&gt;graph of the function y = 3x+50&lt;/a&gt; on the same interval.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Day and Night</title>
      <link>https://wy-cs.info/intermediate-cs/universe/day-night/</link>
      <pubDate>Tue, 15 Apr 2025 19:53:19 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/day-night/</guid>
      <description>&lt;p&gt;This is a &amp;ldquo;get familiar with universe&amp;rdquo; animation. There not be&#xA;anything complicated about it. Even on a whiteboard it can be done in&#xA;45-60 minutes.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;During the daytime, the sky on Earth is blue, while the sky on&#xA;Mars is reddish. Other worlds might have other sky colors. During the&#xA;nighttime, it gets dark so the sky in every world is dark gray. (This&#xA;is easier to look at than pitch black.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>18 Op to Funcall</title>
      <link>https://wy-cs.info/ai/parsing/exercises/18-op-fncall/</link>
      <pubDate>Fri, 15 Mar 2024 11:52:29 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/exercises/18-op-fncall/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://regextutorials.com/excercise.html?Replace%20operators%20with%20function%20calls&#34;&gt;Original source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Replace addition operator a + b with Add(a, b), but not when the&#xA;variables are known to be ints.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int c = a+b;&#xA;var average = (a1 + a2)/2&#xA;sum(foo, bar, x) = foo(x) + bar(x)&#xA;var dotProduct(v1, v2) = v1.x*v2.x + v1.y*v2.y&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Desired result:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int c = a+b;&#xA;var average = (Add(a1, a2))/2&#xA;sum(foo, bar, x) = Add(foo(x), bar(x))&#xA;var dotProduct(v1, v2) = Add(v1.x*v2.x, v1.y*v2.y)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>VM II Discussion</title>
      <link>https://wy-cs.info/nand/ch08/discussion/</link>
      <pubDate>Mon, 27 Jan 2025 10:39:55 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/discussion/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When a function is called, how are arguments passed? At least two parts&#xA;of VM code share the responsibility. Illustrate your explanation&#xA;using a specific example.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Suppose that a function &lt;code&gt;ken&lt;/code&gt; calls a function &lt;code&gt;bar&lt;/code&gt;. After the&#xA;function &lt;code&gt;bar&lt;/code&gt; finishes, execution needs to return to the place in&#xA;&lt;code&gt;ken&lt;/code&gt; that called it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024 Review B</title>
      <link>https://wy-cs.info/ap-cs/haskell/review/20-review-b/</link>
      <pubDate>Mon, 16 Dec 2024 13:31:24 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/review/20-review-b/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write an implementation of &lt;code&gt;mapMaybe&lt;/code&gt;, which keeps the&#xA;&amp;ldquo;Just&amp;rdquo; results and throws away the &amp;ldquo;Nothing&amp;rdquo; results.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;     ex1 = mapMaybe chop4 [&amp;quot;dog&amp;quot;, &amp;quot;goldmedal&amp;quot;, &amp;quot;fish&amp;quot;]&#xA;     check1 = (ex1 == [&amp;quot;medal&amp;quot;])&#xA;&#xA;     chop4 :: String -&amp;gt; Maybe String&#xA;     chop4 s  | length s &amp;lt;= 4  = Nothing&#xA;              | otherwise      = Just (drop 4 s)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Stone age functions use pattern matching and recursion, but not&#xA;list comprehensions or any of the &amp;ldquo;fancy&amp;rdquo; machinery. Where possible,&#xA;they even avoid guards and if statements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Loops</title>
      <link>https://wy-cs.info/nand/ch04/examples/loop/</link>
      <pubDate>Tue, 24 Sep 2024 13:12:00 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch04/examples/loop/</guid>
      <description>&lt;h2 id=&#34;loops&#34;&gt;loops&lt;/h2&gt;&#xA;&lt;p&gt;Pseudocode:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sum=0&#xA;for(int num=0; num&amp;lt;10; num=num+1) {&#xA;  sum=sum+num&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Assembler:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// sum=0&#xA;@sum&#xA;M=0&#xA;// n=0&#xA;@num&#xA;M=0&#xA;(LOOP)&#xA;// D=n-10&#xA;@num&#xA;D=M&#xA;@10&#xA;D=D-A&#xA;// if D &amp;gt;= 0 then goto DONE&#xA;@DONE&#xA;D;JGE&#xA;// sum = sum + num&#xA;@num&#xA;D=M&#xA;@sum&#xA;M=D+M&#xA;// n=n+1&#xA;@num&#xA;M=M+1&#xA;@LOOP&#xA;1;JMP&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you follow the code in the CPU emulator, you will see than the&#xA;&lt;code&gt;sum&lt;/code&gt; variable is stored in &lt;code&gt;RAM[16]&lt;/code&gt; and &lt;code&gt;num&lt;/code&gt; is in &lt;code&gt;RAM[17]&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Poster</title>
      <link>https://wy-cs.info/nand/ch01/poster/</link>
      <pubDate>Wed, 04 Sep 2024 12:31:11 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch01/poster/</guid>
      <description>&lt;p&gt;Group size: two or three.&#xA;(Four is too many for efficient collaboration.)&lt;/p&gt;&#xA;&lt;p&gt;Pick a chip that will use at least 10 &amp;ldquo;nand&amp;rdquo; gates. (Footnote: get&#xA;approval for smaller chips.)&lt;/p&gt;&#xA;&lt;p&gt;The central part of your design will be the creation of your chip&#xA;using only nand gates.&lt;/p&gt;&#xA;&lt;h2 id=&#34;quality-design-content&#34;&gt;Quality Design: Content&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Circuit diagram&lt;/li&gt;&#xA;&lt;li&gt;Truth table&lt;/li&gt;&#xA;&lt;li&gt;Purpose (phrase)&lt;/li&gt;&#xA;&lt;li&gt;Title&lt;/li&gt;&#xA;&lt;li&gt;Authors&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quality-design-art-aspects&#34;&gt;Quality Design: Art Aspects&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use the entire space.&lt;/li&gt;&#xA;&lt;li&gt;Wide, dark marks work best for lines.&lt;/li&gt;&#xA;&lt;li&gt;Colors: clearly visible at a distance.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;Try to learn something through making a product you can be proud of.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Misc 02</title>
      <link>https://wy-cs.info/intermediate-cs/misc/misc-02/</link>
      <pubDate>Thu, 18 Apr 2024 12:22:40 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/misc/misc-02/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function to add up all of the numbers in a list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; ;; add-all: (Listof Number) -&amp;gt; Number&#xA; (define (add-all nums) 0)&#xA; (check-expect (add-all (list 10 20 30 54)) 114)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write a good sequence of three more related check-expects.&lt;/li&gt;&#xA;&lt;li&gt;Write the &lt;code&gt;add-all&lt;/code&gt; function.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function to find the largest number in a list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regex Resources</title>
      <link>https://wy-cs.info/ai/parsing/regex-resources/</link>
      <pubDate>Fri, 15 Mar 2024 09:42:05 -0500</pubDate>
      <guid>https://wy-cs.info/ai/parsing/regex-resources/</guid>
      <description>&lt;h2 id=&#34;javascript-regex-vs-standard-pcre&#34;&gt;Javascript Regex vs Standard PCRE&lt;/h2&gt;&#xA;&lt;p&gt;PCRE stands for &amp;ldquo;Perl Compatible Regular Expression&amp;rdquo;. It is a&#xA;standardization of an enhanced kind of expression matching that&#xA;started with the Perl language.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;http://regextutorials.com&#34;&gt;regex tutorials&lt;/a&gt; are very good but use&#xA;slightly &amp;ldquo;nonstandard&amp;rdquo; regular expression rules (Javascript not PCRE).&lt;/p&gt;&#xA;&lt;p&gt;Notes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Normal PCRE backreferences (referring to the match made by a&#xA;previous group) are done with a backslash in front, like &lt;code&gt;\1&lt;/code&gt; refers&#xA;to group 1. This is different from Javascript, where the same&#xA;backreference is &lt;code&gt;$1&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;We will not have use for lookahead like &lt;code&gt;(?! ...)&lt;/code&gt; or &lt;code&gt;(?= ...)&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;resource-links&#34;&gt;Resource Links&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rhzKDrUiJVk&#34;&gt;Learn Regular Expressions in 20 Minutes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://regextutorials.com/&#34;&gt;Regex Tutorials&lt;/a&gt; has a lot of good material and exercises. It is my favorite.&lt;/li&gt;&#xA;&lt;li&gt;Decent but retro &lt;a href=&#34;https://www.regular-expressions.info/tutorial.html&#34;&gt;Regex Buddy&lt;/a&gt;. Includes &lt;a href=&#34;https://www.regular-expressions.info/examples.html&#34;&gt;more examples&lt;/a&gt; than other sites.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sXQxhojSdZM&#34;&gt;Video: RegEx in 100&#xA;seconds&lt;/a&gt; - not as good&#xA;as the 20 minute version.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.debuggex.com/cheatsheet/regex/pcre?authuser=0&#34;&gt;PCRE Cheatsheet&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://alf.nu/RegexGolf?authuser=0&#34;&gt;Regex Golf&lt;/a&gt; - Gets hard too&#xA;fast to use for learning. The first few are good, though.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://regexcrossword.com/?authuser=0&#34;&gt;Regex Crossword&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://regexr.com/&#34;&gt;RegExr&lt;/a&gt; - visualizes matches. Possibly an interesting tool for learning. You have to supply your own words to match against.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.debuggex.com/?flavor=pcre&#34;&gt;Debuggex regex tester&lt;/a&gt; is similar to RegExr.&lt;/li&gt;&#xA;&lt;li&gt;Technical &lt;a href=&#34;https://www.pcre.org/original/doc/html/pcrepattern.html&#34;&gt;pcrepattern&lt;/a&gt; man page. Includes things like &lt;code&gt;(*UCP)&lt;/code&gt; to turn on the use of Unicode properties for &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\d&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Semigroup</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/20-semigroup/</link>
      <pubDate>Mon, 27 Nov 2023 09:44:04 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/20-semigroup/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;This section refers to&#xA;&lt;a href=&#34;https://hackage.haskell.org/package/base-4.15.0.0/docs/Data-Semigroup.html&#34;&gt;Data.Semigroup&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;A Semigroup &lt;code&gt;a&lt;/code&gt; has function called &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;. That function&amp;rsquo;s type is &lt;code&gt;a -&amp;gt; a -&amp;gt; a&lt;/code&gt;, so it takes in two things and puts out one. That&amp;rsquo;s&#xA;all. This operation could be concatentation of lists or taking the&#xA;maximum of two numbers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mini B</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-b/</link>
      <pubDate>Tue, 14 Nov 2023 10:09:44 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-b/</guid>
      <description>&lt;p&gt;Make an activity:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Clicking sets the center of an orange square.&lt;/li&gt;&#xA;&lt;li&gt;Hit the &amp;ldquo;A&amp;rdquo; key to make the square change between blue and orange.&#xA;Change from yellow to blue.&lt;/li&gt;&#xA;&lt;li&gt;Every 5 seconds the square turns yellow until the next action.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Options:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The timer to turn yellow restarts every interaction (click or key).&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Random Intro</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/info/</link>
      <pubDate>Mon, 13 Nov 2023 08:56:45 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/info/</guid>
      <description>&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    These functions require &lt;code&gt;import System.Random&lt;/code&gt;.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Source: &lt;a href=&#34;https://learnyouahaskell.github.io/input-and-output.html#randomness&#34;&gt;LYaH, Input and Output&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Haskell functions are pure, which means the same input must give the&#xA;same output. A &amp;ldquo;random number generator&amp;rdquo; that just puts out different&#xA;numbers each time you call it is not pure. Instead, in Haskell, the&#xA;randomization functions output a random value and a new random number&#xA;generator that will give different results.&lt;/p&gt;&#xA;&lt;h2 id=&#34;quick-example&#34;&gt;Quick Example&lt;/h2&gt;&#xA;&lt;p&gt;A random function in Haskell should put out a random number generator&#xA;in addition to the number or numbers it makes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Draw Maze</title>
      <link>https://wy-cs.info/ai/game/maze/draw-maze/</link>
      <pubDate>Fri, 03 Nov 2023 10:25:27 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/maze/draw-maze/</guid>
      <description>&lt;p&gt;Start with a rectangular maze. Render it on the screen. Your beginning&#xA;examples should give you a good basis for writing the code.&lt;/p&gt;&#xA;&lt;p&gt;A maze has edges that represent passages. Put a wall between adjacent&#xA;vertices if there is not an edge between them.&lt;/p&gt;&#xA;&lt;img src=&#34;rendered-maze-3.png&#34; width=&#34;200&#34; /&gt;&#xA;&lt;img src=&#34;rendered-maze-2.png&#34; width=&#34;200&#34; /&gt;&#xA;&lt;h2 id=&#34;representation&#34;&gt;Representation&lt;/h2&gt;&#xA;&lt;p&gt;The vertices in a maze could be represented by numbers (as in the&#xA;&lt;code&gt;make_grid&lt;/code&gt; function), or they could be represented by ordered&#xA;pairs. They both work fine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Sum Types I</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/20-sum-types/</link>
      <pubDate>Tue, 24 Oct 2023 09:29:28 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/20-sum-types/</guid>
      <description>&lt;p&gt;A sum type represents a choice: one of several possibilities. Choose&#xA;&lt;code&gt;Good&lt;/code&gt; or &lt;code&gt;Evil&lt;/code&gt;. A &lt;code&gt;Grade&lt;/code&gt; could be &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;, or &lt;code&gt;F&lt;/code&gt;.&#xA;A &lt;code&gt;Maybe Int&lt;/code&gt; is one of these types; it could be &lt;code&gt;Just 10&lt;/code&gt; or &lt;code&gt;Nothing&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Define a &lt;code&gt;TrackEvent&lt;/code&gt; which could be either &lt;code&gt;Sprint &amp;quot;100m&amp;quot;&lt;/code&gt; or&#xA;&lt;code&gt;Sprint &amp;quot;400m&amp;quot;&lt;/code&gt; (or similar) or &lt;code&gt;LongDistance 5&lt;/code&gt; or &lt;code&gt;LongDistance 26&lt;/code&gt; (or similar). The idea is that the LongDistance is measured in&#xA;miles, but there are no actual units included in that data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pygame Intro Builds</title>
      <link>https://wy-cs.info/ai/game/pygame-intro-builds/</link>
      <pubDate>Mon, 23 Oct 2023 15:15:11 -0500</pubDate>
      <guid>https://wy-cs.info/ai/game/pygame-intro-builds/</guid>
      <description>&lt;h2 id=&#34;single-lights-onoff&#34;&gt;Single Lights On/Off&lt;/h2&gt;&#xA;&lt;p&gt;The first build project is a grid where clicking toggles the &amp;ldquo;lit&amp;rdquo;&#xA;status of rectangles. The grid position of the mouse shows at the&#xA;bottom of the window. Hitting &amp;ldquo;q&amp;rdquo; quits the animation.&lt;/p&gt;&#xA;&lt;div id=&#34;lightgallery&#34;&gt;&#xA; &lt;a href=&#34;lights-1.png&#34; &gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;lights-1.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA; &lt;a href=&#34;lights-2.png&#34;&gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;lights-2.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA; &lt;a href=&#34;lights-3.png&#34;&gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;lights-3.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA; &lt;a href=&#34;lights-4.png&#34;&gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;lights-4.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;click-counter&#34;&gt;Click Counter&lt;/h2&gt;&#xA;&lt;p&gt;Modify your program so that each square shows the number of times that&#xA;you have clicked on it.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Adding mode (default): each click adds one.&lt;/li&gt;&#xA;&lt;li&gt;Subtracting mode: each click subtracts one.&lt;/li&gt;&#xA;&lt;li&gt;The space bar toggles you between adding and subtracting mode.&lt;/li&gt;&#xA;&lt;li&gt;In subtracting mode, the grid coordinates of the mouse show in&#xA;red. Otherwise they are black.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div id=&#34;lightgallery&#34;&gt;&#xA; &lt;a href=&#34;count-1.png&#34; &gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;count-1.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA; &lt;a href=&#34;count-2.png&#34;&gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;count-2.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA; &lt;a href=&#34;count-3.png&#34;&gt;&#xA; &lt;img alt=&#34;nope&#34; src=&#34;count-3.png&#34; width=&#34;200&#34; /&gt;&#xA; &lt;/a&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Py Warmup 1</title>
      <link>https://wy-cs.info/ai/python/20-python-warmups/</link>
      <pubDate>Tue, 22 Aug 2023 10:06:19 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/20-python-warmups/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A list of the first 1000 positive integers.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A list of the first 1000 perfect squares.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The sum of the first 100 perfect cubes.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A list of all of the perfect cubes between 1000 and 20000.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The product of the numbers in the previous list, computed using a for loop.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Compute &lt;code&gt;sin(pi/12)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Find the greatest common divisor of 1558853167347433739 and&#xA;10062552685783700385249011.&lt;/p&gt;&#xA;&lt;!-- 2454079157171 --&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The last 20 characters of the string &lt;code&gt;&amp;quot;A dolphin likes the water. A snake slithers in the sand.&amp;quot;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Loops 2</title>
      <link>https://wy-cs.info/ecs/javascript/for-2/</link>
      <pubDate>Wed, 07 Jun 2023 11:35:45 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/javascript/for-2/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an array of ten random integers, each one -10&amp;lt;=n&amp;lt;=10. Print it out.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an array that contains multiples of 10, starting from 0 and&#xA;ending at 130. Print it out.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Ask the person for an integer n.&#xA;Make an array containing the first n multiples of 5.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; How many multiples? 20&#xA; [0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Extend your previous program. Have the computer pick a random&#xA;integer between 1 and 10. Extend&#xA;the array by adding in that many more multiples of 5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 02</title>
      <link>https://wy-cs.info/ml/fast-ai/lesson-02/</link>
      <pubDate>Tue, 11 Apr 2023 11:31:43 -0500</pubDate>
      <guid>https://wy-cs.info/ml/fast-ai/lesson-02/</guid>
      <description>&lt;p&gt;Get the Lesson 02 notebook imported:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;https://github.com/fastai/course22/blob/master/02-saving-a-basic-fastai-model.ipynb&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>BPJ Quiz 01-03</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-01-03-a/</link>
      <pubDate>Thu, 12 Jan 2023 10:03:31 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-01-03-a/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;!-- 20 minutes was enough time for everyone --&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write an entire main method that prints the following:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; Doc Mo said, &amp;quot;Good Job&amp;quot;&#xA; David says \Do Your Homework\&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make appropriate variables and initialize them:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; a &amp;lt;- 3&#xA; b &amp;lt;- 6.28&#xA; c &amp;lt;- Whitney Young&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a string &lt;code&gt;d&lt;/code&gt; but do not initialize it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Graphics</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/02-graphics/</link>
      <pubDate>Mon, 14 Nov 2022 10:02:39 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/02-graphics/</guid>
      <description>&lt;p&gt;There is &lt;a href=&#34;overview-demo.txt&#34;&gt;demonstration code&lt;/a&gt; giving a quick&#xA;overview of some of the CodeWorld graphics functions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;colors&#34;&gt;Colors&lt;/h2&gt;&#xA;&lt;p&gt;There is a &lt;a href=&#34;https://code.world/doc.html?shelf=help/haskell.shelf#3&#34;&gt;short list of built-in&#xA;colors&lt;/a&gt;. There&#xA;are also some interesting functions like &lt;code&gt;lighter&lt;/code&gt;, &lt;code&gt;darker&lt;/code&gt;, and&#xA;&lt;code&gt;translucent&lt;/code&gt; which modify existing colors.&lt;/p&gt;&#xA;&lt;p&gt;Components of colors in CodeWorld are decimals between 0.0 and 1.0,&#xA;not the more traditional integers from 0 to 255. Usually you can just&#xA;divide by 255 to make the conversion. The color &lt;code&gt;(RGB 0.25 0.75 1.00)&lt;/code&gt;&#xA;represents a teal color that would be written &lt;code&gt;(64,191,255)&lt;/code&gt; in the&#xA;traditional system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Replit</title>
      <link>https://wy-cs.info/ap-cs/haskell/start/replit/</link>
      <pubDate>Tue, 23 Aug 2022 07:10:27 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/start/replit/</guid>
      <description>&lt;h2 id=&#34;initial-configuration&#34;&gt;Initial Configuration&lt;/h2&gt;&#xA;&lt;p&gt;You can load the recommended beginner&amp;rsquo;s Haskell setup by &lt;a href=&#34;https://replit.com/@maueroats/WY-Haskell-Base-2024?v=1&#34;&gt;using the WY&#xA;Haskell Base&#xA;2024&lt;/a&gt; template&#xA;as your starting point. You can begin with &lt;a href=&#34;https://replit.com/languages/haskell&#34;&gt;Replit&amp;rsquo;s stock&#xA;Haskell setup&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;replit-requires-a-main-method&#34;&gt;Replit requires a main method&lt;/h2&gt;&#xA;&lt;p&gt;The particular interpreter repl.it requires that you have a main method.&#xA;Write a simple one and then type your tests in the interactions pane.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;main = do putStrLn &amp;quot;Loaded&amp;quot;&#xA;          putStrLn (show [1..10])&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;replit-needs-variables&#34;&gt;Replit needs variables&lt;/h2&gt;&#xA;&lt;p&gt;No &amp;ldquo;top-level&amp;rdquo; statements are allowed, everything must be assigned to&#xA;a variable or in a function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>02 Message</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/02-message/</link>
      <pubDate>Tue, 19 Apr 2022 07:20:20 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/02-message/</guid>
      <description>&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Important&lt;/h4&gt;&#xA;&#xA;    The message structure goes in a separate file called &amp;ldquo;ic-msg.rkt&amp;rdquo;.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The message structure gets its name abbreviated to &amp;ldquo;ic-msg&amp;rdquo; because we&#xA;type it a lot.&lt;/p&gt;&#xA;&lt;p&gt;A &lt;code&gt;IC-Msg&lt;/code&gt; is a structure.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(make-ic-msg Number Number Color-String)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Interpretation:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(make-ic-msg from to col)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;from&lt;/code&gt;: the id of the world sending the message&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;to&lt;/code&gt;: the id of the world the message is intended for&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;col&lt;/code&gt;: the new color that world is to show&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The structure definition for a message should go in a separate file so&#xA;we can use advanced &lt;code&gt;#lang racket&lt;/code&gt; features to make it simple to send.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jan Return 2</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-2/</link>
      <pubDate>Tue, 18 Jan 2022 07:09:56 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-2/</guid>
      <description>&lt;p&gt;This review assumes that you have done CodingBat Logic-1 and String-2.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;dollarOut&lt;/code&gt;) Return a version of the given string where every&#xA;appearance of &lt;code&gt;$&lt;/code&gt; in the original string is removed, along with two&#xA;characters to the left and one character to the right of it. If&#xA;there are not that many characters, remove what is available.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public String dollarOut(String str) {...}&#xA;&#xA; dollarOut(&amp;quot;spend$now&amp;quot;) =&amp;gt; &amp;quot;speow&amp;quot;&#xA; dollarOut(&amp;quot;some$dollar$xy&amp;quot;) =&amp;gt; &amp;quot;soolly&amp;quot;&#xA; dollarOut(&amp;quot;A$lan&amp;quot;) =&amp;gt; &amp;quot;an&amp;quot;&#xA; dollarOut(&amp;quot;lo$&amp;quot;) =&amp;gt; &amp;quot;&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;decString&lt;/code&gt;) Given three strings x y z, return true if each one is&#xA;shorter than the previous one. Unless sameSize is true, in which&#xA;case also return true if the previous string is the same size.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic HW</title>
      <link>https://wy-cs.info/ap-cs/jm/intro/20-assign-bpj/</link>
      <pubDate>Mon, 06 Dec 2021 07:21:31 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/intro/20-assign-bpj/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Begin with a comment including your name.&lt;/li&gt;&#xA;&lt;li&gt;Separate function for each &lt;em&gt;chapter&lt;/em&gt; or &lt;em&gt;project&lt;/em&gt;. Run them all from&#xA;your &lt;code&gt;main&lt;/code&gt; method.&lt;/li&gt;&#xA;&lt;li&gt;Number each question in a comment or print statement.&lt;/li&gt;&#xA;&lt;li&gt;Copy the text of each question in a comment (unless super-long).&lt;/li&gt;&#xA;&lt;li&gt;Write the code for the question after that.&lt;/li&gt;&#xA;&lt;li&gt;Non-code answers should be written as comments or print statements.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Draw Handler</title>
      <link>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/drawhandler/</link>
      <pubDate>Fri, 19 Nov 2021 10:30:24 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/drawhandler/</guid>
      <description>&lt;h2 id=&#34;assumed-knowledge&#34;&gt;Assumed knowledge&lt;/h2&gt;&#xA;&lt;p&gt;If you have never drawn anything in &lt;a href=&#34;https://code.world/haskell&#34;&gt;CodeWorld&lt;/a&gt;, take half an hour and&#xA;learn how to draw outline and solid shapes in various colors. You can&#xA;read about&#xA;&lt;a href=&#34;https://code.world/doc.html?shelf=help/haskell.shelf#2&#34;&gt;Pictures in the&#xA;Guide&lt;/a&gt;..&lt;/p&gt;&#xA;&lt;p&gt;Minimum:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;import CodeWorld&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;circle&lt;/li&gt;&#xA;&lt;li&gt;solidCircle&lt;/li&gt;&#xA;&lt;li&gt;rectangle&lt;/li&gt;&#xA;&lt;li&gt;solidRectangle&lt;/li&gt;&#xA;&lt;li&gt;translated&lt;/li&gt;&#xA;&lt;li&gt;colored&lt;/li&gt;&#xA;&lt;li&gt;pictures&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It is also helpful to know about &lt;code&gt;coordinatePlane&lt;/code&gt; so you understand&#xA;what numbers will appear as x and y coordinates of the mouse.&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-0-warmup&#34;&gt;Step 0: warmup&lt;/h2&gt;&#xA;&lt;p&gt;Make a picture showing all of the following, together:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Distances</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/parcels/distances/</link>
      <pubDate>Tue, 13 Apr 2021 21:48:41 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/parcels/distances/</guid>
      <description>&lt;h2 id=&#34;finding-distances-i&#34;&gt;Finding Distances I&lt;/h2&gt;&#xA;&lt;p&gt;The most straightforward way to figure out the distance to the closest&#xA;warehouse is two steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;(&lt;code&gt;find-distances&lt;/code&gt;) Given a list of warehouse locations, make a list of distances from&#xA;your location to all of them.&lt;/li&gt;&#xA;&lt;li&gt;(&lt;code&gt;minimum&lt;/code&gt;) Given a list of distances, find the smallest one.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Start out by writing some test cases, going from one warehouse to many.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; find-distances: posn(current) list-of-posn(warehouses) -&amp;gt; list-of-numbers&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;find-distances&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;warehouses&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;find-distances&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;finding-distances-ii---obsolete&#34;&gt;Finding Distances II - Obsolete&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Updated recommendation&lt;/strong&gt;: Go straight from the finding distances to&#xA;writing the draw handler. Ignore this part.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Starter Code</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/starter-code/</link>
      <pubDate>Tue, 23 Feb 2021 08:45:38 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/starter-code/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;picturing-programs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;posn-util.rkt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;beside&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q4&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;above&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q2&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Q2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BG0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;empty-scene&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BALL&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;circle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TARGET&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;circle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;circle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pink&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; we wrote random-posn. pick a posn if that does not work&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TARGET-POSN&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;random-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>AP Preparation</title>
      <link>https://wy-cs.info/docs/future/ap-prep/</link>
      <pubDate>Fri, 22 Jan 2021 11:37:15 -0600</pubDate>
      <guid>https://wy-cs.info/docs/future/ap-prep/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;This page will help you decide if you should take AP CS A or&#xA;Intermediate CS.&lt;/p&gt;&#xA;&lt;p&gt;If you are taking Intermediate Computer Science and in January 2021 you&#xA;can make an animation using &lt;code&gt;cond&lt;/code&gt;, you will be prepared. Your end of&#xA;the year goals should include:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;use a &lt;code&gt;struct&lt;/code&gt; to make a more complex animation&lt;/li&gt;&#xA;&lt;li&gt;use a &lt;code&gt;list&lt;/code&gt; to work with an unknown number of things&lt;/li&gt;&#xA;&lt;li&gt;debug code, probably using DrRacket&amp;rsquo;s Stepper and &lt;code&gt;check-expect&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;AP Computer Science Principles is not a class that focuses on&#xA;programming, you should ask about whether Intermediate CS or AP CS A&#xA;would be more appropriate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NA vs NULL</title>
      <link>https://wy-cs.info/ml/rmisc/na-vs-null/</link>
      <pubDate>Mon, 21 Sep 2020 11:47:53 -0500</pubDate>
      <guid>https://wy-cs.info/ml/rmisc/na-vs-null/</guid>
      <description>&lt;p&gt;The short answer is that NA represents missing values. NULL can be&#xA;something more like Java - something you get asking for an element of&#xA;a table that is not there.&lt;/p&gt;&#xA;&lt;p&gt;Don&amp;rsquo;t think about NULL until you have to. I hope we never have to.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.r-bloggers.com/2010/04/r-na-vs-null/&#34;&gt;Grade B- R-bloggers post on NA vs NULL&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.r-bloggers.com/2018/07/r-null-values-null-na-nan-inf/&#34;&gt;Technical R-bloggers post on null&#xA;values&lt;/a&gt;:&#xA;More techical, more accurate, more than you want to know.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Ch02</title>
      <link>https://wy-cs.info/ml/r4ds/ch02/</link>
      <pubDate>Thu, 10 Sep 2020 09:57:13 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch02/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;What steps of a data science project are the focus in the &lt;em&gt;Explore&lt;/em&gt; section of the text?&lt;/li&gt;&#xA;&lt;li&gt;In addition to visualization, what else do you expect to be doing in this part of the text?&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>AP CS Summer Assignment</title>
      <link>https://wy-cs.info/ap-cs/prep/summer-assign/</link>
      <pubDate>Wed, 17 Jun 2020 11:58:07 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/prep/summer-assign/</guid>
      <description>&lt;p&gt;You should review the &lt;a href=&#34;https://wy-cs.info/ap-cs/prep/skills-intro/&#34;&gt;AP CS Skills Intro&lt;/a&gt; for the purpose of this assignment and&#xA;collaboration rules.&lt;/p&gt;&#xA;&lt;p&gt;You can do this assignment at any time in the summer. Unlike a math&#xA;class, I do not believe it will be better to do the work in August&#xA;near when school starts. Spend some time on it and make something&#xA;good.&lt;/p&gt;&#xA;&lt;h2 id=&#34;project-description&#34;&gt;Project Description&lt;/h2&gt;&#xA;&lt;p&gt;You have two choices: Reversi (Othello) or Checkers.&lt;/p&gt;&#xA;&lt;h3 id=&#34;reversi&#34;&gt;Reversi&lt;/h3&gt;&#xA;&lt;p&gt;Write the two player board game known as&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Reversi&#34;&gt;Reversi&lt;/a&gt; or Othello. I will&#xA;refer to this game as &amp;ldquo;Reversi&amp;rdquo; since that is the&#xA;older, non-trademarked name, but the rules I have in mind are the&#xA;modern rules for Othello.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Details</title>
      <link>https://wy-cs.info/ap-cs/prep/reversi-walkthrough/</link>
      <pubDate>Wed, 17 Jun 2020 11:58:07 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/prep/reversi-walkthrough/</guid>
      <description>&lt;p&gt;The big picture plan is to keep a list of pieces, which includes where&#xA;they are on the board. That is, each Piece is a struct containing a&#xA;Posn for the location and a Player to represent which color it is&#xA;(traditionally white and black, 1 and 0).&lt;/p&gt;&#xA;&lt;p&gt;In Reversi, a play flips every one of the opponents pieces that is on&#xA;a straight line (in one of the 8 main directions) between the new&#xA;piece and another piece of the same color. Applying this rule in a&#xA;particular direction is a major part of the game implementation (also&#xA;a major difficulty).&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Posn Math Programming</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/20-intro-ex-1/</link>
      <pubDate>Thu, 23 Jan 2020 09:21:34 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/20-intro-ex-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;slope-posn&lt;/code&gt; that takes in a posn and&#xA;gives the slope of&#xA;the line through (0,0) and the posn.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; slope-posn : posn -&amp;gt; number&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;perp?&lt;/code&gt; that takes in two posns each being&#xA;(change in x,&#xA;change in y) - like above - and returns true if they represent&#xA;slopes of perpendicular lines.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; perp? : posn posn -&amp;gt; boolean&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write &lt;code&gt;on-line?&lt;/code&gt; that determines if a posn is on a line given in&#xA;&lt;code&gt;y=mx+b&lt;/code&gt; form.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Maybe</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-maybe/</link>
      <pubDate>Thu, 12 Dec 2019 16:27:36 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-maybe/</guid>
      <description>&lt;p&gt;The &lt;code&gt;Maybe&lt;/code&gt; class is built into the standard prelude, so you will only&#xA;need to &lt;code&gt;import Data.Maybe&lt;/code&gt; if you want some of the more &lt;a href=&#34;http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Maybe.html&#34;&gt;advanced&#xA;functions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sorting-from-datalist&#34;&gt;Sorting from Data.List&lt;/h2&gt;&#xA;&lt;p&gt;When you sort a tuple, Haskell sorts based on the first item in&#xA;the tuple, then the second item to break ties in the first,&#xA;etc. You can &lt;code&gt;import Data.List&lt;/code&gt; to get the &lt;code&gt;sort&lt;/code&gt; function along with&#xA;&lt;a href=&#34;http://learnyouahaskell.com/modules#data-list&#34;&gt;zillions of other functions detailed in Chapter 7&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exercises</title>
      <link>https://wy-cs.info/intermediate-cs/ch03/additional-exercises/</link>
      <pubDate>Thu, 12 Sep 2019 10:57:27 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch03/additional-exercises/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://drive.google.com/open?id=1LpEhhP8PbjzrJ3VJJsX2lpgzBqu64YBELHLWuZx69qs&#34;&gt;Additional&#xA;Exercises&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://drive.google.com/open?id=1NBaniy4YxL_wXuM194b_bXYaXvKUZYUK5nfpzjx_aEc&#34;&gt;Even More Additional&#xA;Exercises&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;common-problems&#34;&gt;Common problems&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(rotate-45 img)&lt;/code&gt; does not work. You want &lt;code&gt;(rotate 45 img)&lt;/code&gt;. Notice&#xA;the space before the &lt;code&gt;45&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How do you find out the RGB numbers for a color? The book has one&#xA;method but I like &lt;code&gt;(colorize &amp;quot;turquoise&amp;quot;)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(star 30 40 &amp;quot;blue&amp;quot;)&lt;/code&gt; produces a faint blue star, but I wanted&#xA;regular blue. The 40 means fade to 40/255 of the color. You should&#xA;put &lt;code&gt;&amp;quot;solid&amp;quot;&lt;/code&gt; instead.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Checkers Model</title>
      <link>https://wy-cs.info/intermediate-cs/typed/checkers/model/</link>
      <pubDate>Mon, 20 May 2019 10:01:45 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/checkers/model/</guid>
      <description>&lt;p&gt;This is the written record of an analysis. You should practice doing&#xA;your own analysis of a game, not just copying this one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino Worksheet 1</title>
      <link>https://wy-cs.info/ecs/arduino/arduino-worksheet-1/</link>
      <pubDate>Tue, 07 May 2019 11:06:19 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/arduino-worksheet-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We say electricity flows from positive to negative.&#xA;Which is 5V? GND?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Electrical flow has an analogy with water flow (&lt;a href=&#34;http://www.all-you-need-is-solar.com/electricity-explained.html&#34;&gt;read an&#xA;analogy explained&lt;/a&gt;).&#xA;Explain the difference between 5V and 120V of potential in terms of&#xA;the water analogy.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Label on the figure below:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;5V power&lt;/li&gt;&#xA;&lt;li&gt;Ground&lt;/li&gt;&#xA;&lt;li&gt;Built in LED light (connected to &amp;ldquo;pin 13&amp;rdquo;)&lt;/li&gt;&#xA;&lt;li&gt;Main digital pins&lt;/li&gt;&#xA;&lt;li&gt;Analog input pins&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/arduino-worksheet-1/arduino-image-gray.jpg&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Illustrate how the holes in a breadboard are connected. There are&#xA;several different kinds of connections, show them all.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typed Variables and Functions</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-variables/</link>
      <pubDate>Mon, 06 May 2019 14:22:07 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-variables/</guid>
      <description>&lt;p&gt;A quick introduction to types, including how to specify types of&#xA;variables and functions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;types-of-everything&#34;&gt;Types of Everything&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Basic types: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Image&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Function: &lt;code&gt;(-&amp;gt; [input types] [output type])&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Composite types: &lt;code&gt;(Listof Number)&lt;/code&gt; - or even &lt;code&gt;(Listof Any)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;specifying-types-for-variables&#34;&gt;Specifying Types for Variables&lt;/h2&gt;&#xA;&lt;p&gt;There are two ways to specify a type: with inline or with the&#xA;colon (&lt;code&gt;:&lt;/code&gt;) on a separate line.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;name : Type&lt;/code&gt; notation in place of the plain &lt;code&gt;name&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Money on the Table</title>
      <link>https://wy-cs.info/intermediate-cs/universe/money/</link>
      <pubDate>Mon, 01 Apr 2019 16:20:23 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/money/</guid>
      <description>&lt;p&gt;Idea: each player can throw money onto the table.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Every player sees how much money is on the table.&lt;/li&gt;&#xA;&lt;li&gt;Hit any key to add $5 to the table.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Go into any window and hit a key. Every window&amp;rsquo;s number should change.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Next step: if you hit the &amp;ldquo;g&amp;rdquo; key in a window, it &amp;ldquo;greedily&amp;rdquo;&#xA;increases its own number by 5, but not the number in every other&#xA;window.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;lazy&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/V_cEHQkhqgo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;</description>
    </item>
    <item>
      <title>Collatz</title>
      <link>https://wy-cs.info/ap-cs/solving/collatz/</link>
      <pubDate>Thu, 28 Mar 2019 19:02:46 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/collatz/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Collatz_sequence&#34;&gt;Collatz sequence&lt;/a&gt;&#xA;is a sequence of positive integers. The term after value=n is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;value = n/2 if n is even&lt;/li&gt;&#xA;&lt;li&gt;value = 3*n+1 if n is odd&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example: 5 -&amp;gt; 16 -&amp;gt; 8 -&amp;gt; 4 -&amp;gt; 2 -&amp;gt; 1.&lt;/p&gt;&#xA;&lt;p&gt;Source: &lt;a href=&#34;https://projecteuler.net/problem=14&#34;&gt;Project Euler Problem 14&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h2&gt;&#xA;&lt;p&gt;Find the number n &amp;lt; 1,000,000 that gives the longest chain (before&#xA;hitting one).&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;warning&lt;/h4&gt;&#xA;&#xA;    Test your code: print out the entire sequence of numbers beginning with&#xA;n=161439. Make sure you get about 230 numbers, ending in a 1.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Suggestion&lt;/strong&gt;:&#xA;Insert code to check for an impossible condition, say n&amp;lt;1 in your&#xA;sequence generating function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Scanner</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/scanner/</link>
      <pubDate>Fri, 15 Mar 2019 13:09:46 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/scanner/</guid>
      <description></description>
    </item>
    <item>
      <title>Receipt Generator</title>
      <link>https://wy-cs.info/ecs/python/receipt-generator/</link>
      <pubDate>Wed, 13 Mar 2019 11:43:42 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/receipt-generator/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1i7k8kzOZYQ1msZ2NhyoSQY4cgaP6hwSxaclHynf0GmA/edit?usp=sharing&#34;&gt;Instructions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Example output:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;** Doc Mo Food Cart **&#xA;Proprietor: doc mo&#xA;Materials: $15.0&#xA;Labor:     $12.0&#xA;Subtotal:  $27.0&#xA;Tax(@10%): $1.2&#xA;Total:     $28.2&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>14. Comparable Clock</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/comparable-clock/</link>
      <pubDate>Tue, 26 Feb 2019 11:08:48 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/comparable-clock/</guid>
      <description>&lt;p&gt;A &lt;code&gt;Clock&lt;/code&gt; class has hours and minutes, two times are compared by first&#xA;comparing the hours. If the hours are the same, then compare the minutes.&#xA;Write a complete class definition including a constructor and the&#xA;&lt;code&gt;compareTo&lt;/code&gt; method.&lt;/p&gt;&#xA;&lt;h2 id=&#34;demo-test-code&#34;&gt;Demo Test Code&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;testCmp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;compareTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// should be negative&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;compareTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;r2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// should be positive&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;implements&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Comparable&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;m&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;compareTo&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Clock&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hour&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;minute&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;minute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>11. Animal</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/animal/</link>
      <pubDate>Wed, 20 Feb 2019 20:40:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/animal/</guid>
      <description>&lt;p&gt;The &lt;code&gt;Animal&lt;/code&gt; is an abstract class with the following methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;int beEaten()&lt;/code&gt;: returns the number of calories provided&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;void gainCalories (int amount)&lt;/code&gt;: increases number of calories.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;When you construct an &lt;code&gt;Animal&lt;/code&gt;, the&#xA;constructor needs to know how many calories are in the animal.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;CarnivoreAnimal&lt;/code&gt; is a concrete subclass of &lt;code&gt;Animal&lt;/code&gt;. It also has a&#xA;method &lt;code&gt;void eat(Animal other)&lt;/code&gt;. This method causes the&#xA;&lt;code&gt;CarnivoreAnimal&lt;/code&gt; to gain the calories provided by the other Animal&#xA;(found using the &lt;code&gt;beEaten()&lt;/code&gt; method).&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Cond Patterns</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-cond-patterns/</link>
      <pubDate>Mon, 17 Dec 2018 14:16:14 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-cond-patterns/</guid>
      <description>&lt;p&gt;Do all exercises with &lt;code&gt;build-image&lt;/code&gt;. Use a width of 600 and a height&#xA;of 500. The exercises build in complexity - if you&#xA;can do the earlier ones, go on to the later ones.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Solid red circle, center (100,200), radius 75. Background white.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Two circles in the same image:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Solid red circle, center (100,200), radius 75.&lt;/li&gt;&#xA;&lt;li&gt;Solid blue curcle, center (300,200), radius 85.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Two overlapping circles, overlapping part is purple:&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Exercises B</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-exb/</link>
      <pubDate>Wed, 12 Dec 2018 14:17:52 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-exb/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;lots-younger?: number(age1) number(age2) -&amp;gt; boolean&lt;/code&gt;. True if the&#xA;first person is lots younger than the second (15 years or more).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;kinda-close? number(x) number(y) -&amp;gt; boolean&lt;/code&gt;. True if x and y are&#xA;&amp;ldquo;kinda close&amp;rdquo; to each other, which we define to be within 20.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;is-green-circle?: image -&amp;gt; boolean&lt;/code&gt;. True if the image is a pure&#xA;green circle (of any radius).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;is-expensive?: string(material) number(weight) -&amp;gt; boolean&lt;/code&gt;. True&#xA;if the material is diamond or the weight is more than 30.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Array Exercises 1</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-1/</link>
      <pubDate>Thu, 06 Dec 2018 11:12:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-1/</guid>
      <description>&lt;h2 id=&#34;make-an-array-1&#34;&gt;Make an array 1&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Return the integer array &lt;code&gt;{2,5,10,20}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Return the String array &lt;code&gt;{&amp;quot;Fast&amp;quot;,&amp;quot;Fish&amp;quot;,&amp;quot;Frying&amp;quot;,&amp;quot;Food&amp;quot;}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;make-an-array-2&#34;&gt;Make an array 2&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an array with n zeros.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Fill it with the numbers 0 through (n-1).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  fill_a(6) == {0,1,2,3,4,5}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;make-an-array-3&#34;&gt;Make an array 3&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an array with 2n zeros.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Fill it with integers, counting up from 21.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  fill_b(3) == {21,22,23,24,25,26}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>3. Writing Basic Classes 2</title>
      <link>https://wy-cs.info/ap-cs/jm/ch03/class-basic-2/</link>
      <pubDate>Fri, 09 Nov 2018 09:45:07 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch03/class-basic-2/</guid>
      <description>&lt;h1 id=&#34;hobblebug&#34;&gt;HobbleBug&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Move, wait, move, wait, repeats&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;wheezerbug&#34;&gt;WheezerBug&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First 3 ticks: move forward&lt;/li&gt;&#xA;&lt;li&gt;Next 2 ticks: waits&lt;/li&gt;&#xA;&lt;li&gt;Repeats&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;longwheezebug&#34;&gt;LongWheezeBug&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Constructor specifies how many ticks for step, wait&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Bug b = new LongWheezeBug(5,2);&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Animations Outline</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/animation2/</link>
      <pubDate>Fri, 12 Oct 2018 21:35:05 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/animation2/</guid>
      <description>&lt;h2 id=&#34;all-steps&#34;&gt;All Steps&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Model&lt;/li&gt;&#xA;&lt;li&gt;Draw handler&lt;/li&gt;&#xA;&lt;li&gt;Tick handler&lt;/li&gt;&#xA;&lt;li&gt;Key handler?&lt;/li&gt;&#xA;&lt;li&gt;Mouse handler?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-decide-model&#34;&gt;1. Decide model&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What will the computer remember in order to draw a scene?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;the moving parts&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;image or number (usually)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write down type of model: image, number, string.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an example (used in later testing).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-draw-handler&#34;&gt;2. Draw handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How will you draw the model on the screen?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;non-moving parts go here&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;place image in appropriate spots&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write and test this function!&lt;/p&gt;</description>
    </item>
    <item>
      <title>HW 01 B</title>
      <link>https://wy-cs.info/intermediate-cs/ch01/ch01b-review/</link>
      <pubDate>Thu, 06 Sep 2018 14:13:38 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch01/ch01b-review/</guid>
      <description></description>
    </item>
    <item>
      <title>20. Frequency Analysis</title>
      <link>https://wy-cs.info/ap-cs/jm/ch20/20-word-freq/</link>
      <pubDate>Tue, 22 May 2018 09:31:46 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch20/20-word-freq/</guid>
      <description>&lt;p&gt;In this assignment, we will find the most frequent words in Jane Austen&amp;rsquo;s &lt;a href=&#34;https://www.gutenberg.org/ebooks/21839&#34;&gt;Sense and Sensibility&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Your goal is to print the top 100 most frequent words and their frequency count. Your method should be fast and flexible so that you can handle longer documents and more or less than the top 100.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Read the information in the file using &lt;code&gt;File&lt;/code&gt; and &lt;code&gt;Scanner&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Clean up the information by removing non-word characters. Make everything lowercase for consistency. This step is surprisingly tricky to get perfect. I recommend &lt;code&gt;replaceAll&lt;/code&gt; using the &lt;a href=&#34;http://www.vogella.com/tutorials/JavaRegularExpressions/article.html&#34;&gt;regular expression&lt;/a&gt; &lt;code&gt;&amp;quot;\\W+&amp;quot;&lt;/code&gt; to match at least one non-word character. See a handy &lt;a href=&#34;https://zeroturnaround.com/rebellabs/java-regular-expressions-cheat-sheet/&#34;&gt;cheat sheet&lt;/a&gt; (&lt;a href=&#34;http://files.zeroturnaround.com/pdf/zt_regular-expressions-cheat-sheet.pdf&#34;&gt;pdf&lt;/a&gt;) for more information.&lt;/li&gt;&#xA;&lt;li&gt;Create a &lt;code&gt;Map&lt;/code&gt; to count each word and their frequency.&lt;/li&gt;&#xA;&lt;li&gt;Create your own custom &lt;code&gt;WordCount&lt;/code&gt; class that will hold one word and its frequency together.&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Constructor&lt;/li&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;toString&lt;/code&gt; method.&lt;/li&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;compareTo&lt;/code&gt; method and implement the &lt;code&gt;Comparable&lt;/code&gt; interface. This should be written so that the highest frequency comes first.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Make a &lt;code&gt;TreeSet&lt;/code&gt; with the &lt;code&gt;WordCount&lt;/code&gt; class using the data from the file.&lt;/li&gt;&#xA;&lt;li&gt;Print the top 100 most frequent words in your &lt;code&gt;TreeSet&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Universe Mini Projects</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-mini-proj/</link>
      <pubDate>Mon, 30 Apr 2018 09:28:07 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-mini-proj/</guid>
      <description>&lt;p&gt;These short projects (1-2 days) will help you get used to writing&#xA;code using the Universe.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/universe/u-color/&#34;&gt;Color&lt;/a&gt;: set everyone&amp;rsquo;s color to yours.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count: add your own number to the total, display your number in a small box and the total big on the screen.&lt;/p&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/universe/u-mini-proj/count-drawn.png&#34;&gt;&#xA; &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Color Strip. Modify the color program from above so that the model is a list of colors and hitting a key adds your color to the start of the list. Draw either the whole list of colors or the first 10. &lt;a href=&#34;https://www.youtube.com/watch?v=8FkzVLkEwFA&#34;&gt;Video demo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. File Assignments</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/file-assign/</link>
      <pubDate>Wed, 18 Apr 2018 11:00:55 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/file-assign/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count the number of lines in a file.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count the number of words in a file.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count the number of characters in a file.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Find the sum of all of the integers in a file.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print out the file with line numbers in front of each line.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Where&amp;rsquo;s Waldo?&lt;/strong&gt; Create a file called &amp;ldquo;waldo.txt&amp;rdquo; that consists of 10000 lines of text. Each line should have 10 random integers from 0 to 9999. Except that there is a 0.1% chance that a given line will instead have all of the same integer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Examples</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/examples/</link>
      <pubDate>Mon, 16 Apr 2018 15:05:11 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/examples/</guid>
      <description>&lt;p&gt;In order for all of us to be working with a similar model, this page&#xA;uses the definitions below for &lt;code&gt;ship&lt;/code&gt; and &lt;code&gt;game&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (define-struct ship (name posns))&#xA;    (define-struct game (ships shots))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;How do we represent one ship, a &amp;ldquo;Destroyer&amp;rdquo; that is three squares long?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (define ex-ship &#xA;            (make-ship &amp;quot;Destroyer&amp;quot; &#xA;                       (list (make-posn 5 1) (make-posn 5 2) (make-posn 5 3))))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;How can we represent a game in which two shots have been fired?&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-1/</link>
      <pubDate>Tue, 03 Apr 2018 08:08:02 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-1/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Monday 2018-04-02: We completed the lists worksheet.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1foGKiSQdlmQeUOWtwYZnQwN3g412UnVHCitkslxCsII/edit?usp=sharing&#34;&gt;Lists Worksheet I&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tuesday 2018-04-03: 4.4b, 4.6, 4.6 enhancement - from the slides below.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1u0uOCMy9U-QG2GdPAExzW_MqskPxd2Ga837iAwcXvbc/edit?usp=sharing&#34;&gt;List Exercises - Google Slides&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Wednesday 2018-04-04: 6.1 and 6.2 from the slides. (&lt;code&gt;star-triangle&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Programming Practice 2</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-2/</link>
      <pubDate>Fri, 09 Mar 2018 10:41:32 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-2/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    Direct links below do not work.&#xA;Use this link for &lt;a href=&#34;https://www.hackerrank.com/auth/signup/pro-com-3&#34;&gt;&lt;strong&gt;ProCom 3&lt;/strong&gt;&lt;/a&gt; contest.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;2018-03-05:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/magical-square-1&#34;&gt;Magical Square 1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2018-03-06:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/dorys-microbes&#34;&gt;Dory&amp;rsquo;s Microbes&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2018-03-07:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Catch up.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;2018-03-08:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-3/challenges/happy-trails&#34;&gt;Happy Trails&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;procom-4&#34;&gt;&lt;a href=&#34;https://www.hackerrank.com/auth/signup/pro-com-4&#34;&gt;ProCom 4&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;2018-03-09:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-4/challenges&#34;&gt;Rebuilding the Rebellion, Part 2&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>14. Binary Search</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/binary-search/</link>
      <pubDate>Thu, 15 Feb 2018 10:35:29 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/binary-search/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Binary search: the traditional function returning an index where the wanted item is found, or &lt;code&gt;-1&lt;/code&gt; if the item is not found.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static int binarySearch(ArrayList&amp;lt;String&amp;gt; data,&#xA;                                String wanted);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Binary insert: this function finds the index (&lt;code&gt;idx&lt;/code&gt;) at which a new item fits in the ordering, so that &lt;code&gt;data.add(idx, newItem)&lt;/code&gt; results in &lt;code&gt;data&lt;/code&gt; still being sorted.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static int binaryInsert(ArrayList&amp;lt;String&amp;gt; data,&#xA;                                String newItem);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Everyday Git</title>
      <link>https://wy-cs.info/ap-cs/git/everyday/</link>
      <pubDate>Sun, 11 Feb 2018 07:33:00 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/git/everyday/</guid>
      <description>&lt;h2 id=&#34;everyday-commands&#34;&gt;Everyday Commands&lt;/h2&gt;&#xA;&lt;p&gt;All of these need to be run in the karel-* directory:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;./save-it&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;./update&lt;/code&gt;: git pull from the upstream repository.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;merge-conflicts&#34;&gt;Merge Conflicts&lt;/h2&gt;&#xA;&lt;p&gt;Sometimes you will modify a file at home without having saved (pushed)&#xA;your changes at school. This causes a dreaded &amp;ldquo;merge conflict&amp;rdquo; when&#xA;you update.&lt;/p&gt;&#xA;&lt;h3 id=&#34;simple-merging&#34;&gt;Simple Merging&lt;/h3&gt;&#xA;&lt;p&gt;If you are lucky, you are at school and you know that you&#xA;just want to use the code from home (the &amp;ldquo;incoming code&amp;rdquo; from the pull).&#xA;In that case, you should do:&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Shopping List</title>
      <link>https://wy-cs.info/ap-cs/jm/ch13/shopping-list/</link>
      <pubDate>Wed, 07 Feb 2018 09:13:59 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch13/shopping-list/</guid>
      <description>&lt;p&gt;See the &lt;a href=&#34;https://docs.google.com/presentation/d/1gLoI2KTCvALpSvW26gLePK7NVkqIe84Aq9lgYkWqL24/edit#slide=id.g7b177d99b_00&#34;&gt;ArrayList presentation&lt;/a&gt;, pages 9-11, exercise ArrayList 4/4a/4b.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;ShoppingSetup.java&#34;&gt;setup code&lt;/a&gt; is to provide you with a sample shopping list to use in your tests.&lt;/p&gt;&#xA;&lt;p&gt;Testing suggestion:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Test&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test_example&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ArrayList&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;correct&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Arrays&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;asList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;assertEquals&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;correct&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More detailed &lt;a href=&#34;TestShoppingList.java&#34;&gt;example testing code&lt;/a&gt; and a &lt;a href=&#34;ShoppingList.java&#34;&gt;useless function so the tests compile&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Math Soln 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/pv-tick-handler/math-soln-2/</link>
      <pubDate>Wed, 07 Feb 2018 08:18:26 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/pv-tick-handler/math-soln-2/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>2. Final - CodingBat</title>
      <link>https://wy-cs.info/ap-cs/jm/sem1final/2-final-codingbat/</link>
      <pubDate>Tue, 30 Jan 2018 08:33:07 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/sem1final/2-final-codingbat/</guid>
      <description>&lt;p&gt;&lt;strong&gt;sticksOut&lt;/strong&gt;. A word in an array &amp;ldquo;sticks out&amp;rdquo; if there is one word&#xA;before it and one word after it, and it is alphabetically after the&#xA;word that comes after it or it is at least two letters shorter than&#xA;the word before it. Return a copy of the given array in which every&#xA;word that &amp;ldquo;sticks out&amp;rdquo; is replaced by the last half of the word after&#xA;it.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use case-insensitive comparison.&lt;/li&gt;&#xA;&lt;li&gt;If the &amp;ldquo;halves&amp;rdquo; of a word must be uneven, make the &lt;em&gt;first&lt;/em&gt; &amp;ldquo;half&amp;rdquo; larger.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sticksOut([&amp;#34;alfa&amp;#34;,&amp;#34;bravo&amp;#34;,&amp;#34;zulu&amp;#34;,&amp;#34;charlie&amp;#34;]) &#xA;==&amp;gt; [&amp;#34;alfa&amp;#34;,&amp;#34;bravo&amp;#34;,&amp;#34;lie&amp;#34;,&amp;#34;charlie&amp;#34;]&#xA;&#xA;sticksOut([&amp;#34;walnut&amp;#34;,&amp;#34;pie&amp;#34;,&amp;#34;quince&amp;#34;])&#xA;==&amp;gt; [&amp;#34;walnut&amp;#34;, &amp;#34;nce&amp;#34;, &amp;#34;quince&amp;#34;]&#xA;&#xA;sticksOut([&amp;#34;DELTA&amp;#34;,&amp;#34;eragon&amp;#34;,&amp;#34;FOXTROT&amp;#34;,&amp;#34;FOXTRO&amp;#34;])&#xA;==&amp;gt; [&amp;#34;DELTA&amp;#34;,&amp;#34;eragon&amp;#34;,&amp;#34;TRO&amp;#34;,&amp;#34;FOXTRO&amp;#34;]&#xA;&#xA;sticksOut([&amp;#34;aaa&amp;#34;,&amp;#34;b&amp;#34;,&amp;#34;cccc&amp;#34;,&amp;#34;f&amp;#34;,&amp;#34;dd&amp;#34;])&#xA;==&amp;gt; [&amp;#34;aaa&amp;#34;,&amp;#34;cc&amp;#34;,&amp;#34;d&amp;#34;,&amp;#34;dd&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: The notation [&amp;hellip;] denotes an array, although this is not&#xA;syntactically correct Java. Use the correct syntax in your program and&#xA;tests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>21. Worksheet B</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/21-ws-b/</link>
      <pubDate>Thu, 11 Jan 2018 22:09:02 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/21-ws-b/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    Pay attention to contracts for the functions you are asked to write. When a &lt;code&gt;full-circle&lt;/code&gt; is mentioned, that means the data type that you defined in question 1 and 2. Both &amp;ldquo;takes in&amp;rdquo; and &amp;ldquo;given&amp;rdquo; are indications that the parameters to the function are being specified.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;animation-moving-colored-dot&#34;&gt;Animation: Moving Colored Dot&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a data definition for a type &amp;ldquo;fc&amp;rdquo; (for full-circle) that is able to store the location of the center, color, and radius of a dot.&lt;/li&gt;&#xA;&lt;li&gt;Write the actual struct definition.&lt;/li&gt;&#xA;&lt;li&gt;Test each feature (center, color, radius).&lt;/li&gt;&#xA;&lt;li&gt;Write a function to create an image of an appropriate solid circle&#xA;from a full-circle structure. (Signature: &lt;code&gt;fc -&amp;gt; image&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Design and test a function to draw a given full circle at its position&#xA;on a given background. (Signature &lt;code&gt;draw-fc: fc image -&amp;gt; image&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Design and test a function &lt;code&gt;fc-move&lt;/code&gt; that takes in a full-circle and a position, and returns a new full-circle with the same color and radius, but different position.&lt;/li&gt;&#xA;&lt;li&gt;Write a function &lt;code&gt;fc-set-color&lt;/code&gt;. Include a sensible purpose and contract.&lt;/li&gt;&#xA;&lt;li&gt;Write a function &lt;code&gt;fc-change-radius&lt;/code&gt; that takes in a full-circle and an amount to change the radius. Include sensible purpose and contract.&lt;/li&gt;&#xA;&lt;li&gt;Create an animation of a full-circle randomly moving around the screen.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>I.2 Semester I Review 2</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-2/</link>
      <pubDate>Tue, 09 Jan 2018 15:08:52 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-2/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Random dots on a circle. Create an animation of a dot moving to one of six random locations on a circle. Ideally the locations will be equally spaced.&lt;/p&gt;&#xA;&lt;p&gt;Advanced: use the x coordinate of the location to control the amount of red, and the y coordinate to control the amount of green.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;circle-6dots.rkt&#34;&gt;Solution to basic&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Purify color&lt;/strong&gt;. Given a color name, decide which component has the greatest color value and return it. In the case of a tie you can choose any of the tied values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10. Exercises</title>
      <link>https://wy-cs.info/ap-cs/jm/ch10/10-exercises/</link>
      <pubDate>Thu, 14 Dec 2017 22:19:55 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch10/10-exercises/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Thursday 2017-12-14: Exercises 3,4,5,7,9,18.&lt;/li&gt;&#xA;&lt;li&gt;Friday 2017-12-15: Exercises: TBA&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;more-exercises&#34;&gt;More Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Using the code below, compute:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;v == w&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;v.equals(w)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;v.compareTo(w)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;cow&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Build Image</title>
      <link>https://wy-cs.info/intermediate-cs/pro/build-image/</link>
      <pubDate>Wed, 06 Dec 2017 09:53:22 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/build-image/</guid>
      <description>&lt;p&gt;You should learn how to use &lt;code&gt;build-image&lt;/code&gt; to make the pictures in Chapter 15.&lt;/p&gt;&#xA;&lt;h2 id=&#34;advanced-build-image&#34;&gt;Advanced: build-image&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;http://docs.racket-lang.org/picturing-programs/index.html?q=build-image#%28def._%28%28lib._picturing-programs%2Fprivate%2Fmap-image..rkt%29._build-image%29%29&#34;&gt;build-image&lt;/a&gt; uses a function that specifies the pixel color to create a rectangular image.&lt;/p&gt;&#xA;&lt;p&gt;The first example is a function that always returns orange, so it makes an orange square:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pixel-color&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;build-image&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pixel-color&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice that &lt;code&gt;pixel-color&lt;/code&gt; does not appear in parentheses. The build-image command needs to activate (run) the &lt;code&gt;pixel-color&lt;/code&gt; function over and over again, so needs to know the name of the function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Models 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-2/</link>
      <pubDate>Fri, 27 Oct 2017 09:08:14 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-2/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    Please read Sections 8.1-8.4 in the book!&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a progress bar that shrinks in half every time a key is hit.&lt;/p&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch08/number-2/2017-10-27-bar-1.png&#34;&gt;&#xA; &lt;/figure&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch08/number-2/2017-10-27-bar-2.png&#34;&gt;&#xA; &lt;/figure&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch08/number-2/2017-10-27-bar-3.png&#34;&gt;&#xA; &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a dot that moves along a line from (50,0) to (250,300).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Exercise 8.4.4 from the text. Be sure to follow the design process!&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Haybales</title>
      <link>https://wy-cs.info/ap-cs/haskell/usaco/haybales/</link>
      <pubDate>Tue, 03 Oct 2017 20:40:50 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/usaco/haybales/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://usaco.org/index.php?page=viewproblem2&amp;amp;cpid=666&#34;&gt;haybales&lt;/a&gt; problem&#xA;is from Bronze 1, December 2016. In this directory you can download&#xA;the &lt;a href=&#34;usaco-y2016-m12.tar.bz2&#34;&gt;starter code&lt;/a&gt;. If you are&#xA;new to Unix, you unpack it with the command &lt;code&gt;tar zvxf usaco-y2016-m12.tar.bz2&lt;/code&gt;.&#xA;Inside there is a &lt;code&gt;README.md&lt;/code&gt; file that has a few more instructions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Discussion I</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-01/</link>
      <pubDate>Wed, 20 Sep 2017 09:59:51 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-01/</guid>
      <description>&lt;h1 id=&#34;chapter-4-discussion&#34;&gt;Chapter 4 Discussion&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;absence-interpretation&#34;&gt;Absence Interpretation&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Periods Absent&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Probability of all day absence&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;a &amp;gt;= 6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;a &amp;gt;= 3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;0.5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;a &amp;lt;  3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;0.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;speaker&#34;&gt;Speaker&lt;/h2&gt;&#xA;&lt;p&gt;The &amp;ldquo;BAAB&amp;rdquo; pattern:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Input&lt;/th&gt;&#xA;          &lt;th&gt;Pattern output&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;welcome&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;students&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;&lt;em&gt;students&lt;/em&gt; welcome welcome &lt;em&gt;students&lt;/em&gt;&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;&amp;ldquo;&lt;em&gt;students&lt;/em&gt; welcome welcome &lt;em&gt;students&lt;/em&gt; students students &lt;em&gt;students&lt;/em&gt; welcome welcome &lt;em&gt;students&lt;/em&gt;&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;n&lt;/td&gt;&#xA;          &lt;td&gt;(previous output) (output before that) (output before that) (previous output)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;trimult&#34;&gt;Trimult&lt;/h2&gt;&#xA;&lt;p&gt;Given a list of numbers, produce a list of all products of three terms in a row.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/ch03-reading-guide-haskell/</link>
      <pubDate>Wed, 13 Sep 2017 13:18:35 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/ch03-reading-guide-haskell/</guid>
      <description>&lt;p&gt;You should use valid Haskell types in all of your answers. Unless needed, I stick with Int for the type for integers.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How do you find the type of an expression (when using the interpreter)?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the type of a string, written in correct Haskell type syntax?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the type of the expression (5 == 5)?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the type signature for a function that takes in an integer and puts out a string?&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. HW B</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/20-maybe-b/</link>
      <pubDate>Wed, 30 Nov 2022 07:00:53 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/20-maybe-b/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;This part uses the CodeWorld definition of a Point.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type Point = (Double, Double)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Answer the following questions. They are written with some ambiguity&#xA;to avoid the question explaining exactly how to write them.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;mq&lt;/code&gt;) Give a number x, return the point &lt;code&gt;(x, x^2)&lt;/code&gt; unless this is&#xA;outside of the square with $-100 \le x \le 100$ and $-100 \le y \le 100$.&#xA;In that case return&#xA;&lt;code&gt;Nothing&lt;/code&gt;. Include two more tests showing that the function works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tangrams</title>
      <link>https://wy-cs.info/intermediate-cs/ch03/tangrams/</link>
      <pubDate>Mon, 27 Sep 2021 22:01:05 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch03/tangrams/</guid>
      <description>&lt;p&gt;If you are unfamiliar with &lt;a href=&#34;https://en.wikipedia.org/wiki/Tangram&#34;&gt;tangrams&lt;/a&gt;, read a bit about them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;&#xA;&lt;p&gt;Without using coordinates (that is, just beside, above, overlay, and their&#xA;align variants), create the eagle below. In order to get both the tail&#xA;and the feet on, expect to need &lt;em&gt;one&lt;/em&gt; coordinate-using function (e.g.,&#xA;place-image or overlay/xy).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Match shapes; the colors do not matter.&lt;/li&gt;&#xA;&lt;li&gt;Use each shape exacly once.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch03/tangrams/aguila.jpg&#34;&#xA;    alt=&#34;Tangram Eagle&#34; width=&#34;400&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;shape-images&#34;&gt;Shape Images&lt;/h2&gt;&#xA;&lt;p&gt;Use the full-size versions (see Attachments) of the images below. The&#xA;starter code below creates variables A through G holding these&#xA;shapes (without the letters).&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 1.5</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-1.5/</link>
      <pubDate>Tue, 05 Mar 2019 13:54:56 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-1.5/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;more-rand: number(x) list of numbers(nums) -&amp;gt; list of numbers&lt;/code&gt;&#xA;Give a new list with x and an additional random number from 0&#xA;through 9 put on the front of the more-rand list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-random (more-rand 5 (list 1 2 3)) &#xA;               (list 5 (random 10) 1 2 3))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;maybe-no-5: list of numbers -&amp;gt; list of numbers&lt;/code&gt;. If the first&#xA;number in the list is a 5, skip it, otherwise return the whole&#xA;list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Another Challenge</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-challenge/</link>
      <pubDate>Sat, 15 Dec 2018 16:58:14 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-challenge/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;warning&lt;/h4&gt;&#xA;&#xA;    Make sure you have done the warm-up &lt;a href=&#34;https://wy-cs.info/intermediate-cs/ch15/15-cond-patterns/&#34;&gt;conditional patterns&lt;/a&gt; before this!&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pick two centers, say (300,150) and (310, 150).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use a big 500x300 canvas.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Colors:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;magenta&lt;/em&gt; when the distance to both centers is less than 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;red&lt;/em&gt; when the distance to left point is less than 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;blue&lt;/em&gt; when the distance to right point is less than 15&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;white&lt;/em&gt; when the distance to either point is less than 30&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;gray&lt;/em&gt; otherwise&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch15/15-challenge/ripple-warmup.png&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Move the centers to (175,150) and (325, 150). Repeat the pattern by reducing&#xA;distances to less than 30 by using remainder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animations Key, Mouse</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/animation3/</link>
      <pubDate>Sun, 14 Oct 2018 22:03:31 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/animation3/</guid>
      <description>&lt;h2 id=&#34;grow-with-key&#34;&gt;Grow with Key&lt;/h2&gt;&#xA;&lt;p&gt;Stretch 10% larger when a key is hit.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write function&lt;/li&gt;&#xA;&lt;li&gt;Signature?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Just wider not taller?&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mouse-date&#34;&gt;Mouse Date&lt;/h2&gt;&#xA;&lt;p&gt;Show picture of calendar at mouse location.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;mouse-line&#34;&gt;Mouse Line&lt;/h2&gt;&#xA;&lt;p&gt;Calendar position:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;on line y=x&lt;/li&gt;&#xA;&lt;li&gt;matches mouse vertical position&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;thrice-same&#34;&gt;Thrice Same&lt;/h2&gt;&#xA;&lt;p&gt;Same image appears 3x, horizontally.&lt;/p&gt;&#xA;&lt;p&gt;How?&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;shake-and-move&#34;&gt;Shake and Move&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Move 5 pixels down when mouse is moved.&lt;/li&gt;&#xA;&lt;li&gt;Enlarge 6% every second.&lt;/li&gt;&#xA;&lt;li&gt;Move 10 pixels up when a key is hit.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;homework&#34;&gt;Homework&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;6.7.2&lt;/li&gt;&#xA;&lt;li&gt;6.7.3&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>20. Substitution Cipher</title>
      <link>https://wy-cs.info/ap-cs/jm/ch20/25-substitution-cipher/</link>
      <pubDate>Thu, 24 May 2018 11:23:56 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch20/25-substitution-cipher/</guid>
      <description>&lt;p&gt;You have to know the basic definition of a &lt;a href=&#34;https://en.wikipedia.org/wiki/Substitution_cipher&#34;&gt;substitution cipher&lt;/a&gt;. You permute the meaning of letters, so for examples &amp;ldquo;H&amp;rdquo; will mean &amp;ldquo;E&amp;rdquo;, then &amp;ldquo;T&amp;rdquo; will mean &amp;ldquo;H&amp;rdquo;, and &amp;ldquo;E&amp;rdquo; will mean &amp;ldquo;T&amp;rdquo;. Every encrypted letter stands for exactly one plaintext letter, and no encrypted letter stands for more than one plaintext letter.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Find the frequency of each individual letter in a large file. This gives you an estimate of how often each letter occurs.&lt;/li&gt;&#xA;&lt;li&gt;Find the frequency of each letter in the encrypted text (see below).&lt;/li&gt;&#xA;&lt;li&gt;Match the frequencies and try to decrypt the text.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;sample-texts&#34;&gt;Sample texts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;encrypted-caesar.txt&#34;&gt;Easy encrypted text&lt;/a&gt; - just shifted by a constant amount.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;encrypted-subst.txt&#34;&gt;Harder encrypted text&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Syllabus: All Courses</title>
      <link>https://wy-cs.info/docs/generic-cs-syllabus/</link>
      <pubDate>Sat, 09 Sep 2017 15:50:00 -0500</pubDate>
      <guid>https://wy-cs.info/docs/generic-cs-syllabus/</guid>
      <description>&lt;h1 id=&#34;computer-science-syllabus&#34;&gt;Computer Science Syllabus&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;The most important information (contact information, grading scale) comes first.&#xA;Anything you need that you do not see here, check the following sources:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Class web site resources section&lt;/li&gt;&#xA;&lt;li&gt;Email me and ask: &lt;a href=&#34;mailto:amauer-oats@cps.edu&#34;&gt;amauer-oats@cps.edu&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;course-specific-information&#34;&gt;Course-specific information&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wy-cs.info/docs/apcs-syllabus/&#34;&gt;AP Computer Science&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wy-cs.info/docs/intermediatecs-syllabus/&#34;&gt;Intermediate Computer Science&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;contact-information&#34;&gt;Contact information&lt;/h2&gt;&#xA;&lt;p&gt;I read email regularly. Email &lt;a href=&#34;mailto:amauer-oats@cps.edu&#34;&gt;amauer-oats@cps.edu&lt;/a&gt;.&#xA;I will respond within two working days, usually one.&#xA;Make sure your contact information is correct in the CPS parent portal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Constructors</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/30-constructors/</link>
      <pubDate>Mon, 22 Sep 2025 12:56:15 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/30-constructors/</guid>
      <description>&lt;p&gt;The goal of these exercises is to understand the meaning of the&#xA;type constructors and when to use them.&lt;/p&gt;&#xA;&lt;p&gt;For these exercises we will &lt;em&gt;not&lt;/em&gt; follow the usual Haskell pun of&#xA;using the same name for the type and its constructor.&lt;/p&gt;&#xA;&lt;h2 id=&#34;type-vs-value-data-constructors&#34;&gt;Type vs Value (Data) Constructors&lt;/h2&gt;&#xA;&lt;p&gt;Official Haskell vocabulary:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A type constructor makes a type (abstract). Examples: &lt;code&gt;Int&lt;/code&gt; or&#xA;&lt;code&gt;String&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;A value constructor makes a value (concrete), like 13 or &amp;ldquo;value&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The word &amp;ldquo;data constructor&amp;rdquo; is a common synonym for value constructor,&#xA;but I suggest beginners avoid it because the &lt;code&gt;data&lt;/code&gt; statement contains&#xA;both the type and value constructor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Symbols II</title>
      <link>https://wy-cs.info/nand/ch11/symbols-2/</link>
      <pubDate>Mon, 19 May 2025 11:41:03 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch11/symbols-2/</guid>
      <description>&lt;h3 id=&#34;helper-functions&#34;&gt;Helper Functions&lt;/h3&gt;&#xA;&lt;p&gt;The parser produces &lt;code&gt;(keyword &amp;quot;int&amp;quot;)&lt;/code&gt; but you just want &lt;code&gt;&amp;quot;int&amp;quot;&lt;/code&gt;. Write&#xA;a function &lt;code&gt;unwrap&lt;/code&gt; to extract the strings from &lt;code&gt;keyword&lt;/code&gt; and&#xA;&lt;code&gt;identifier&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(check-expect (unwrap &#39;(keyword &amp;quot;int&amp;quot;))&#xA;              &amp;quot;int&amp;quot;)&#xA;(check-expect (unwrap &#39;(identifier &amp;quot;nums&amp;quot;))&#xA;              &amp;quot;nums&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;To help find bugs later, you can issue warning if you don&amp;rsquo;t unwrap&#xA;anything.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(displayln (format &amp;quot;warning: did not unwrap ~a&amp;quot; var))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can also use the shortcut &lt;code&gt;~a&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;The recursive version of this &lt;code&gt;unwrap-recursive&lt;/code&gt; applies unwrap&#xA;recursively every time it finds a &lt;code&gt;list?&lt;/code&gt;. Using one of the examples below:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch 08 Quiz A</title>
      <link>https://wy-cs.info/nand/ch08/quiz-a/</link>
      <pubDate>Wed, 05 Feb 2025 11:20:44 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/quiz-a/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h1 id=&#34;stack-tracing-quiz&#34;&gt;Stack Tracing Quiz&lt;/h1&gt;&#xA;&lt;h2 id=&#34;code-a&#34;&gt;Code A&lt;/h2&gt;&#xA;&lt;p&gt;Please include &lt;code&gt;LCL&lt;/code&gt; and &lt;code&gt;ARG&lt;/code&gt; in your stack frame.&lt;/p&gt;&#xA;&lt;p&gt;Move to a new column in your stack tracing whenever you hit&#xA;&lt;code&gt;function&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, or the stack decreases (add, subtract, etc).&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;110 function Sys.main 0&#xA;120   push constant 13&#xA;130   push constant 3&#xA;140   call grind 1&#xA;150   push constant 0&#xA;160   call grind 1&#xA;170   add&#xA;180   label INFINITE&#xA;185   goto INFINITE&#xA;&#xA;190 function grind 1&#xA;200   push arg 0&#xA;210   push constant 1&#xA;220   add&#xA;230   pop local 0&#xA;240   push local 0&#xA;250   push local 0&#xA;260   push constant 2&#xA;270   gt&#xA;280   if-goto GDONE&#xA;290   call grind 1&#xA;300   label GDONE&#xA;310   return&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Java Setup 2025</title>
      <link>https://wy-cs.info/ap-cs/jm/intro/30-codespaces/</link>
      <pubDate>Wed, 08 Jan 2025 08:35:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/intro/30-codespaces/</guid>
      <description>&lt;p&gt;The basic &lt;a href=&#34;https://github.com/codespaces&#34;&gt;Github Codespaces&lt;/a&gt; image has&#xA;Java built into it. If you are already using a Codespace, skip to the&#xA;&amp;ldquo;&lt;a href=&#34;#check-java&#34;&gt;Check Java&lt;/a&gt;&amp;rdquo; section.&lt;/p&gt;&#xA;&lt;h3 id=&#34;java-starter-repository&#34;&gt;Java Starter Repository&lt;/h3&gt;&#xA;&lt;p&gt;If you already have a codespace, you can skip this section.&lt;/p&gt;&#xA;&lt;p&gt;To set up a new codespace, find with &lt;a href=&#34;https://github.com/codespaces/templates&#34;&gt;Github&amp;rsquo;s blank&#xA;template&lt;/a&gt; and select &amp;ldquo;Use&#xA;this template&amp;rdquo; to open it in a codespace. You can skip all of the&#xA;configuration options.&lt;/p&gt;&#xA;&lt;h3 id=&#34;install-code-runner&#34;&gt;Install Code Runner&lt;/h3&gt;&#xA;&lt;p&gt;Code Runner is a simplified way of running programs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Misc 03</title>
      <link>https://wy-cs.info/intermediate-cs/misc/misc-03/</link>
      <pubDate>Fri, 19 Apr 2024 07:39:27 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/misc/misc-03/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;&lt;strong&gt;Reminder&lt;/strong&gt;: Learning to write check-expects is a critical part of&#xA;the problem solving process. A solution without check-expects&#xA;cannot receive an A.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Using helper functions is good.&lt;/li&gt;&#xA;&lt;li&gt;Add inputs to a function if you want. Just make that the &amp;ldquo;helper&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!--&#xA;Teacher note: should the (location, value) pair be a posn?&#xA;something else like a kvp (&#34;key-value pair&#34;) struct?&#xA;--&gt;&#xA;&lt;p&gt;Side note: in this assignment we will tackle &lt;a href=&#34;https://adventofcode.com/2023/day/3&#34;&gt;2023 AoC&#xA;03&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mini C</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-c/</link>
      <pubDate>Thu, 16 Nov 2023 06:59:17 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-c/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Clicking alternately places a square (side length 2) and a circle&#xA;(radius 1), centered on the click.&lt;/li&gt;&#xA;&lt;li&gt;Hitting &amp;ldquo;1&amp;rdquo; changes the color of the last shape placed.&lt;/li&gt;&#xA;&lt;li&gt;Hitting &amp;ldquo;2&amp;rdquo; changes the color of the penultimate shape placed.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Make successive hits of a key cycle the color between orange and blue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Py Warmup 2</title>
      <link>https://wy-cs.info/ai/python/30-python-warmup/</link>
      <pubDate>Tue, 22 Aug 2023 11:51:39 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/30-python-warmup/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A list of the first 20 &lt;a href=&#34;https://en.wikipedia.org/wiki/Fibonacci_number?wprov=srpw1_0&#34;&gt;Fibonacci numbers&lt;/a&gt;. So $[1,1,2,3,5,\ldots]$.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A list with the &lt;a href=&#34;https://sigmatricks.com/partial-sum/&#34;&gt;partial sums&lt;/a&gt; of the first 20 perfect fourth powers.&#xA;So $[1^4, 1^4+2^4, 1^4+2^4+3^4, &amp;hellip;]$.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;some_words&lt;/code&gt; that takes in a list of strings&#xA;&lt;code&gt;someWords&lt;/code&gt; and outputs a list of the strings in &lt;code&gt;someWords&lt;/code&gt; that&#xA;come after &amp;ldquo;grapefruit&amp;rdquo; in the dictionary and have at least 5&#xA;letters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Circle Grid</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/04-further/circle-grid/</link>
      <pubDate>Sat, 19 Nov 2022 09:55:08 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/04-further/circle-grid/</guid>
      <description>&lt;p&gt;In this sequence of exercises, you will create a grid of circles and&#xA;then have one highlighted when you click on it.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ap-cs/haskell/code-world/04-further/circle-grid/blank-grid.png&#34; width=&#34;250&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Each circle shown above has radius 0.9 and is centered on a&#xA;grid. The centers are (2,2), (2,4), (2,6), (4,2), (4,4), etc.&#xA;Make a variable containing the centers of all of the circles.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a &lt;code&gt;Picture&lt;/code&gt; of the image shown above.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When you click on the screen, the program needs to determine which&#xA;circle you clicked on. As a warmup to that, write a function that&#xA;takes in a list of centers and point, and puts out the center of&#xA;the circle closest&#xA;to the point. If there is more than one &amp;ldquo;closest&amp;rdquo; center, return&#xA;any one of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Handling Events</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/03-handler/</link>
      <pubDate>Mon, 14 Nov 2022 10:02:43 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/03-handler/</guid>
      <description>&lt;p&gt;CodeWorld uses a single function to handle all events. An &lt;code&gt;Event&lt;/code&gt; can&#xA;represent mouse actions, key actions, and even time passing.&lt;/p&gt;&#xA;&lt;p&gt;In general you use &lt;code&gt;activityOf&lt;/code&gt;, which is like Racket&amp;rsquo;s &lt;a href=&#34;https://docs.racket-lang.org/teachpack/2htdpuniverse.html#%28form._world._%28%28lib._2htdp%2Funiverse..rkt%29._big-bang%29%29&#34;&gt;&lt;code&gt;big-bang&lt;/code&gt;&lt;/a&gt;. You provide:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;a starting value (&amp;ldquo;the initial model&amp;rdquo;);&lt;/li&gt;&#xA;&lt;li&gt;an event handling function; and&lt;/li&gt;&#xA;&lt;li&gt;a &amp;ldquo;draw handler&amp;rdquo; that creates the picture that you see.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Important Note&lt;/strong&gt;: your handler function needs a default case that does not change&#xA;the model when an unanticipated event happens.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch 05 Daily 2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch05/ch05-daily-2/</link>
      <pubDate>Mon, 17 Oct 2022 06:58:59 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch05/ch05-daily-2/</guid>
      <description>&lt;p&gt;Stone age functions: write using a minimum of Haskell&#xA;tools. Concentrate on writing well-crafted functions.&lt;/p&gt;&#xA;&lt;h3 id=&#34;good-to-use&#34;&gt;Good to use&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pattern matching. Example: &lt;code&gt;(x:xs)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Recursion.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&amp;ldquo;Multiple definitions.&amp;rdquo; Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  f 0 = 0&#xA;  f 1 = 1&#xA;  f n = f (n-1) + f (n-2)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Basic functions like arithmetic, &lt;code&gt;:&lt;/code&gt; and &lt;code&gt;++&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;avoid&#34;&gt;Avoid&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Conditionals (guards) and if statements. Use &amp;ldquo;multiple definitions&amp;rdquo;&#xA;whenever possible.&lt;/li&gt;&#xA;&lt;li&gt;Using &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt;. Choose pattern matching instead.&lt;/li&gt;&#xA;&lt;li&gt;Counting the items in a list (&lt;code&gt;length&lt;/code&gt; and similar&#xA;constructions). Look for another way to achive what you want, maybe&#xA;with a recursive function.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;group-i&#34;&gt;Group I&lt;/h2&gt;&#xA;&lt;p&gt;You can just use a type of &lt;code&gt;Int&lt;/code&gt; if you prefer not to think about the&#xA;generic type parameter &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code.World</title>
      <link>https://wy-cs.info/ap-cs/haskell/start/codeworld/</link>
      <pubDate>Tue, 23 Aug 2022 09:58:32 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/start/codeworld/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://code.world/haskell&#34;&gt;Code.World&lt;/a&gt; is Haskell focused on&#xA;animations, similar to Racket&amp;rsquo;s &lt;code&gt;big-bang&lt;/code&gt;. You can use it for basic work&#xA;as well.&lt;/p&gt;&#xA;&lt;p&gt;Make sure you have put &lt;code&gt;haskell&lt;/code&gt; in the URL or you will not be working&#xA;with real Haskell.&lt;/p&gt;&#xA;&lt;h2 id=&#34;main-method&#34;&gt;Main Method&lt;/h2&gt;&#xA;&lt;p&gt;In Code.World, there is no &amp;ldquo;interactive pane&amp;rdquo;, so you can&amp;rsquo;t just type&#xA;commands like at &lt;code&gt;ghci&amp;gt;&lt;/code&gt;. Everything in the document runs, and the&#xA;output you see is whatever that program prints. Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>03 Checkpoint</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/03-checkpt-1/</link>
      <pubDate>Wed, 20 Apr 2022 11:13:56 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/03-checkpt-1/</guid>
      <description>&lt;p&gt;Verify that you can require and use your message structure in your&#xA;main file.&lt;/p&gt;&#xA;&lt;p&gt;Go back to your main file and add the following code snippet.&#xA;You must save your file before you will be able to run it.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(require &amp;quot;ic-msg.rkt&amp;quot;)&#xA;(define ex1 (make-ic-msg 1 3 &amp;quot;blue&amp;quot;))&#xA;(ic-msg-col ex1) ;; should show &amp;quot;blue&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Jan Return 3</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-3/</link>
      <pubDate>Tue, 18 Jan 2022 07:21:43 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-return-3/</guid>
      <description>&lt;p&gt;This page is a review of some Haskell essentials.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Return a list of all of the numbers in a list that are smaller than&#xA;a given limit.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; smallOnes :: Int -&amp;gt; [Int] -&amp;gt; [Int]&#xA; smallOnes cutoff xs = undefined&#xA; checks1 = [smallOnes 8 [30,-10,-7,3,5,8,50] == [-10,-7,3,5]]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Return the input list, except with every occurrence of a given&#xA;number repeated 4 times.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; fourX :: Int -&amp;gt; [Int] -&amp;gt; [Int]&#xA; fourX given xs = undefined&#xA; checks2 = [fourX 9 [1,2,9,3,4,9] == [1,2,9,9,9,9,3,4,9,9,9,9],&#xA;            fourX 1 [1,2,3] == [1,1,1,1,2,3]]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Output only the numbers with the same tens digit as the given&#xA;digit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17.C</title>
      <link>https://wy-cs.info/intermediate-cs/ch17/17c/</link>
      <pubDate>Wed, 15 Dec 2021 11:48:44 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch17/17c/</guid>
      <description>&lt;h2 id=&#34;1-quick-quit&#34;&gt;1. Quick Quit&lt;/h2&gt;&#xA;&lt;p&gt;Make a 200x100 colored rectangle in the middle of a 300x200 scene.&lt;/p&gt;&#xA;&lt;p&gt;When you click on the rectangle:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;the shape changes to a 200x100 ellipse&lt;/li&gt;&#xA;&lt;li&gt;the animation stops&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Discuss:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;model&lt;/li&gt;&#xA;&lt;li&gt;draw handler: how will you show the rectangle? the ellipse?&lt;/li&gt;&#xA;&lt;li&gt;mouse handler&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Write two check-expects for the mouse-handler:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;click in the rectangle&lt;/li&gt;&#xA;&lt;li&gt;click but not in the rectangle&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Then we write functions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-random-shapes&#34;&gt;2. Random Shapes&lt;/h2&gt;&#xA;&lt;p&gt;Write an animation that will show randomly of these images:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mouse Handler</title>
      <link>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/mousehandler/</link>
      <pubDate>Fri, 19 Nov 2021 10:30:30 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/mousehandler/</guid>
      <description>&lt;p&gt;Read about &lt;a href=&#34;https://code.world/doc.html?shelf=help/haskell.shelf#4&#34;&gt;event system in&#xA;CodeWorld&lt;/a&gt; and&#xA;possibly consult some &lt;a href=&#34;demo-drawcircle.txt&#34;&gt;demonstration code&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;essential-warmup&#34;&gt;Essential Warmup&lt;/h2&gt;&#xA;&lt;p&gt;Mouse location is reported in &amp;ldquo;computer coordinates&amp;rdquo;, &lt;code&gt;Double&lt;/code&gt;s in the&#xA;range [-10,10] for both x and y. We will do some math to change these&#xA;into the board coordinates.&lt;/p&gt;&#xA;&lt;p&gt;You need to have made decisions about the size of your board squares&#xA;and their location. Consult your diagram for the draw handler. Here, I&#xA;will use the numbers from my drawing, but any method works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch07 WS 03</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws03/</link>
      <pubDate>Wed, 27 Oct 2021 11:58:57 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws03/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;f&lt;/code&gt; takes in a number and puts out a number. When the&#xA;input is 5, the output is 30. When the input is 7, the output&#xA;is 22.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write two check-expects for &lt;code&gt;f&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Write the function definition.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;An animation uses &lt;strong&gt;a number model&lt;/strong&gt; to control the radius of an orange&#xA;circle centered at (150,100) on a 300x300 background. Every 0.5&#xA;seconds the radius increases by 5. When you move the mouse, the&#xA;edge of the circle passes through the location of the mouse event&#xA;(so the radius is set to be the distance from (150,100)).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dog Data</title>
      <link>https://wy-cs.info/ml/data/swiss-dog-data/</link>
      <pubDate>Tue, 01 Jun 2021 09:25:25 -0500</pubDate>
      <guid>https://wy-cs.info/ml/data/swiss-dog-data/</guid>
      <description>&lt;section class=&#34;article&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/swiss-dog-data/files/2015-dog.csv&#34;&gt;2015-dog.csv&lt;/a&gt;&#xA;(503 kB)&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/swiss-dog-data/files/2016-dog.csv&#34;&gt;2016-dog.csv&lt;/a&gt;&#xA;(500 kB)&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/swiss-dog-data/files/2017-dog.csv&#34;&gt;2017-dog.csv&lt;/a&gt;&#xA;(516 kB)&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/swiss-dog-data/files/dogtypes.csv&#34;&gt;dogtypes.csv&lt;/a&gt;&#xA;(15 kB)&#xA;&lt;/li&gt;&#xA;&lt;/section&gt;</description>
    </item>
    <item>
      <title>3. Controls</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/controls/</link>
      <pubDate>Tue, 23 Feb 2021 08:45:08 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/controls/</guid>
      <description>&lt;h2 id=&#34;3-active-controls&#34;&gt;3. Active controls?&lt;/h2&gt;&#xA;&lt;p&gt;We will write a function to determine if a point is in the control grid.&lt;/p&gt;&#xA;&lt;h3 id=&#34;3a-center-coordinates&#34;&gt;3a. Center coordinates&lt;/h3&gt;&#xA;&lt;p&gt;What are the coordinates of the center of the Q4 control grid?&lt;/p&gt;&#xA;&lt;h3 id=&#34;3b-check-expects&#34;&gt;3b. Check expects&lt;/h3&gt;&#xA;&lt;p&gt;Write two check-expects, one showing a point that is not the&#xA;center is inside the grid, and another showing a point that is outside&#xA;the grid.&lt;/p&gt;&#xA;&lt;h3 id=&#34;3c-in-control-grid&#34;&gt;3c. In control grid?&lt;/h3&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;in-control-grid? : posn -&amp;gt; boolean&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>AP CS A 2021-2022</title>
      <link>https://wy-cs.info/docs/future/ap-cs-2021-2022/</link>
      <pubDate>Fri, 22 Jan 2021 10:18:08 -0600</pubDate>
      <guid>https://wy-cs.info/docs/future/ap-cs-2021-2022/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;AP Computer Science A is a college level course that teaches the&#xA;fundamentals of computer science programming.&lt;/p&gt;&#xA;&lt;p&gt;In 2021-2022, the course will teach:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python (until Thanksgiving)&lt;/li&gt;&#xA;&lt;li&gt;Java Fundamentals&lt;/li&gt;&#xA;&lt;li&gt;Data Structures in Java (post-AP)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;There are two phases of the class that most people are interested in:&#xA;the introduction in Python and then the main part in Java.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lookup Tables</title>
      <link>https://wy-cs.info/ml/rmisc/lookup-tables/</link>
      <pubDate>Thu, 05 Nov 2020 10:19:50 -0600</pubDate>
      <guid>https://wy-cs.info/ml/rmisc/lookup-tables/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Remember that if there are NA values, change them with &lt;code&gt;replace_na&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;lookup-list&#34;&gt;Lookup List&lt;/h2&gt;&#xA;&lt;p&gt;Using a list with names gets the job done, but I do not think it is&#xA;very efficient. You can make a function or use list access &lt;code&gt;[...]&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Long month&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;E&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_lookup&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;set_names&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;seq_along&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ex&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;E&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Long month&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_lookup[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;E&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;how_often_lookup[ex]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;often_to_number&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;how_often_lookup[x]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;often_to_number&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;lookup-table&#34;&gt;Lookup Table&lt;/h2&gt;&#xA;&lt;p&gt;Use a left join. You will have to make sure the column names&#xA;match. Use &lt;code&gt;rename&lt;/code&gt; if you want to change the value column name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch03</title>
      <link>https://wy-cs.info/ml/r4ds/ch03/</link>
      <pubDate>Thu, 10 Sep 2020 09:57:15 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch03/</guid>
      <description>&lt;p&gt;The author of the epigraph at the start of the chapter is famous, you can read his &lt;a href=&#34;http://www.ams.org/notices/200202/fea-tukey.pdf&#34;&gt;mathematical obituary&lt;/a&gt; if you are interested.&lt;/p&gt;&#xA;&lt;p&gt;The text suggests reading Wickham&amp;rsquo;s article that introduces the &amp;ldquo;Grammar of Graphics&amp;rdquo; ideas of &lt;code&gt;ggplot2&lt;/code&gt;. I think this is a good idea.&lt;/p&gt;&#xA;&lt;p&gt;FIXME: When do we read this? &lt;a href=&#34;:/7c7483ef896f414bb67355b80ef79105&#34;&gt;03b-R-Explore-GrammarOfGraphics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;32&#34;&gt;3.2&lt;/h2&gt;&#xA;&lt;p&gt;In-class activity: the relationship between engine size and fuel efficiency.&lt;/p&gt;&#xA;&lt;p&gt;According to &lt;code&gt;?mpg&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How large is the data set?&lt;/li&gt;&#xA;&lt;li&gt;What variable describes the kind of drive train?&lt;/li&gt;&#xA;&lt;li&gt;What values are allowed for the drive train variable?&lt;/li&gt;&#xA;&lt;li&gt;Which variable describes the size of the engine? What units does it use?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;More questions:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced Structures</title>
      <link>https://wy-cs.info/intermediate-cs/pro/struct/</link>
      <pubDate>Mon, 24 Feb 2020 09:37:13 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/struct/</guid>
      <description>&lt;p&gt;You can simplify the writing of lots of &amp;ldquo;struct copying&amp;rdquo; functions by&#xA;making a separate file that contains the powerful Racket function&#xA;&lt;code&gt;struct-copy&lt;/code&gt;, which is disabled in the student modes.&lt;/p&gt;&#xA;&lt;p&gt;The example file below creates a struct called &amp;ldquo;m&amp;rdquo; that contains a&#xA;position, velocity, score, and a boolean for if the game is lost. The&#xA;file also creates &amp;ldquo;updating&amp;rdquo; functions that change only one part of&#xA;the struct.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In this file you must change the language to racket (Language&#xA;-&amp;gt; Choose Language&amp;hellip; -&amp;gt; Racket).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Syllabus: AP CS</title>
      <link>https://wy-cs.info/docs/apcs-syllabus/</link>
      <pubDate>Sat, 07 Sep 2019 09:08:30 -0500</pubDate>
      <guid>https://wy-cs.info/docs/apcs-syllabus/</guid>
      <description>&lt;p&gt;This document gives information specific to the AP Computer Science course.&#xA;See the &lt;a href=&#34;https://wy-cs.info/docs/generic-cs-syllabus/&#34;&gt;all course syllabus information&lt;/a&gt; as well.&lt;/p&gt;&#xA;&lt;h2 id=&#34;ap-review&#34;&gt;AP Review&lt;/h2&gt;&#xA;&lt;p&gt;We will do approximately three weeks of AP review before the AP exam. Second semester grades will be significantly impacted by AP test preparation.&lt;/p&gt;&#xA;&lt;p&gt;Many people benefit from outside preparation. Start in February. As a rough guide, the &lt;a href=&#34;https://www.amazon.com/Barrons-AP-Computer-Science-7th/dp/1438005946&#34;&gt;Barron&amp;rsquo;s AP Computer Science A&lt;/a&gt; text is too easy and the &lt;a href=&#34;https://www.amazon.com/Prepared-Computer-Science-Exam-Java/dp/0982477538&#34;&gt;Be Prepared for the AP Computer Science Exam in Java&lt;/a&gt; book by Litvin and Litvin is too difficult. I have not read the Princeton Review text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Checkers Legal Moves</title>
      <link>https://wy-cs.info/intermediate-cs/typed/checkers/legal-moves/</link>
      <pubDate>Wed, 22 May 2019 09:14:58 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/checkers/legal-moves/</guid>
      <description>&lt;p&gt;The &lt;code&gt;legal-move?&lt;/code&gt; function has the purpose of determining whether or&#xA;not a move is legal. This function needs to know the current game&#xA;state (which includes the currently selected piece) and the position&#xA;where the player is considering moving that piece.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;legal-move? : Game Posn -&amp;gt; Boolean&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This function is complex, so we break it up into many smaller, simpler&#xA;functions.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;on-board? : Posn -&amp;gt; Boolean&lt;/code&gt;: True if the position is on the&#xA;board.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;direction-ok? : Piece Posn -&amp;gt; Boolean&lt;/code&gt;: This function just makes&#xA;sure that ordinary pieces only move the direction they start.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;space-empty?: (Listof Piece) Posn -&amp;gt; Boolean&lt;/code&gt;: Is the given square&#xA;empty?&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;distance-nonjump-ok?: Posn Posn -&amp;gt; Boolean&lt;/code&gt;: Assuming the move is&#xA;not a jump, is it ok?&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;distance-jump-ok?: Posn Posn -&amp;gt; Boolean&lt;/code&gt;: Assuming the move is a&#xA;jump, is the distance intended going to be ok?&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;get-piece: (Listof Piece) Posn -&amp;gt; Piece&lt;/code&gt;: Get the piece at the&#xA;given position. Define a fake NO-PIECE to be a piece at (-1000,1000)&#xA;to represent not finding a piece there.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;is-legal-to-jump?: (Listof Piece) Player Posn Posn -&amp;gt; Boolean&lt;/code&gt;:&#xA;Knowing where the pieces are on the board and who is attempting the&#xA;move, is the attempted jump legal? For example, jumping an opponent&#xA;is ok, but jumping your own piece or an empty square is&#xA;forbidden. Plan to figure out some helper functions for this on your own!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;&#xA;&lt;p&gt;Each function needs several check-expects before you start to write&#xA;the function. Do not start to write a function without a &lt;em&gt;purpose&lt;/em&gt; and&#xA;at least &lt;em&gt;two checks&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Potentiometer</title>
      <link>https://wy-cs.info/ecs/arduino/potentiometer/</link>
      <pubDate>Mon, 20 May 2019 17:19:41 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/potentiometer/</guid>
      <description>&lt;h2 id=&#34;basic-circuit-layout&#34;&gt;Basic circuit layout&lt;/h2&gt;&#xA;&lt;p&gt;Connect the two outside pins to power (5V, +) and ground (GND, -). It&#xA;does not matter which. The middle pin connects to one of the &amp;ldquo;analong&#xA;inputs&amp;rdquo; A0 through A5. Memorize this setup.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/potentiometer/potentiometer-only_bb.png&#34; width=&#34;400&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;basic-coding&#34;&gt;Basic coding&lt;/h2&gt;&#xA;&lt;p&gt;The&#xA;&lt;scratch class=&#34;inline&#34;&gt;analog reading () :: #468cfc reporter&lt;/scratch&gt;&#xA;block gets a number from 0 to 1023 for your program, based on the&#xA;voltage of the input you select.&lt;/p&gt;&#xA;&lt;p&gt;I will use &lt;scratch class=&#34;inline&#34;&gt;the value :: variables reporter&lt;/scratch&gt; for the variable that holds the reading from&#xA;the potentiometer. You should name the variable whatever makes sense&#xA;for you. Sometimes &amp;ldquo;brightness&amp;rdquo; is a good name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typed Structures</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-structures/</link>
      <pubDate>Mon, 06 May 2019 14:21:12 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-structures/</guid>
      <description>&lt;h2 id=&#34;picturing-programs-code&#34;&gt;Picturing Programs Code&lt;/h2&gt;&#xA;&lt;p&gt;Code in this section requires the installation of an extra package&#xA;&lt;code&gt;picturing-programs-typed&lt;/code&gt;, then&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(require typed/picturing-programs)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should also have access to a typed version of the &lt;code&gt;posn-util&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;!--&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&#xA;&#xA;    &lt;p&gt;Plain old attachments would go here.&lt;/p&gt;&#xA;&lt;pre&gt;&#xA;  &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;--&gt;&#xA;&lt;h2 id=&#34;defining-new-structures&#34;&gt;Defining new structures&lt;/h2&gt;&#xA;&lt;p&gt;A new structure need type information just like a function. There are&#xA;also some incantations you will want to use.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;#:transparent&lt;/code&gt; - Always include this.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;#:type-name&lt;/code&gt; - Usually include, should be name of struct with a&#xA;capital letter at the start.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Primes</title>
      <link>https://wy-cs.info/ap-cs/solving/primes/</link>
      <pubDate>Thu, 28 Mar 2019 19:02:50 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/primes/</guid>
      <description>&lt;p&gt;Create a class &lt;code&gt;PrimeNumbers&lt;/code&gt;. It should have:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;an &lt;code&gt;boolean isPrime(int n)&lt;/code&gt; function to determine if a number is prime&lt;/li&gt;&#xA;&lt;li&gt;a &lt;code&gt;int get(int k)&lt;/code&gt; function to return the k-th prime, starting with&#xA;&lt;code&gt;get(0)&lt;/code&gt; returning &lt;code&gt;2&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You can make these (and everything else inside the &lt;code&gt;PrimeNumbers&lt;/code&gt;&#xA;class) static, but that makes it complicated to initialize the prime&#xA;list in phase two, so I decided not to do that.&lt;/p&gt;&#xA;&lt;p&gt;The class looks like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mad Libs</title>
      <link>https://wy-cs.info/ecs/python/mad-libs/</link>
      <pubDate>Thu, 14 Mar 2019 11:05:32 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/mad-libs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mad_Libs&#34;&gt;Mad Libs&lt;/a&gt; is a game where you&#xA;ask for generic terms like &amp;ldquo;noun&amp;rdquo;, &amp;ldquo;adjective&amp;rdquo;, or &amp;ldquo;number&amp;rdquo;, and then&#xA;fill in a (usually well known) story with those words. We are going to&#xA;make one today.&lt;/p&gt;&#xA;&lt;p&gt;Minimum requirements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Four sentences.&lt;/li&gt;&#xA;&lt;li&gt;Eight substitutions.&lt;/li&gt;&#xA;&lt;li&gt;Two different instances of doing math to insert in your story. (&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The math should be addition, subtraction, multiplication, or&#xA;division. Python should be doing the math; do not just ask the person&#xA;to do it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14 .Comparable Bug</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/comparable-bug/</link>
      <pubDate>Tue, 26 Feb 2019 11:21:34 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/comparable-bug/</guid>
      <description>&lt;p&gt;A &lt;code&gt;Bug&lt;/code&gt; can go one of four directions: &amp;ldquo;North&amp;rdquo;, &amp;ldquo;South&amp;rdquo;, &amp;ldquo;East&amp;rdquo;, and&#xA;&amp;ldquo;West&amp;rdquo;. A bug also has a speed, which is a non-negative integer.&lt;/p&gt;&#xA;&lt;p&gt;Bugs are going to be ordered using both their direction and speed. The&#xA;&amp;ldquo;primary&amp;rdquo; method of ordering bugs will be their direction. We will&#xA;consider their speed only if their directions are the same.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Direction: West &amp;lt; South &amp;lt; East &amp;lt; North&lt;/li&gt;&#xA;&lt;li&gt;Speed: small number &amp;lt; big number&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You are going to write the code, including a constructor &lt;code&gt;Bug (String direction, int speed)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Candy</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/candy/</link>
      <pubDate>Wed, 20 Feb 2019 20:35:06 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/candy/</guid>
      <description>&lt;p&gt;The &lt;code&gt;Food&lt;/code&gt; interface has methods &lt;code&gt;String getName()&lt;/code&gt; and &lt;code&gt;String getTaste()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;Candy&lt;/code&gt; class implements the &lt;code&gt;Food&lt;/code&gt; interface. When printed out,&#xA;it shows the name of the candy and the flavor (as seen below).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Candy c = new Candy(&amp;quot;Red hots&amp;quot;, &amp;quot;cinnamon&amp;quot;);&#xA;Candy d = new Candy(&amp;quot;Little Mints&amp;quot;, &amp;quot;peppermint&amp;quot;);&#xA;Candy e = new ComboCandy(&amp;quot;swirl&amp;quot;, c, d);&#xA;&#xA;System.out.println(c); // &amp;quot;Red hots: cinnamon&amp;quot;&#xA;System.out.println(d); // &amp;quot;Little Mints: peppermint&amp;quot;&#xA;System.out.println(e); // &amp;quot;Combo: swirl of cinnamon and peppermint&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Notice that the combo candy always prints out as &amp;ldquo;Combo&amp;rdquo; before the&#xA;flavor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intro: coins, burgers</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-1a/</link>
      <pubDate>Sun, 10 Feb 2019 20:40:55 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-1a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count (and show) how many times you click on the button&#xA;sprite. Assume we have already made a &amp;ldquo;clicks&amp;rdquo; variable.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Reset the count of clicks to zero when you hit &amp;ldquo;r&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There is a &amp;ldquo;Mario&amp;rdquo; sprite and a &amp;ldquo;Coin&amp;rdquo; sprite.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Show on the screen how many coins Mario has touched.&lt;/li&gt;&#xA;&lt;li&gt;When Mario touches a coin, it reappears in a random location.&lt;/li&gt;&#xA;&lt;li&gt;Assume you have already made a &amp;ldquo;coins&amp;rdquo; variable.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Phil eats hamburgers. After he eats 5 burgers, he pixelates to&#xA;&amp;ldquo;125&amp;rdquo;. When he eats 10 hamburgers, he &amp;ldquo;wins&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Click Circle</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/click-circle/</link>
      <pubDate>Tue, 08 Jan 2019 08:34:06 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/click-circle/</guid>
      <description>&lt;p&gt;Exercises 20.6.3 and 20.6.4.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A circle moves to a random position on the screen every so often. (20.6.3)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Clicking on the circle displays a win screen. (20.6.4) Note: I recommend using a special &lt;code&gt;posn&lt;/code&gt; as the model to indicate when to display the win screen.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;check-with&#34;&gt;check-with&lt;/h2&gt;&#xA;&lt;p&gt;The clause &lt;code&gt;(check-with posn?)&lt;/code&gt; makes sure that every handler returns a posn.&#xA;You should add this clause to your big-bang whenever you work with posns.&#xA;Colors have a similar check, &lt;code&gt;color?&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Exercises C</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-exc/</link>
      <pubDate>Thu, 13 Dec 2018 14:04:03 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-exc/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;below-10-or-above-50?: number -&amp;gt; boolean&lt;/code&gt;. True if the number&#xA;is either below ten or above fifty.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Craps#Rules_of_play&#34;&gt;Craps&lt;/a&gt; is an old dice&#xA;game. Simplified rules: you win if you roll a 7 or an 11. Write&#xA;&lt;code&gt;win-craps?: number -&amp;gt; boolean&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;roll-2-dice: number(ignore) -&amp;gt; number&lt;/code&gt; that gives&#xA;the total from rolling two standard six-sided dice.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;play-craps: number(ignore) -&amp;gt; boolean&lt;/code&gt; that&#xA;plays one round of craps (randomly) and returns true when it is a&#xA;win.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Array Exercises 2</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-2/</link>
      <pubDate>Mon, 10 Dec 2018 09:40:46 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-2/</guid>
      <description>&lt;h1 id=&#34;countfill&#34;&gt;countFill&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;input: &lt;code&gt;int[] nums&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;input: &lt;code&gt;int s&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Fill the given array with ints counting down from &lt;code&gt;s&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;countFill&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// {80,79,78,77,76,75}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Arrays&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;nosevens&#34;&gt;noSevens&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;int noSevens(int[] nums)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Count how many sevens are in the array.&lt;/li&gt;&#xA;&lt;li&gt;Set all of them to zero.&lt;/li&gt;&#xA;&lt;li&gt;Return the number of sevens you find.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;int[] ns = { 10,7,20,7,30,7,7,40};&#xA;int a = noSevens(ns);&#xA;String ans = Arrays.toString(ns);&#xA;System.out.println(a)&#xA;System.out.println(ans)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;countbetween23&#34;&gt;countBetween23&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;int countBetween23 (int[] nums)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Models 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-3/</link>
      <pubDate>Mon, 26 Nov 2018 08:27:25 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-3/</guid>
      <description>&lt;h2 id=&#34;remainder-warmups&#34;&gt;Remainder warmups&lt;/h2&gt;&#xA;&lt;h3 id=&#34;opener&#34;&gt;Opener&lt;/h3&gt;&#xA;&lt;p&gt;Divide 324 by 7. What is the quotient? The remainder?&lt;/p&gt;&#xA;&lt;h3 id=&#34;follow-up&#34;&gt;Follow-up&lt;/h3&gt;&#xA;&lt;p&gt;When you change 324 to other numbers, what possible remainders can you get? (For example, can you get a remainder of 2 by dividing something by 7? What?)&lt;/p&gt;&#xA;&lt;h3 id=&#34;animation&#34;&gt;Animation&lt;/h3&gt;&#xA;&lt;p&gt;An animation will just count from 0 to 6, then start over again at zero.&lt;/p&gt;&#xA;&lt;p&gt;Write the model you choose, then checks and a function for the tick handler.&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Writing Basic Classes 3</title>
      <link>https://wy-cs.info/ap-cs/jm/ch03/class-basic-3/</link>
      <pubDate>Wed, 14 Nov 2018 08:46:30 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch03/class-basic-3/</guid>
      <description>&lt;p&gt;You can look up the methods available in the GridWorld classes. There&#xA;is a&#xA;&lt;a href=&#34;http://horstmann.com/gridworld/javadoc/&#34;&gt;directory of all&#xA;methods&lt;/a&gt;. The most useful&#xA;ones are Actor, Bug, and Flower.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;CreepingCharlie&lt;/code&gt;: A subclass of flower that has the normal&#xA;behavior of a flower, except every third time it is asked to&#xA;&lt;code&gt;act()&lt;/code&gt;, it changes its direction by 45 degrees. (See documentation&#xA;for Actor.)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  Flower c = new CreepingCharlie();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;PayMeBug&lt;/code&gt;: Write a class called &lt;code&gt;PayMeBug&lt;/code&gt; that is a kind of &lt;code&gt;Bug&lt;/code&gt;. Its&#xA;constructor should take in a number of steps (N) the bug will go when paid.&#xA;Write a method named &lt;code&gt;pay()&lt;/code&gt; to your &lt;code&gt;PayMeBug&lt;/code&gt;.&#xA;After it is paid, the next N times its act method is called (maybe by&#xA;hitting the &amp;ldquo;Step&amp;rdquo; button), it moves forward like an ordinary&#xA;bug. Then it stops and waits to be paid again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Discussion II</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-02/</link>
      <pubDate>Sat, 22 Sep 2018 15:29:48 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-02/</guid>
      <description>&lt;h1 id=&#34;sub_posn&#34;&gt;&lt;code&gt;sub_posn&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Two ordered pair inputs.&lt;/li&gt;&#xA;&lt;li&gt;Ordered pair output.&lt;/li&gt;&#xA;&lt;li&gt;Subtract corresponding coordinates.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;sub_posn (5,7) (1,2) == (4,5)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;dot-product&#34;&gt;Dot Product&lt;/h1&gt;&#xA;&lt;p&gt;Multiply the corresponding parts and add.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;dot_product (1,3) (4,7) == 1*4 + 3*7&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;first-of&#34;&gt;First of&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;first_of [5,1,2,3] ==&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;&amp;quot;The first element of [5,1,2,3] is 5.&amp;quot;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;pattern&#34;&gt;Pattern&lt;/h1&gt;&#xA;&lt;p&gt;Write a function creating this pattern.&lt;/p&gt;&#xA;&lt;!-- FIXME: Not rendering as a table. --&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;n&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;0&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;1&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;2&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;3&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;4&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;5&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;6&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;value&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;a&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;b&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;c&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;ab&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;bc&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;cab&amp;rdquo;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;ldquo;abbc&amp;rdquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;what&#34;&gt;What?&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;whaa (a,b,c) wow@(x:y:z:ws) = a : z : wow&#xA;&#xA;whaa (5,2,1) [2,4..10] == ?`&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Art Project</title>
      <link>https://wy-cs.info/intermediate-cs/ch03/ch03-art-project/</link>
      <pubDate>Thu, 20 Sep 2018 22:31:35 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch03/ch03-art-project/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Produce&lt;/strong&gt;: One complex piece of art per person.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Art projects should demonstrate a range of functions from the&#xA;chapter, try to use 3-4 from each category in your whole project.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Methods of placement: beside, above, overlay, place-image, as well as&#xA;the &amp;ldquo;&lt;code&gt;/align&lt;/code&gt;&amp;rdquo; variations. (Use the variations!)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Changing pictures: crop, scale, rotate.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Shapes: triangles (many!), lots more listed at the end of Chapter 3 (PDF&#xA;pages 60&amp;ndash;61).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Colors: &lt;code&gt;color-database&lt;/code&gt;, &lt;code&gt;make-color&lt;/code&gt; from the internet, &lt;code&gt;colorize&lt;/code&gt;&#xA;or &lt;code&gt;name-&amp;gt;color&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HW 01 C</title>
      <link>https://wy-cs.info/intermediate-cs/ch01/ch01c/</link>
      <pubDate>Mon, 10 Sep 2018 15:28:23 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch01/ch01c/</guid>
      <description>&lt;p&gt;Opener: Write the result of the third &amp;ldquo;step&amp;rdquo;, as seen in the Stepper.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(+ (+ 1 5)&#xA;   (* 8 (+ 2 3))&#xA;   (* 7 2))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Class/homework:&lt;/p&gt;&#xA;&lt;p&gt;Make the two images below. For the third question, use the Stepper and&#xA;find which steps (what numbers) give negative results.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hw1c-small.jpg&#34; alt=&#34;Designs to make&#34; title=&#34;Chapter 1 HW C&#34;&gt;&#xA;&lt;a href=&#34;hw1c.jpg&#34;&gt;(Big image)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Note: add another close parenthesis at the end of question 3.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Linked Lists</title>
      <link>https://wy-cs.info/ap-cs/jm/ch20/30-linked-list/</link>
      <pubDate>Tue, 22 May 2018 20:04:44 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch20/30-linked-list/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/LinkedList.html&#34;&gt;linked list&lt;/a&gt; is like our familiar &lt;code&gt;ArrayList&lt;/code&gt;, except that one can quickly add items anywhere in the list.&lt;/p&gt;&#xA;&lt;p&gt;Summary: insertion at the first or last index is a constant time O(1)&#xA;operation. Getting the first or last item from a list is also fast&#xA;O(1). Getting items from the middle is a slower O(n) operation.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;operation \ location&lt;/th&gt;&#xA;          &lt;th&gt;first&lt;/th&gt;&#xA;          &lt;th&gt;middle&lt;/th&gt;&#xA;          &lt;th&gt;last&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;add&lt;/td&gt;&#xA;          &lt;td&gt;addFirst(e)&lt;/td&gt;&#xA;          &lt;td&gt;add(idx, e)&lt;/td&gt;&#xA;          &lt;td&gt;addLast(e)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;get&lt;/td&gt;&#xA;          &lt;td&gt;getFirst()&lt;/td&gt;&#xA;          &lt;td&gt;get(idx)&lt;/td&gt;&#xA;          &lt;td&gt;getLast()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;poll (get and remove)&lt;/td&gt;&#xA;          &lt;td&gt;pollFirst()&lt;/td&gt;&#xA;          &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;pollLast()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;These are the fundamentals. There are many more convenience operations; read the &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/LinkedList.html&#34;&gt;linked list&lt;/a&gt; documentation to learn them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Color</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-color/</link>
      <pubDate>Mon, 30 Apr 2018 11:11:58 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-color/</guid>
      <description>&lt;p&gt;We will make a client that knows &amp;ldquo;its own color&amp;rdquo; and the color that is showing on the screen. When a key is hit, the client sends its own color to the server. When a client receives a color message, it changes the color that is showing on the screen to that color. This means that hitting a key will change the color on everyone&amp;rsquo;s screen to your color.&lt;/p&gt;&#xA;&lt;h2 id=&#34;model-and-message-structure&#34;&gt;Model and Message Structure&lt;/h2&gt;&#xA;&lt;p&gt;The model needs two colors, one to remember as &amp;ldquo;your color&amp;rdquo; and the&#xA;other to show on the screen.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. File Quiz</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/file-quiz/</link>
      <pubDate>Thu, 26 Apr 2018 09:30:51 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/file-quiz/</guid>
      <description>&lt;p&gt;Given the name of a folder (directory), find all of the files inside&#xA;that directory that have either:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;more than 50 lines; &lt;em&gt;or&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;a number on the first line.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You may assume that the number on the first line is separated by whitespace from the&#xA;other characters. You need only handle lines of these forms:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;211 S. Laflin St&#xA;Room 306&#xA;I ate 4 cookies.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;There is a &lt;a href=&#34;quiztry.zip&#34;&gt;zip file containing a folder of test cases&lt;/a&gt; that you may use to test your code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Outline</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/outline/</link>
      <pubDate>Mon, 16 Apr 2018 15:05:11 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/outline/</guid>
      <description>&lt;p&gt;In order for all of us to be working with a similar model, this page&#xA;uses the definitions below for &lt;code&gt;ship&lt;/code&gt; and &lt;code&gt;game&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (define-struct ship (name posns))&#xA;    (define-struct game (ships shots))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;game-logic&#34;&gt;Game logic&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;posn-in-list&lt;/code&gt;: posn(x) list-of-posns(data) -&amp;gt; boolean. True if x is&#xA;one of the posns in data. You may have to write the &lt;code&gt;posn=?&lt;/code&gt;&#xA;function yourself if it is not in your &lt;code&gt;posn-util&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;shot-hit-ship-ps?&lt;/code&gt;: posn(shot) list-of-posns(ps) -&amp;gt; boolean. True if&#xA;the shot hit the ship specified by the posns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-2/</link>
      <pubDate>Wed, 04 Apr 2018 21:37:45 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-2/</guid>
      <description>&lt;h2 id=&#34;vocabulary&#34;&gt;Vocabulary&lt;/h2&gt;&#xA;&lt;p&gt;There are four major kinds of functions on lists that we will learn to write. They are: reduce, create, map, and filter.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;reduce: Any function that takes a list of things and produces a single thing. For example: &lt;code&gt;add-them&lt;/code&gt;, which adds all of the numbers in a list of numbers. Functions like &lt;code&gt;sea-of-stars&lt;/code&gt; that take a list of posns and produce an image also fall in this category.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;create: A function that creates a list from something that is not a list. Example: &lt;code&gt;multiples-of-7&lt;/code&gt;, which takes a number N and produces a list of the first N multiples of 7.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming Practice 3</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-3/</link>
      <pubDate>Mon, 12 Mar 2018 11:02:06 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-feb/ap-programming-practice-3/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    Direct links below do not work.&#xA;Use this link for &lt;a href=&#34;https://www.hackerrank.com/auth/signup/pro-com-4&#34;&gt;&lt;strong&gt;ProCom 4&lt;/strong&gt;&lt;/a&gt; contest.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;2018-03-12:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-4/challenges/ship-prices&#34;&gt;Ship prices&lt;/a&gt;. This counts as your problem solving quiz if you do it yourself.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>22a. Fibonacci</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/30-fibonacci/</link>
      <pubDate>Mon, 26 Feb 2018 11:49:56 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/30-fibonacci/</guid>
      <description>&lt;h2 id=&#34;fibonacci&#34;&gt;Fibonacci&lt;/h2&gt;&#xA;&lt;p&gt;1,1,2,3,5,8,&amp;hellip;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What are next three?&lt;/li&gt;&#xA;&lt;li&gt;How to number them?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;fibonacci-1&#34;&gt;Fibonacci&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;n&lt;/th&gt;&#xA;          &lt;th&gt;0&lt;/th&gt;&#xA;          &lt;th&gt;1&lt;/th&gt;&#xA;          &lt;th&gt;2&lt;/th&gt;&#xA;          &lt;th&gt;3&lt;/th&gt;&#xA;          &lt;th&gt;4&lt;/th&gt;&#xA;          &lt;th&gt;5&lt;/th&gt;&#xA;          &lt;th&gt;6&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;fib(n)&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;13&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;fib(8) = ?&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;fibonacci-2&#34;&gt;Fibonacci&lt;/h2&gt;&#xA;&lt;p&gt;Where does it start?&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;fib(0) = 1&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;fib(1) = 1&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pattern?&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;fib(102) = ?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;fibonacci-3&#34;&gt;Fibonacci&lt;/h2&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;(fib n)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Use a conditional.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;fibonacci-4&#34;&gt;Fibonacci&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fib&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;</description>
    </item>
    <item>
      <title>I.3 Semester I Review 3</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-3/</link>
      <pubDate>Sun, 21 Jan 2018 23:14:35 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-3/</guid>
      <description>&lt;p&gt;At home you may want to do some review reading and practice. You should be able to do review questions 1 and 2 in one day, and question 3 in a second day. Ask if you have questions!&lt;/p&gt;&#xA;&lt;h2 id=&#34;review-reading&#34;&gt;Review Reading&lt;/h2&gt;&#xA;&lt;p&gt;Reading the book and looking at old exercises is a very productive way to study. Struggling in Chapter 21 (new structures)?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read 21.5 (&amp;ldquo;Functions returning user-defined structs&amp;rdquo;) and do the exercises.&lt;/li&gt;&#xA;&lt;li&gt;Read the extended example in 21.6 (moving-x).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Other good chapters to read are: 20 (posn and color), and 17 (animations using cond).&lt;/p&gt;</description>
    </item>
    <item>
      <title>21. Worksheet C</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/21-ws-c/</link>
      <pubDate>Wed, 17 Jan 2018 22:52:49 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/21-ws-c/</guid>
      <description>&lt;p&gt;You are going to create a new struct &lt;code&gt;np&lt;/code&gt; that remembers both a number and a posn.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Data definition: write a human-understandable description for &lt;code&gt;np&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the Racket code to define the &lt;code&gt;np&lt;/code&gt; structure.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write two &lt;code&gt;check-expect&lt;/code&gt; to verify that you get out the same information that&#xA;you put in to the structure.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Design and test &lt;code&gt;np-set-num: np(old) number -&amp;gt; np(new)&lt;/code&gt; that sets the number in a given number-position structure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Karel 3</title>
      <link>https://wy-cs.info/ap-cs/karel/ch3/</link>
      <pubDate>Thu, 19 Oct 2017 10:54:10 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch3/</guid>
      <description>&lt;h2 id=&#34;adding-new-abilities-to-robots&#34;&gt;Adding new abilities to robots&lt;/h2&gt;&#xA;&lt;h2 id=&#34;practice&#34;&gt;Practice&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2017-10-19: In class exercise 2 (PinSetter). Homework: exercise 4 (HarvestDiamond).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2017-10-20: Chapter 3 exercise 6: DigitalClock.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To set the size of a world:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-any&#34; data-lang=&#34;any&#34;&gt;    World.setSize(10,21);&#xA;    World.setVisible(true);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Grab the lower right corner of the display window and drag it UP and LEFT to fit everything on the screen.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;I have updated the AP CS master repository with several extra commands:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;./one-time&lt;/code&gt; to set a few defaults&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;./update&lt;/code&gt; to get my new changes&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;./save&lt;/code&gt; to do the three saving commands all in one&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Animation Examples</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/examples/</link>
      <pubDate>Sun, 15 Oct 2017 14:15:53 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/examples/</guid>
      <description>&lt;p&gt;Here is a complete example (&lt;a href=&#34;full-animation-example.rkt&#34;&gt;raw Racket code available&lt;/a&gt;) that&#xA;shows how to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;move an image down every tick&lt;/li&gt;&#xA;&lt;li&gt;draw three copies of the image in a row&lt;/li&gt;&#xA;&lt;li&gt;make the image get larger when you hit a key&lt;/li&gt;&#xA;&lt;li&gt;make the image get smaller when you move the mouse&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;big-bang&#34;&gt;Big bang&lt;/h2&gt;&#xA;&lt;p&gt;The big bang goes last in the Racket file, but it is first here so you can see&#xA;how everything comes together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Problem Set</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/ch03-hw1/</link>
      <pubDate>Thu, 14 Sep 2017 10:00:00 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/ch03-hw1/</guid>
      <description>&lt;p&gt;The essentials of the Types and Typeclasses chapter are: writing type&#xA;signatures for functions, reading string inputs with the &lt;code&gt;Read&lt;/code&gt; class,&#xA;and dealing with Integral to Fractional conversions when they are needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variables Intro 1 Solution</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-1b/</link>
      <pubDate>Sun, 10 Feb 2019 20:40:55 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-1b/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Count (and show) how many times you click on the button&#xA;sprite. Assume we have already made a &amp;ldquo;clicks&amp;rdquo; variable.&lt;/p&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;    When this sprite clicked&#xA;    change [clicks v] by (1)&#xA;    &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Reset the count of clicks to zero when you hit &amp;ldquo;r&amp;rdquo;.&lt;/p&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;    when [r v] key pressed&#xA;    set [clicks v] to (0)&#xA;    &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There is a &amp;ldquo;Mario&amp;rdquo; sprite and a &amp;ldquo;Coin&amp;rdquo; sprite.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Very Advanced Structures</title>
      <link>https://wy-cs.info/intermediate-cs/pro/struct-advanced/</link>
      <pubDate>Mon, 21 Apr 2025 13:11:25 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/struct-advanced/</guid>
      <description>&lt;p&gt;This page describes advanced features. You should already be familiar&#xA;with writing code in &lt;code&gt;#lang racket&lt;/code&gt; and using &lt;code&gt;#:transparent&lt;/code&gt; when&#xA;defining a struct.&lt;/p&gt;&#xA;&lt;p&gt;Figure out how to install a package in Racket by&#xA;looking in the menu under File -&amp;gt; Install Package&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Install the&#xA;&lt;a href=&#34;https://docs.racket-lang.org/struct-update/index.html&#34;&gt;struct-update&lt;/a&gt;&#xA;package.&lt;/p&gt;&#xA;&lt;p&gt;Read about &lt;a href=&#34;https://docs.racket-lang.org/struct-update/index.html&#34;&gt;how to use&#xA;define-struct-updaters&lt;/a&gt;&#xA;in the help desk.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;#lang &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;racket&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;struct-update&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define-struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pts&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;loc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;#:transparent&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;define-struct-updaters&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;picturing-programs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-game&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;upper left&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ex1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;game-loc-set&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex1&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lower left&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; (make-game 10 21 &amp;#34;lower left&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;game-pts-update&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex1&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;add1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; (make-game 10 22 &amp;#34;upper left&amp;#34;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>21. Star-Circle</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/21-star-circle/</link>
      <pubDate>Tue, 31 Jan 2023 09:49:03 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/21-star-circle/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;We will make a simple game where you control a circle and try to&#xA;surround a star.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The center of the circle follows the mouse.&lt;/li&gt;&#xA;&lt;li&gt;Clicking changes the circle between solid and outline.&lt;/li&gt;&#xA;&lt;li&gt;When the solid circle completely surrounds the star, you win.&lt;/li&gt;&#xA;&lt;li&gt;My images below are based on a 400x200 scene.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch21/21-star-circle/initial-state.png&#34;&#xA;    alt=&#34;In progress&#34; width=&#34;50%&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;In progress&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Click Circle Questions</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/click-circle-questions/</link>
      <pubDate>Tue, 08 Jan 2019 08:34:10 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/click-circle-questions/</guid>
      <description>&lt;p&gt;Main questions about the click circle project (20.6.4):&lt;/p&gt;&#xA;&lt;h2 id=&#34;stopping-an-animation&#34;&gt;Stopping an animation&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Stop condition&lt;/th&gt;&#xA;          &lt;th&gt;How?&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;user action&lt;/td&gt;&#xA;          &lt;td&gt;return &lt;code&gt;(stop-with model)&lt;/code&gt; from a handler&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;model state&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;(stop-when ...)&lt;/code&gt; in big-bang&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;win-screen&#34;&gt;Win screen&lt;/h2&gt;&#xA;&lt;p&gt;Question: How do you make a win screen show?&lt;/p&gt;&#xA;&lt;p&gt;Answer: There are three steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;win-draw-handler&lt;/code&gt; function.&lt;/li&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;should-stop?&lt;/code&gt; function. This is a technical annoyance.&#xA;For now this can do nothing:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;should-stop?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Add a &lt;code&gt;(stop-when should-stop? win-draw-handler)&lt;/code&gt; clause to&#xA;your &lt;code&gt;big-bang&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Universe Taking Turns</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-take-turns/</link>
      <pubDate>Thu, 10 May 2018 16:57:52 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-take-turns/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Labeled worlds&lt;/strong&gt;. Give each world a unique identity (a string name or a number). Show the world&amp;rsquo;s identity in the upper left corner. When you hit a key in a world, every world also shows the identity of the world you clicked in.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Colored worlds&lt;/strong&gt;. The world you hit a key in turns green. All other worlds turn yellow. Still show each world&amp;rsquo;s identity.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Active stamping&lt;/strong&gt;. Add on to your &lt;em&gt;colored worlds&lt;/em&gt; program. Hit a key to activate a world. Only one world is active at a time. When you click in the active world, it shows a solid circle. Inactive worlds show an outline circle. (Basic: only one circle at a time, no control over where it appears, disappears when de-/activating. Advanced: show all circles, center each at the location of the click.)&#xA;Video: &lt;a href=&#34;https://www.youtube.com/watch?v=ZAOmtzQ3R1w&#34;&gt;basic&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=iSimHJPIyXM&#34;&gt;advanced&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Digits</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/35-num-digits/</link>
      <pubDate>Mon, 26 Feb 2018 12:17:07 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/35-num-digits/</guid>
      <description>&lt;h2 id=&#34;number-of-digits&#34;&gt;number of digits&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;num-digits&lt;/code&gt;: whole-number -&amp;gt; number&lt;/p&gt;&#xA;&lt;p&gt;Returns how many digits in the number.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;number-of-digits-1&#34;&gt;number of digits&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use conditional.&lt;/li&gt;&#xA;&lt;li&gt;Base: answer of 1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;number-of-digits-2&#34;&gt;number of digits&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;num-digits&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;number-of-digits-3&#34;&gt;number of digits&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use conditional.&lt;/li&gt;&#xA;&lt;li&gt;Base: answer of 1&lt;/li&gt;&#xA;&lt;li&gt;Else: one more than &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;number-of-digits-4&#34;&gt;number of digits&lt;/h2&gt;&#xA;&lt;p&gt;Trick:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;(quotient number 10)&lt;/code&gt; has one fewer digit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Discussion IV</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-04/</link>
      <pubDate>Fri, 28 Sep 2018 11:18:26 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-04/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Target&lt;/strong&gt;. &lt;code&gt;tgt :: Int -&amp;gt; [Int] -&amp;gt; Int&lt;/code&gt;. Given a target&#xA;number and a list of numbers, find the smallest distance between&#xA;the target number and any number in the list.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;tgt&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;tgt&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in an ordered pair (x,y) and a list of floating point ws.&#xA;Find out if the ordered pair is on the graph of y=x^3 with x also&#xA;being one of the ws.&#xA;Return true if it is, false if not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Discussion V</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-05/</link>
      <pubDate>Fri, 01 Nov 2019 14:16:44 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-05/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;scrabble&#34;&gt;Scrabble&lt;/h2&gt;&#xA;&lt;p&gt;In the game of Scrabble you try to fit a word into spaces with some&#xA;letters already in place. In this question you will write a&#xA;function to determine if a word fits into a certain space.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Click Mega</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/click-mega/</link>
      <pubDate>Wed, 09 Jan 2019 14:30:07 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/click-mega/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Keep track of a score of how many circles have been clicked since the&#xA;last time you missed a circle.&lt;/p&gt;&#xA;&lt;p&gt;This will require a posn inside another posn.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Discussion VI</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-06/</link>
      <pubDate>Mon, 04 Nov 2019 14:30:20 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-06/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The alternating series is&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;[1, -1/2, +1/3, -1/4, +1/5, -1/6, ...]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Define &lt;code&gt;altTerm n&lt;/code&gt; to be the nth term in the sequence.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Define &lt;code&gt;altSeq m&lt;/code&gt; to be the list of the first m terms in the&#xA;sequence.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function to find the sum of the first &lt;code&gt;k&lt;/code&gt; terms of the alternating&#xA;series.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Silly Square</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/square-a/</link>
      <pubDate>Thu, 10 Jan 2019 08:29:42 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/square-a/</guid>
      <description>&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Draw handler using a posn model to draw a square on the screen.&lt;/li&gt;&#xA;&lt;li&gt;Arrow keys (left, right, up, down) to move a square on the screen.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;second-steps&#34;&gt;Second Steps&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A little square randomly drifts around the screen.&lt;/li&gt;&#xA;&lt;li&gt;You win if you hit the &amp;ldquo;w&amp;rdquo; key.&lt;/li&gt;&#xA;&lt;li&gt;Hitting the &amp;ldquo;r&amp;rdquo; key moves the square back to its starting position.&lt;/li&gt;&#xA;&lt;li&gt;When you win, some win screen appears and the animation stops.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Items to practice:&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Walk I</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/40-walk-i/</link>
      <pubDate>Mon, 22 Sep 2025 14:49:26 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/40-walk-i/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Make &lt;code&gt;AList&lt;/code&gt; mean &lt;code&gt;[Int]&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;type AList = [Int]&#xA;--&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Write a function (&lt;code&gt;ao&lt;/code&gt;) that takes in an AList and puts out an&#xA;Int. The &lt;code&gt;ao&lt;/code&gt; function adds up all of the odd numbers in the list.&#xA;Include signature.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;ao :: AList -&gt; Int&#xA;ao xs = sum [x | x&lt;-xs, odd x]&#xA;--&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Make &lt;code&gt;WP&lt;/code&gt; (for &amp;ldquo;word pair&amp;rdquo;) mean &lt;code&gt;(String, String)&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;type WP = (String, String)&#xA;--&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Write a function (&lt;code&gt;ce&lt;/code&gt;) counting how many times&#xA;the two strings are equal in a list of &lt;code&gt;WP&lt;/code&gt;.&#xA;Include signature.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;ce :: [WP] -&gt; Int&#xA;ce wps = length [1 | (x,y) &lt;- wps, x == y]&#xA;--&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Make a data type called &lt;code&gt;Celsius&lt;/code&gt; that holds a&#xA;Float measuring the temperature.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;data Celsius = Celsius Float&#xA;--&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;Make a similar data type called Fahrenheit.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;data Fahrenheit = Fahrenheit Float&#xA;-- type Fahrenheit = Float&#xA;--&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;(&lt;code&gt;tempchange&lt;/code&gt;) Make a function that converts &lt;code&gt;Celsius&lt;/code&gt; to&#xA;&lt;code&gt;Fahrenheit&lt;/code&gt; according to the rule (&lt;code&gt;f = 9/5 c + 32&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;tempchange :: Celsius -&gt; Fahrenheit&#xA;tempchange (Celsius c) = Fahrenheit (9.0/5.0*c+32.0)&#xA;--&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;Names: Surname is a String, and GivenName is a String. Make two data types, one for each.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;data Surname = Surname String&#xA;   deriving (Show, Eq)&#xA;data GivenName = GivenName String&#xA;   deriving (Show, Eq)&#xA;--&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;The &lt;code&gt;marry&lt;/code&gt; function takes two Surname and combines them with a&#xA;hyphen to create a new Surname. Write the signature and function.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;marry :: Surname -&gt; Surname -&gt; Surname&#xA;marry (Surname x) (Surname y) =&#xA;  Surname (x ++ &#34;-&#34; ++ y)&#xA;--&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Beginning with the &lt;code&gt;Point&lt;/code&gt; definition below, write a &lt;code&gt;d0&lt;/code&gt; function&#xA;measuring the distance to the origin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Posters</title>
      <link>https://wy-cs.info/nand/ch08/posters/</link>
      <pubDate>Wed, 12 Feb 2025 14:50:42 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/posters/</guid>
      <description>&lt;p&gt;Your posters should primarily be targeted at someone who knows Hack&#xA;but does not understand how the VM II system works.&lt;/p&gt;&#xA;&lt;p&gt;The major topics discussed in this chapter are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Easy: label, goto, if-goto. Posters for these topics need to clarify&#xA;details and work on an extension of some kind.&lt;/li&gt;&#xA;&lt;li&gt;Function&lt;/li&gt;&#xA;&lt;li&gt;Call&lt;/li&gt;&#xA;&lt;li&gt;Return&lt;/li&gt;&#xA;&lt;li&gt;Control flow for a call&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;Saving the return address and jumping back to it is not what anyone&#xA;expects. The most common confusion is &amp;ldquo;pushing a label on the stack&amp;rdquo;&#xA;(vs an actual number).&lt;/p&gt;</description>
    </item>
    <item>
      <title>JShell</title>
      <link>https://wy-cs.info/ap-cs/jm/intro/40-jshell/</link>
      <pubDate>Wed, 08 Jan 2025 10:15:50 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/intro/40-jshell/</guid>
      <description>&lt;p&gt;JShell gives you a command line for Java.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    This page assumes you have a Java file ready to run, the&#xA;&lt;code&gt;Practice.java&lt;/code&gt; from the &lt;a href=&#34;https://wy-cs.info/ap-cs/jm/intro/30-codespaces/&#34;&gt;setup&lt;/a&gt; page.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;From the Terminal command line:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jshell Practice.java&#xA;Jan 08, 2025 4:16:42 PM java.util.prefs.FileSystemPreferences$1 run&#xA;INFO: Created user preferences directory.&#xA;|  Welcome to JShell -- Version 21.0.5&#xA;|  For an introduction type: /help intro&#xA;&#xA;jshell&amp;gt; String[] args = {};&#xA;args ==&amp;gt; String[0] {  }&#xA;&#xA;jshell&amp;gt; Practice.main(args);&#xA;Yes, this works.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are some things to notice:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Structures</title>
      <link>https://wy-cs.info/nand/ch06/structures/</link>
      <pubDate>Mon, 21 Oct 2024 11:41:48 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch06/structures/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;The &amp;ldquo;proper&amp;rdquo; way of making structures is to use the &lt;code&gt;struct&lt;/code&gt; special&#xA;form. Always use the &lt;code&gt;#:transparent&lt;/code&gt; option. The &amp;ldquo;constructor&amp;rdquo; is the&#xA;same name as the structure. (In &lt;code&gt;#lang racket&lt;/code&gt;, the default is not to&#xA;use the &lt;code&gt;make-*&lt;/code&gt; form.)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(struct three-d (x y z) #:transparent)&#xA;(define demo (three-d 5 12 13))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Accessing the fields of a structure is done by the function&#xA;&lt;code&gt;structname-fieldname&lt;/code&gt;. For example, &lt;code&gt;(three-d-y demo)&lt;/code&gt; is 12.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functor</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/40-functor/</link>
      <pubDate>Wed, 29 Nov 2023 07:13:14 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/40-functor/</guid>
      <description>&lt;p&gt;A functor is an abstract concept, so we will begin with some examples.&lt;/p&gt;&#xA;&lt;p&gt;In order to have an example to work with, define the function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;f :: Double -&amp;gt; Double&#xA;f x = x*x&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If you want to apply &lt;code&gt;f&lt;/code&gt; to a single number, no problem.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ghci&amp;gt; x = 10&#xA;ghci&amp;gt; f x&#xA;100&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;What if you want to apply &lt;code&gt;f&lt;/code&gt; to a bunch of numbers?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ghci&amp;gt; xs = [10,20,30]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You probably know about &lt;code&gt;map&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>BFS Quiz A</title>
      <link>https://wy-cs.info/ai/graph/bfs-quiz-a/</link>
      <pubDate>Tue, 05 Sep 2023 12:48:05 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/bfs-quiz-a/</guid>
      <description>&lt;h2 id=&#34;part-1&#34;&gt;Part 1&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A &lt;code&gt;deque&lt;/code&gt; is sometimes a better (more efficient) choice than a&#xA;&lt;code&gt;list&lt;/code&gt;. (a) Give an example of one situation where a &lt;code&gt;deque&lt;/code&gt; is&#xA;better. (b) Do you know anything that is &lt;em&gt;worse&lt;/em&gt; to do with a&#xA;&lt;code&gt;deque&lt;/code&gt; than a list?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Give an example of a graph (picture, starting point indicated) for&#xA;which breadth first search ends up with 5 nodes discovered (but not&#xA;processed) at the point where 3 of them are processed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Py Warmup 3</title>
      <link>https://wy-cs.info/ai/python/40-python-dict/</link>
      <pubDate>Wed, 23 Aug 2023 10:09:03 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/40-python-dict/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;New Topics: sets, dictionaries, iterating over (k,v) pairs, randomness.&lt;/p&gt;&#xA;&lt;p&gt;Review: input, parsing, converting to integers.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-exercises&#34;&gt;Basic Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a dictionary that that lets you look up &amp;ldquo;red&amp;rdquo; to get 2,&#xA;&amp;ldquo;yellow&amp;rdquo; to get 10, and &amp;ldquo;green&amp;rdquo; to get 50.&lt;/li&gt;&#xA;&lt;li&gt;Add &amp;ldquo;blue&amp;rdquo; with a value of 90 to your dictionary.&lt;/li&gt;&#xA;&lt;li&gt;Remove &amp;ldquo;red&amp;rdquo; from your dictionary.&lt;/li&gt;&#xA;&lt;li&gt;Read about&#xA;&lt;a href=&#34;https://docs.python.org/3/library/collections.html#defaultdict-examples&#34;&gt;defaultdict&lt;/a&gt; &amp;ndash;&#xA;the examples are enough &amp;ndash;&#xA;and create one that holds the items in your dictionary above, but&#xA;gives 0 when you ask for a color that is not in the dictionary.&lt;/li&gt;&#xA;&lt;li&gt;Create a default dictionary that takes in a number and gives a&#xA;list. When the number is 0 give &lt;code&gt;[1,2,3]&lt;/code&gt;, when the number is 2,&#xA;give &lt;code&gt;[1,3]&lt;/code&gt;, and when the number is 3 give &lt;code&gt;[1,2]&lt;/code&gt;. Other numbers&#xA;should give the empty list.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;color-exercises&#34;&gt;Color Exercises&lt;/h2&gt;&#xA;&lt;p&gt;Here is a list of ten different colors:&lt;/p&gt;</description>
    </item>
    <item>
      <title>BPJ Quiz 07-09</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-07-09/</link>
      <pubDate>Thu, 19 Jan 2023 07:02:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-07-09/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a code that will create a &lt;code&gt;Scanner&lt;/code&gt; called &lt;code&gt;m&lt;/code&gt; that you&#xA;can use to read keyboard input.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use the same Scanner to get a single &lt;code&gt;int&lt;/code&gt; that a person types and store&#xA;it in a variable called &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use the same Scanner above to get a single word&#xA;(String) and store it in a variable called &lt;code&gt;w&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write in words the circumstances under which the function &lt;code&gt;f&lt;/code&gt; below&#xA;returns true.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 05 Daily 3</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch05/ch05-daily-3/</link>
      <pubDate>Tue, 18 Oct 2022 22:22:09 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch05/ch05-daily-3/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;These exercises are intended to be more challenging, for people who&#xA;have completed the more straightforward exercises.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;myisqrt :: Int -&amp;gt; Int&lt;/code&gt;) Given a nonnegative integer n, produce&#xA;the largest integer k so that k*k &amp;lt;= n. That is the &amp;ldquo;integer square&#xA;root&amp;rdquo;. Do not use Float, sqrt, or functions like floor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>04 Draw-H</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/04-drawh/</link>
      <pubDate>Wed, 20 Apr 2022 11:32:31 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/04-drawh/</guid>
      <description>&lt;p&gt;Write and test the draw handler.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(draw-h (make-ic 2 &amp;quot;light blue&amp;quot;))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;produces:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/universe/u-walkthrough/04-drawh/blue-2.png&#34;&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>17.D</title>
      <link>https://wy-cs.info/intermediate-cs/ch17/17d/</link>
      <pubDate>Wed, 15 Dec 2021 11:48:44 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch17/17d/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;This worksheet addresses a number of challenging&#xA;misconceptions. Read closely and consider you answers thoughtfully.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;keeper&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;to-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;keeper&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;What is the signature for the draw handler in the animation above?&lt;/li&gt;&#xA;&lt;li&gt;Describe in words briefly how to interpret the model. (How do you&#xA;see changes visually.)&lt;/li&gt;&#xA;&lt;li&gt;When the animation stops, you want to change the background color&#xA;to pink but the words still to be there at the same font size. How&#xA;will you indicate in the model that the animation should stop?&lt;/li&gt;&#xA;&lt;li&gt;Write the &amp;ldquo;win screen draw handler&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;The model is always supposed to be a number with absolute value&#xA;between 5 and 250. Write a function &lt;code&gt;a-ok?&lt;/code&gt; to use in the&#xA;&lt;code&gt;check-with&lt;/code&gt; clause of the big bang.&lt;/li&gt;&#xA;&lt;li&gt;Anastasia wants hitting a key to change to a light pink background and&#xA;show &amp;ldquo;No&amp;rdquo;. Her idea is in the code below. Explain what you think&#xA;about this idea.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ana&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;light pink&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Amarga wants moving the mouse to the top right corner of the screen&#xA;to change the font size to 18 point. Write a &lt;code&gt;check-expect&lt;/code&gt;&#xA;for the mouse handler &lt;code&gt;amarga-m&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch07 WS 04</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws04/</link>
      <pubDate>Wed, 03 Nov 2021 13:11:02 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/worksheets/ch07ws04/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;fix: number -&amp;gt; number&lt;/code&gt; that has the following&#xA;properties:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;input &amp;lt; 100 gives an output of 100&lt;/li&gt;&#xA;&lt;li&gt;input &amp;gt; 300 gives an output of 300&lt;/li&gt;&#xA;&lt;li&gt;otherwise the output is the same as the input&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;rand5: anything -&amp;gt; integer&lt;/code&gt;. This function&#xA;outputs a random multiple of 5 between 100 and 150 (inclusive).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;rand-shapes: anything -&amp;gt; image&lt;/code&gt;. This function&#xA;outputs an image of a square next to the image of a circle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Checks</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/checks/</link>
      <pubDate>Mon, 26 Apr 2021 12:35:37 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/checks/</guid>
      <description>&lt;p&gt;The ability to write checks independently is important! These checks&#xA;are written to help people know when they are off track, but if you&#xA;are doing top-level work, you should be analyzing and writing your own&#xA;functions (including checks). Check in here when you think your&#xA;function works.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-definitions&#34;&gt;Basic definitions&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define-struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ship&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;posns&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex-ship-1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-ship&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Betty&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ex-ship-2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-ship&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Charlie&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;shot-hit-any-ship&#34;&gt;shot-hit-any-ship?&lt;/h2&gt;&#xA;&lt;p&gt;A shot is colored a &amp;ldquo;hit&amp;rdquo; if it hits any ship on the board. The only&#xA;way to know a shot is a &amp;ldquo;miss&amp;rdquo; is by checking that it misses every&#xA;ship. Any ship you do not check could be placed at the spot where the&#xA;shot hits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coloring</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/parcels/parcels-colors/</link>
      <pubDate>Tue, 13 Apr 2021 22:08:21 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/parcels/parcels-colors/</guid>
      <description>&lt;p&gt;The basic way to color the grid is by making a function that takes in&#xA;a distance and puts out a color.&lt;/p&gt;&#xA;&lt;p&gt;An more challenging way to color the grid is by figuring out which&#xA;depot is closest and then coloring all points by a color assigned to the&#xA;closest depot.&lt;/p&gt;&#xA;&lt;p&gt;You can choose your own coloring function or use mine. I suggest you change this&#xA;once you start making images and would like to adjust the way they&#xA;look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Motion</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/motion/</link>
      <pubDate>Tue, 23 Feb 2021 08:45:19 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/motion/</guid>
      <description>&lt;p&gt;Motion is a combination of helper functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;compute-push&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;limit-motion&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;move-ball&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4a-compute-push-helper&#34;&gt;4a. Compute Push Helper&lt;/h3&gt;&#xA;&lt;p&gt;Signature: &lt;code&gt;compute-push-h: posn(mouse-pos) posn(origin-pos) -&amp;gt; posn&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Given the coordinates of the mouse and the (control center) origin,&#xA;determine how the position of the ball should change.&lt;/p&gt;&#xA;&lt;p&gt;Use the position of the mouse in the &amp;ldquo;control center&amp;rdquo; axes to&#xA;determine the motion.&#xA;When then mouse is 2 pixels to the right and 5 pixels&#xA;above the &amp;ldquo;origin,&amp;rdquo; the ball should move 2 pixels to the right and 5 up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AP Placement</title>
      <link>https://wy-cs.info/docs/future/ap-placement/</link>
      <pubDate>Fri, 22 Jan 2021 11:57:08 -0600</pubDate>
      <guid>https://wy-cs.info/docs/future/ap-placement/</guid>
      <description>&lt;p&gt;If you have already taken Intermediate Computer Science, there is no&#xA;need to take a placement test. See the &lt;a href=&#34;https://wy-cs.info/docs/future/ap-prep/&#34;&gt;AP Preparation&lt;/a&gt; page for the skills you should have acquired.&lt;/p&gt;&#xA;&lt;p&gt;You should only take AP computer science without Intermediate CS if you have&#xA;some significant programming experience.&lt;/p&gt;&#xA;&lt;p&gt;Write these functions and send them to doc mo (&lt;a href=&#34;mailto:amauer-oats@cps.edu&#34;&gt;amauer-oats@cps.edu&lt;/a&gt;):&lt;/p&gt;&#xA;&lt;p&gt;[email me if the list is not posted]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flex Sensor</title>
      <link>https://wy-cs.info/ecs/arduino/flex-sensor/</link>
      <pubDate>Tue, 11 Jun 2019 11:22:38 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/flex-sensor/</guid>
      <description>&lt;p&gt;Connect the flex sensor and a 10,000 ohm resistor. One end of the&#xA;assembly should be 5V (+), the other end GND (-). In the middle, run&#xA;the wire to an analog voltage sensor.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/flex-sensor/flex-sensor.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;when green flag clicked&#xA;forever&#xA;  set [flex reading v] to (analog reading (2) :: #468cfc) &#xA;  say (flex reading) for (0.5) seconds&#xA;  set pin (9 v) to value ((flex reading) / (4)) :: #468cfc&#xA;&#xA;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Typed Big Bang</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-bigbang/</link>
      <pubDate>Mon, 06 May 2019 17:27:31 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-bigbang/</guid>
      <description>&lt;p&gt;Reminder: you need the &lt;code&gt;2htdp-typed&lt;/code&gt; package installed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;differences&#34;&gt;Differences&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The type of the model must be given in the big-bang.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The clause for the draw function is &lt;code&gt;to-draw&lt;/code&gt; not &lt;code&gt;on-draw&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The last argument to a mouse handler is a &lt;code&gt;Mouse-Event&lt;/code&gt; but the last&#xA;argument to the key handler is just a &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  (: draw-circle (-&amp;gt; Real Image))&#xA;  (define (draw-circle n) (circle n &amp;quot;solid&amp;quot; &amp;quot;blue&amp;quot;))&#xA;&#xA;  (big-bang 5 : Number&#xA;    (on-tick add1 0.2)&#xA;    (to-draw draw-number 300 200))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;limitations&#34;&gt;Limitations&lt;/h2&gt;&#xA;&lt;p&gt;As of this writing, the limitations I am aware of are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Turtle 1</title>
      <link>https://wy-cs.info/ecs/python/turtle-1/</link>
      <pubDate>Mon, 18 Mar 2019 11:52:27 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/turtle-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://drive.google.com/open?id=1l_BJ2ES8ZBY1OQfhTFL88Xurhf01bMpDUDB4OzsyFTU&#34;&gt;Google Doc with Turtle&#xA;Assignment&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://repl.it/language/python_turtle&#34;&gt;repl.it: Python Turtle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>11. Inheritance 1</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/inheritance-1/</link>
      <pubDate>Fri, 15 Feb 2019 13:30:44 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/inheritance-1/</guid>
      <description>&lt;h2 id=&#34;relatively-simple&#34;&gt;Relatively simple&lt;/h2&gt;&#xA;&lt;p&gt;Create the following classes.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Animal&lt;/code&gt; is an abstract class&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Animal(String kind)&lt;/code&gt; constructor to create an animal of a&#xA;certain kind.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public String noise()&lt;/code&gt;: an abstract method&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public void speak()&lt;/code&gt;: print out &amp;ldquo;a [kind] says [noise()].&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Cat&lt;/code&gt; is a subclass of &lt;code&gt;Animal&lt;/code&gt;. It makes the &amp;ldquo;miaou&amp;rdquo; noise.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Dog&lt;/code&gt; is a subclass of &lt;code&gt;Animal&lt;/code&gt;. It makes the &amp;ldquo;ruff&amp;rdquo; noise. Dogs can&#xA;also do &lt;code&gt;public void trick()&lt;/code&gt;, which prints out &amp;ldquo;shake&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intro: count to goal</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-2a/</link>
      <pubDate>Mon, 11 Feb 2019 11:00:35 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-2a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Arf the Dog gets five points when he eats a cupcake and two points for&#xA;eating a hotdog. When food is eaten it disappears. Reset the points&#xA;when you click the green flag.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There are two variables. One is a &amp;ldquo;goal&amp;rdquo; number. The other is the&#xA;&amp;ldquo;current&amp;rdquo; number.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You control the current number with the arrow&#xA;keys (up, down).&lt;/li&gt;&#xA;&lt;li&gt;When the current number matches the goal number,&#xA;the backdrop changes to &amp;ldquo;You Win&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;Set the goal number to be a random number 1 to 10 when green flag&#xA;is clicked.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!-- Teacher notes: &#xA;&#xA;1. Arf the Dog: students do not name the variable appropriately. &#xA;   Lots call it &#34;variable&#34;. &#xA;&#xA;2. Designed to teach students to use variable names, since there are two. &#xA;   &#xA;--&gt;</description>
    </item>
    <item>
      <title>Variables Intro 2 Solution</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-2b/</link>
      <pubDate>Mon, 11 Feb 2019 11:00:35 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-2b/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Arf the Dog gets five points when he eats a cupcake and two points for&#xA;eating a hotdog. When food is eaten it disappears. Reset the points&#xA;when you click the green flag.&lt;/p&gt;&#xA;&lt;p&gt;Arf the Dog:&lt;/p&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;    when green flag clicked&#xA;    set [points v] to (0)&#xA;    &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Cupcake:&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;    when green flag clicked&#xA;    forever&#xA;      if &lt; touching [Arf the Dog v] &gt; then&#xA;        change [points v] by (5)&#xA;        hide&#xA;        end&#xA;      end&#xA;    &#xA;&lt;/pre&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Classes Quiz</title>
      <link>https://wy-cs.info/ap-cs/jm/ch03/ch03-quiz/</link>
      <pubDate>Thu, 15 Nov 2018 21:49:27 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch03/ch03-quiz/</guid>
      <description>&lt;p&gt;You may not use any notes or old classes to help you.&#xA;Please write your answers on paper. These questions are not intended&#xA;to be programmed on a computer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;harmonicadder&#34;&gt;HarmonicAdder&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;HarmonicAdder&lt;/code&gt; is not in GridWorld, it is just a class. Make it&#xA;normally, but do not try to put it in the grid. A &lt;code&gt;HarmonicAdder&lt;/code&gt;&#xA;begins at a given initial x-coordinate on the number line.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The &lt;code&gt;report()&lt;/code&gt; method returns the current location.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;hut()&lt;/code&gt; method updates the location by adding 1/n on move number n.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;HarmonicAdder&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;HarmonicAdder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hut&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 5.2 + 1/1 = 6.2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hut&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 6.2 + 1/2 = 6.7&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hut&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;hut&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;report&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 6.7 + 1/3 + 1/4 = 7.28333...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// &lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;System.out.println(value);&lt;/code&gt; method will let you print your&#xA;location in a visible way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animation Portfolio I</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/portfolio-1/</link>
      <pubDate>Wed, 17 Oct 2018 08:54:12 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/portfolio-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Purple square that moves up when you hit any key.&lt;/li&gt;&#xA;&lt;li&gt;Throwing star that spins and maybe moves across the screen as time passes.&lt;/li&gt;&#xA;&lt;li&gt;Sunset with a horizon: sun moves down and goes behind some&#xA;(non-white) horizon.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!-- 4. Car with two wheels that spin when you move the mouse. --&gt;&#xA;&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;&#xA;&lt;p&gt;Learn how to use &lt;code&gt;cond&lt;/code&gt; and make a car that drives back and forth&#xA;across the screen.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)])&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Walkthrough</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/ch03-walkthrough/</link>
      <pubDate>Tue, 18 Sep 2018 11:14:50 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/ch03-walkthrough/</guid>
      <description>&lt;h1 id=&#34;cubes&#34;&gt;Cubes&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;List: all perfect cubes divisible by 16 and less than N.&lt;/li&gt;&#xA;&lt;li&gt;Write signature.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;cubes&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;cubes&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;600&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;512&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;partial-average&#34;&gt;Partial Average&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Average first N items of a list.&lt;/li&gt;&#xA;&lt;li&gt;Write signature.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;partAvg&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;say-gpa&#34;&gt;Say GPA&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Make a string &amp;ldquo;My GPA is 3.10&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;Number is parameter.&lt;/li&gt;&#xA;&lt;li&gt;Write signature.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;sayGPA&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.10&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;My GPA is 3.10&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;count-up-i&#34;&gt;Count Up I&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Given start and end numbers, print a string.&lt;/li&gt;&#xA;&lt;li&gt;Usage: &lt;code&gt;countUp 3 7&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Result:  &amp;ldquo;I can count from 3 to 7: [3, 4, 5, 6, 7]&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;countUp&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;I can count from 3 to 7: [3, 4, 5, 6, 7]&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;count-up-ii&#34;&gt;Count Up II&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Given strings containing start and end numbers, as if typed.&lt;/li&gt;&#xA;&lt;li&gt;Same as Count Up I.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;countUpII&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;7&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;I can count from 3 to 7: [3, 4, 5, 6, 7]&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h1 id=&#34;need-read&#34;&gt;Need &lt;code&gt;read&lt;/code&gt;?&lt;/h1&gt;&#xA;&lt;p&gt;Use type signatures and helper functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Cookie Monster</title>
      <link>https://wy-cs.info/ap-cs/jm/ch20/40-cookie-monster/</link>
      <pubDate>Tue, 22 May 2018 21:04:28 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch20/40-cookie-monster/</guid>
      <description>&lt;p&gt;This is Exercise 12 from Java Methods Chapter 20.&lt;/p&gt;&#xA;&lt;p&gt;Start at the upper left (0,0) of a grid of numbers. Find a path to the lower right corner (cols-1,rows-1) that has the greatest sum. You can only go right and down. Your path is not allowed to contain a square with the number -1.&lt;/p&gt;&#xA;&lt;p&gt;Data: Read a file describing a 2D array. The first line of the file contains two integers rows and cols. What follows is ROWS lines of data with COLS numbers in each line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. File Divvy</title>
      <link>https://wy-cs.info/ap-cs/jm/ch15/file-divvy/</link>
      <pubDate>Thu, 26 Apr 2018 09:34:20 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch15/file-divvy/</guid>
      <description>&lt;p&gt;Get a subset of &lt;a href=&#34;smalltrips.csv&#34;&gt;Divvy bike trip data&lt;/a&gt;. Later you may want the &lt;a href=&#34;stations.csv&#34;&gt;Divvy station data&lt;/a&gt; as well.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Find the trip of longest duration.&lt;/li&gt;&#xA;&lt;li&gt;Find the oldest female rider in this dataset.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;&#xA;&lt;p&gt;You do not have to store the data in an &lt;code&gt;ArrayList&lt;/code&gt;, but if you want to do that, you should make a class &lt;code&gt;BikeInfo&lt;/code&gt; that has all of the information contained on one line in the database. Making 12 separate ArrayLists is lots harder to work with.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. Bubble Wrap</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/bubble-wrap/</link>
      <pubDate>Thu, 05 Apr 2018 12:43:42 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/bubble-wrap/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;A bunch of circles of random size and color are placed around the screen.&lt;/li&gt;&#xA;&lt;li&gt;When you click on a circle, it disappears.&lt;/li&gt;&#xA;&lt;li&gt;Only the top circle should disappear if multiple circles are stacked.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;model&#34;&gt;Model&lt;/h2&gt;&#xA;&lt;p&gt;First, think about &lt;em&gt;one bubble&lt;/em&gt;. How will you represent that? You need to keep track of at least:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;center&lt;/li&gt;&#xA;&lt;li&gt;radius&lt;/li&gt;&#xA;&lt;li&gt;color&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Next, think about &lt;em&gt;all of the bubbles&lt;/em&gt;. How will you represent a bunch&#xA;of bubbles?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming Project</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-feb/programming-project/</link>
      <pubDate>Mon, 19 Mar 2018 08:49:33 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-feb/programming-project/</guid>
      <description>&lt;p&gt;Briefly: Complete 3-5 problems from ProCom 4 on HackerRank.&lt;/p&gt;&#xA;&lt;h2 id=&#34;expectations&#34;&gt;Expectations&lt;/h2&gt;&#xA;&lt;p&gt;Five &amp;ldquo;points&amp;rdquo; is an A. You should be working on problems of an&#xA;appropriate level of difficulty for you. (Don&amp;rsquo;t do five easy problems&#xA;in one day and then say you are done.)&lt;/p&gt;&#xA;&lt;h2 id=&#34;debrief&#34;&gt;Debrief&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;List the programs that you have completed.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;For each one:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Did you have any difficulties?&lt;/li&gt;&#xA;&lt;li&gt;What were they?&lt;/li&gt;&#xA;&lt;li&gt;What was the root cause of one of those difficulties?&lt;/li&gt;&#xA;&lt;li&gt;Did you learn something? What?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;problem-specific-comments&#34;&gt;Problem-specific comments&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;A Hexing Situation&lt;/em&gt;: You cannot use split() - test cases have extra&#xA;whitespace in them (not every word is separated by a single space).&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Sum Digits</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/40-sum-digits/</link>
      <pubDate>Mon, 26 Feb 2018 14:46:21 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/40-sum-digits/</guid>
      <description>&lt;p&gt;&lt;code&gt;sum-digits&lt;/code&gt;: whole-number -&amp;gt; number&lt;/p&gt;&#xA;&lt;p&gt;Find the sum of the digits in a number.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;n&lt;/th&gt;&#xA;          &lt;th&gt;&lt;code&gt;(sum-digits n)&lt;/code&gt;&lt;/th&gt;&#xA;          &lt;th&gt;simplified&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;53&lt;/td&gt;&#xA;          &lt;td&gt;5 + 3&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;921&lt;/td&gt;&#xA;          &lt;td&gt;9 + 2 + 1&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3216&lt;/td&gt;&#xA;          &lt;td&gt;3 + 2 + 1 + 6&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;65536&lt;/td&gt;&#xA;          &lt;td&gt;6 + 5 + 5 + 3 + 6&lt;/td&gt;&#xA;          &lt;td&gt;25&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Match</title>
      <link>https://wy-cs.info/intermediate-cs/pro/match/</link>
      <pubDate>Wed, 21 Feb 2018 15:01:29 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/match/</guid>
      <description>&lt;p&gt;Pattern matching lets you take apart structures into their component&#xA;variables in a simple way.&lt;/p&gt;&#xA;&lt;p&gt;You can use &lt;code&gt;(require racket/match)&lt;/code&gt; to activate &lt;a href=&#34;https://docs.racket-lang.org/guide/match.html?q=pattern%20match&#34;&gt;pattern matching&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;matching&#34;&gt;Matching&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; function is like &lt;code&gt;cond&lt;/code&gt; except it checks to see if a value&#xA;matches a certain &amp;ldquo;literal&amp;rdquo; pattern or question. It can create&#xA;variables to use immediately instead of requiring a helper function.&lt;/p&gt;&#xA;&lt;h3 id=&#34;problem&#34;&gt;Problem&lt;/h3&gt;&#xA;&lt;p&gt;Write a function that takes in a number or a posn and returns the&#xA;distance to the correct origin (either 0 or (0,0)) depending on which&#xA;type it gets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>21. PV Intro</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/pv-intro/</link>
      <pubDate>Mon, 05 Feb 2018 14:48:00 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/pv-intro/</guid>
      <description>&lt;h2 id=&#34;pick-a-model&#34;&gt;Pick a model&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A ball moves around the screen.&lt;/li&gt;&#xA;&lt;li&gt;It keeps going in the direction it starts.&lt;/li&gt;&#xA;&lt;li&gt;What could the model be?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;define-the-model&#34;&gt;Define the model&lt;/h2&gt;&#xA;&lt;p&gt;Keep the names short; we will type them a lot.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;define-the-model-1&#34;&gt;Define the model&lt;/h2&gt;&#xA;&lt;p&gt;Keep the names short; we will type them a lot.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(define-struct pv (pos vel))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;example-needed&#34;&gt;Example needed&lt;/h2&gt;&#xA;&lt;p&gt;Create a &lt;code&gt;pv&lt;/code&gt; structure called &lt;code&gt;ex1&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Position &lt;code&gt;(100,50)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Velocity &lt;code&gt;(-5,8)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;sketch&#34;&gt;Sketch&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-pv&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;update-pos&#34;&gt;update-pos&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write &lt;code&gt;update-pos: pv -&amp;gt; pv&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Use velocity to change position, one time step.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;scale-velocity&#34;&gt;scale-velocity&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;scale-velocity: pv(orig) num(scale) -&amp;gt; pv&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Multiply both x and y components of velocity of &lt;code&gt;orig&lt;/code&gt; by &lt;code&gt;scale&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;turn-180&#34;&gt;turn-180&lt;/h2&gt;&#xA;&lt;p&gt;What would this mean? Sketch first.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Final - CodingBat</title>
      <link>https://wy-cs.info/ap-cs/jm/sem1final/4-final-codingbat/</link>
      <pubDate>Tue, 30 Jan 2018 21:11:10 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/sem1final/4-final-codingbat/</guid>
      <description>&lt;p&gt;&lt;strong&gt;noTrees&lt;/strong&gt;. Return a version of the given array where every occurrence of the word &amp;ldquo;tree&amp;rdquo; has been removed. Shift everything else down and place &amp;ldquo;grass&amp;rdquo; at the end of the array.&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;noTrees([&amp;#34;rock&amp;#34;, &amp;#34;tree&amp;#34;, &amp;#34;Grass&amp;#34;, &amp;#34;rock&amp;#34;])&#xA;==&amp;gt; [&amp;#34;rock&amp;#34;, &amp;#34;Grass&amp;#34;, &amp;#34;rock&amp;#34;, &amp;#34;grass&amp;#34;]&#xA;&#xA;noTrees([&amp;#34;Tree&amp;#34;, &amp;#34;bush&amp;#34;, &amp;#34;plant&amp;#34;, &amp;#34;house&amp;#34;, &amp;#34;TREE&amp;#34;])&#xA;==&amp;gt; [&amp;#34;bush&amp;#34;, &amp;#34;plant&amp;#34;, &amp;#34;house&amp;#34;, &amp;#34;grass&amp;#34;, &amp;#34;grass&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;You may make a new array or modify the existing one.&lt;/li&gt;&#xA;&lt;li&gt;Match &amp;ldquo;tree&amp;rdquo; in any combination of cases of the letters.&lt;/li&gt;&#xA;&lt;li&gt;Starter code: &lt;a href=&#34;NoTrees.java&#34;&gt;noTrees&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>I.4 Semester I Review 4</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-4/</link>
      <pubDate>Tue, 23 Jan 2018 14:36:09 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-4/</guid>
      <description>&lt;p&gt;Remember to practice writing check-expects for your functions, so you&#xA;have a way to make progress.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Analyze the program segment below.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define initial &amp;quot;large fluffy bunny&amp;quot;)&#xA; (define (f model) (+ 1 (string-length model)))&#xA; (define (g model) (text model 25 &amp;quot;black&amp;quot;))&#xA; (define (k model x y e) (string-append model x))&#xA; (define (p model w) (substring model 1))&#xA; (big-bang initial ...)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Is &lt;code&gt;f&lt;/code&gt; suitable for a tick handler? Explain.&lt;/li&gt;&#xA;&lt;li&gt;What could &lt;code&gt;g&lt;/code&gt; be used for?&lt;/li&gt;&#xA;&lt;li&gt;Are either &lt;code&gt;k&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt; suitable handlers? If so, for what?&lt;/li&gt;&#xA;&lt;li&gt;Write a useful, correct &lt;code&gt;check-expect&lt;/code&gt; for the function &lt;code&gt;p&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Write a useful, correct &lt;code&gt;check-expect&lt;/code&gt; for the function &lt;code&gt;k&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.mathsisfun.com/definitions/median.html&#34;&gt;median&lt;/a&gt; is&#xA;the middle number in a list of sorted numbers. Write the function&#xA;&lt;code&gt;median&lt;/code&gt; that works for three numbers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Tightrope</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/tightrope/</link>
      <pubDate>Tue, 19 Dec 2017 08:25:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/tightrope/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There are two unmoving blue circles on the screen.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You can move a square with the mouse.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Square color is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Green if the distance from the square to circle 1 and the distance from the square to circle 2 are within 20 of each other.&lt;/li&gt;&#xA;&lt;li&gt;Red otherwise.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Some people had trouble understanding this description. In a computer-like language:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a = distance from square to circle 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b = distance from square to circle 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;green if a and b are within 20 of each other&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Write:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Models 4</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-4/</link>
      <pubDate>Tue, 31 Oct 2017 10:15:38 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-4/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How to show a number in an image:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(number-&amp;gt;string 50) makes &amp;ldquo;50&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;(text &amp;hellip;) wrapped around that makes an image&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example: &lt;code&gt;(text (number-&amp;gt;string 50) FONT-SIZE &amp;quot;purple&amp;quot;)&lt;/code&gt; produces an image with the number 50 in FONT-SIZE point purple font.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a dot follow the line y=2x-30 from x=0 to x=100. Repeat over from x=0 once the dot gets to 100.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Draw a random radius circle (10&amp;lt;=r&amp;lt;=100) on the screen. Show the radius inside the circle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Karel 4.1-4.4</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4a/</link>
      <pubDate>Thu, 26 Oct 2017 22:30:52 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4a/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Monday, October 23, 2017: Read Section 4.1-4.3 and do Exercise 3.5 (DiamondBot) with a Choreographer robot.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Tuesday October 24, 2017: Section 4.2 review (abstract class, override methods).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Class: make a robot (team) to create &lt;a href=&#34;4-2b-Abstract-II-End.png&#34;&gt;my figure 4.2b ending&lt;/a&gt; from the &lt;a href=&#34;https://wy-ap-cs.blogspot.com/2014/09/chapter-4.html&#34;&gt;old blog&lt;/a&gt;. Then make a robot (team) to pick up &lt;a href=&#34;4-2b-Abstract-II-Start.png&#34;&gt;my figure 4.2b start&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Homework: Read Section 4.4.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is the function of an interface?&lt;/li&gt;&#xA;&lt;li&gt;What does delegation mean in cs?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Wednesday, October 25, 2017: Section 4.4 (interfaces)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Problem Set II</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-problemset/</link>
      <pubDate>Wed, 20 Sep 2017 20:32:15 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-problemset/</guid>
      <description>&lt;p&gt;Key new concepts: patterns, guards, where, let, case.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    Please write function signatures for every solution.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Some of these problems are classical exercises with solutions&#xA;online. Please do not search for them or read them before turning in&#xA;your work.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;First Third&lt;/em&gt;. Return the sum of the first and third elements in the list. Example: &lt;code&gt;firstThird [10,30,50,90] == 60&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take a list of items that can be compared for equality &lt;code&gt;(Eq a)&lt;/code&gt; and&#xA;reduce repeats to a single element. Only reduce repeats that are next to each other in the list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Syllabus: Intermediate</title>
      <link>https://wy-cs.info/docs/intermediatecs-syllabus/</link>
      <pubDate>Sat, 09 Sep 2017 15:49:20 -0500</pubDate>
      <guid>https://wy-cs.info/docs/intermediatecs-syllabus/</guid>
      <description>&lt;p&gt;This document details the information specific to Intermediate Computer Science.&#xA;See the &lt;a href=&#34;https://wy-cs.info/docs/generic-cs-syllabus/&#34;&gt;all course syllabus information&lt;/a&gt; as well.&lt;/p&gt;&#xA;&lt;h2 id=&#34;materials&#34;&gt;Materials&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Notebook - a lightweight paper notebook dedicated to computer science.&lt;/li&gt;&#xA;&lt;li&gt;USB Drive of any size. (Optional; otherwise use Google Drive.)&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Picturing Programs&lt;/em&gt; book &lt;a href=&#34;http://PicturingPrograms.com&#34;&gt;electronic&#xA;version&lt;/a&gt; - downloaded.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://racket-lang.org&#34;&gt;DrRacket&lt;/a&gt; programming environment - installed at home.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://wescheme.org&#34;&gt;WeScheme&lt;/a&gt; - Online only replacement for DrRacket. Use if you cannot install software. You have to &lt;a href=&#34;https://wy-cs.info/intermediate-cs/docs/ics-wescheme-note/&#34;&gt;read special instructions&lt;/a&gt; to make it work.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>20. Ellipse</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ellipse/</link>
      <pubDate>Tue, 16 Feb 2021 13:49:25 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ellipse/</guid>
      <description>&lt;h2 id=&#34;step-i-setup&#34;&gt;Step I: Setup&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The background is 400x300.&lt;/li&gt;&#xA;&lt;li&gt;There are blue circles centered at (50,150) and (350,150).&lt;/li&gt;&#xA;&lt;li&gt;The model is a posn.&lt;/li&gt;&#xA;&lt;li&gt;A purple circle follows your mouse.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-ii-colors&#34;&gt;Step II: Colors&lt;/h2&gt;&#xA;&lt;p&gt;This description will use two variables:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;dA&lt;/code&gt;: the distance from the model to the center of the left circle&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;dB&lt;/code&gt;: the distance from the model to the center of the right circle&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Measure the &lt;em&gt;sum&lt;/em&gt; of the distances (&lt;code&gt;dA+dB&lt;/code&gt;). If that number is less&#xA;than 360, use a purple circle, but otherwise use an orange circle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animation Portfolio II</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/portfolio-2/</link>
      <pubDate>Wed, 17 Oct 2018 08:54:17 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/portfolio-2/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;An arrow flies across the screen and stops with the head of the&#xA;arrow buried in the target (but the fletching still visible).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Fan.) A fan with three blades is in the off position. When you&#xA;hit a key, all of the blades get larger. Making the blades &amp;ldquo;move&amp;rdquo; is&#xA;an optical illusion that probably takes too much effort, but if you&#xA;want try it with the mouse motion.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Karel 4.5-4.6</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4b/</link>
      <pubDate>Mon, 30 Oct 2017 09:52:53 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4b/</guid>
      <description>&lt;h2 id=&#34;neighbortalker&#34;&gt;NeighborTalker&lt;/h2&gt;&#xA;&lt;p&gt;Read Section 4.5.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is the purpose of the &lt;code&gt;private BeeperPutter neighbor&lt;/code&gt; field of a &lt;code&gt;NeighborTalker&lt;/code&gt;?&lt;/li&gt;&#xA;&lt;li&gt;Could the &lt;code&gt;neighbor&lt;/code&gt; field be &lt;code&gt;null&lt;/code&gt; when you run the &lt;code&gt;distributeBeepers()&lt;/code&gt; method?&lt;/li&gt;&#xA;&lt;li&gt;Draw a box and arrow diagram showing the different robots that &lt;code&gt;aRobot&lt;/code&gt; points to as the main method on the top of page 82 runs.&lt;/li&gt;&#xA;&lt;li&gt;How could you modify the &lt;code&gt;distributeBeepers()&lt;/code&gt; method so that the last robot in the line puts their beeper down and moves before the second to last robot in line, etc., so the first robot in line is the last one to put their beeper down and move.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;robot-horde-project&#34;&gt;Robot Horde Project&lt;/h2&gt;&#xA;&lt;p&gt;Make a &amp;ldquo;Robot Horde&amp;rdquo; where each robot sends a &lt;code&gt;swarm()&lt;/code&gt; message to the 0, 1, or 2 robots that it controls.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Digits II</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/42-digits-ii/</link>
      <pubDate>Wed, 02 Feb 2022 12:21:11 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/42-digits-ii/</guid>
      <description>&lt;p&gt;After this worksheet you are supposed to know how to process a number&#xA;digit by digit, or in groups of digits.&lt;/p&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;mult-13?&lt;/code&gt;) Return true if a number is a multiple of 13, false&#xA;otherwise.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;tg&lt;/code&gt;: Thinking Only) The &lt;code&gt;total-gap&lt;/code&gt; function &lt;code&gt;tg&lt;/code&gt; finds the total&#xA;of the positive difference between adjacent digits of a&#xA;number. That means you will look at each pair of neighboring&#xA;digits, find their &amp;ldquo;positive differences&amp;rdquo;, and then add up those&#xA;differences.  You are &lt;em&gt;just writing good examples&lt;/em&gt; that you will&#xA;use to write that function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Click Rectangle</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/click-rect/</link>
      <pubDate>Thu, 18 Feb 2021 22:00:37 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/click-rect/</guid>
      <description>&lt;p&gt;This animation uses a posn to give the location of the &lt;em&gt;lower left&#xA;corner&lt;/em&gt; of a 60x40 rectangle on a 300x200 background. There is a red&#xA;dot drawn to show the location of the &amp;ldquo;anchor&amp;rdquo; in the lower left&#xA;corner of the rectangle.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch20/click-rect/click-rect-1.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;aside-why-the-lower-left&#34;&gt;Aside: Why the lower left?&lt;/h2&gt;&#xA;&lt;p&gt;We are using the lower left corner so we can get practice dealing with&#xA;anchor points that are not the center. For a rectangle working with&#xA;the lower left makes it a little bit harder, but for a triangle&#xA;working with the center is a &lt;em&gt;lot&lt;/em&gt; harder than working with the lower&#xA;left corner. We practice slightly unusual situations to make sure we&#xA;have a good understanding of &lt;em&gt;why&lt;/em&gt; we do each part of the program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Digits III</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/44-digits-iii/</link>
      <pubDate>Wed, 02 Feb 2022 22:45:45 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/44-digits-iii/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;ism? : number -&amp;gt; boolean&lt;/code&gt;) Return true if a number is a multiple of 19 or a divisor&#xA;of 5698296.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;twentyish: number -&amp;gt; number&lt;/code&gt;) Take each non-zero digit in a&#xA;number, divide 20 by that number, and add up the results.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (twentyish 14) =&amp;gt; 20/1 + 20/4 = 25&#xA; (twentyish 145) =&amp;gt; 20/1 + 20/4 + 20/5 = 29&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Write a sequence of three more related examples.&lt;/li&gt;&#xA;&lt;li&gt;Write the function.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Without running the function, trace through the code below to show&#xA;what happens with &lt;code&gt;(mess 15)&lt;/code&gt;, &lt;code&gt;(mess 23)&lt;/code&gt; and &lt;code&gt;(mess 41)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CodingBat Interlude</title>
      <link>https://wy-cs.info/ap-cs/karel/codingbat/</link>
      <pubDate>Thu, 02 Nov 2017 07:40:52 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/codingbat/</guid>
      <description>&lt;p&gt;We are studying something easy for the two days at the end of the quarter.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an account on &lt;a href=&#34;http://codingbat.com/java&#34;&gt;CodingBat.com&lt;/a&gt;. Do not use a valuable password.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Wednesday, November 1:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read about &lt;a href=&#34;http://codingbat.com/doc/java-if-boolean-logic.html&#34;&gt;logical operations in Java&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;See below for a quick summary.&lt;/li&gt;&#xA;&lt;li&gt;Do eight problems from &lt;a href=&#34;http://codingbat.com/java/Logic-1&#34;&gt;Logic-1&lt;/a&gt; or higher.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Thursday, November 2:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Read about &lt;a href=&#34;http://codingbat.com/doc/java-if-boolean-logic.html&#34;&gt;for and while loops&lt;/a&gt; .&lt;/li&gt;&#xA;&lt;li&gt;Read about &lt;a href=&#34;http://codingbat.com/doc/java-array-loops.html&#34;&gt;arrays&lt;/a&gt; which provide a context for using &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;See below for a quick summary.&lt;/li&gt;&#xA;&lt;li&gt;Do eight problems from &lt;a href=&#34;http://codingbat.com/java/Array-2&#34;&gt;Arrays-2&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;summary-of-logical-operations&#34;&gt;Summary of Logical Operations&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;if - else if - else&lt;/li&gt;&#xA;&lt;li&gt;and(&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;), or (&lt;code&gt;||&lt;/code&gt;), not (&lt;code&gt;!&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;someFunction&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;boolean&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;answer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;summary-of-looping&#34;&gt;Summary of Looping&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;arrayname.length&lt;/code&gt; finds the length of the array&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;arrayname[index]&lt;/code&gt; gets the the value at the given index&lt;/li&gt;&#xA;&lt;li&gt;for (set starting value; test to continue; what to do between steps) { &amp;hellip; }&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;countNines&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>8. Walk II</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/45-walk-ii/</link>
      <pubDate>Wed, 24 Sep 2025 13:38:20 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/45-walk-ii/</guid>
      <description>&lt;p&gt;In this assignment you should practice writing all of your functions&#xA;two ways: using pattern matching and using the record updating syntax&#xA;with &lt;code&gt;{...}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The &lt;code&gt;Student&lt;/code&gt; data type contains an &lt;code&gt;Int&lt;/code&gt; age and a&#xA;&lt;code&gt;String&lt;/code&gt; name. Write a record syntax &lt;code&gt;data&lt;/code&gt; line.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!--&#xA;data Student = Student {age :: Int,&#xA;                        name :: String}&#xA;   deriving (Show, Eq)&#xA;--&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write two versions of a function to make the student one year&#xA;older. One using pattern matching, the other using record updating.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bubble Review</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/bubble-review/</link>
      <pubDate>Sun, 17 Mar 2019 22:02:50 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/bubble-review/</guid>
      <description>&lt;p&gt;There will be some program tracing and some problem solving.&lt;/p&gt;&#xA;&lt;h2 id=&#34;program-1&#34;&gt;Program 1&lt;/h2&gt;&#xA;&lt;p&gt;Trace the following program to figure out what it does.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(define (prog1 n)&#xA;  (cond [(&amp;lt; n 5) 10]&#xA;        [(= 1 (remainder n 2)) (+ 1 (prog1 (- n 1)))]&#xA;        [(not (= 1 (remainder n 2))) (+ 3 (prog1 (- n 2)))]&#xA;        [else (+ 5 (prog1 (- n 3)))]))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;(prog1 2)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(prog1 5)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(prog1 6)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(prog1 8)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;program-2&#34;&gt;Program 2&lt;/h2&gt;&#xA;&lt;p&gt;Trace the following program to figure out what it does.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.6 PrettyBoxBot</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4b-hw1/</link>
      <pubDate>Tue, 07 Nov 2017 10:27:49 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4b-hw1/</guid>
      <description>&lt;p&gt;A &lt;code&gt;PrettyBoxBot&lt;/code&gt; makes a square box on the screen. In order to let a person easily configure it without learning how to design new robots, the PrettyBoxBot accepts two strategies in its constructor.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Side laying strategy: controls how long the side is&lt;/li&gt;&#xA;&lt;li&gt;Corner beautifying strategy: controls how many beepers get put on a corner.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Putting lots of beepers on the corners of a box makes it more beautiful in robot-land.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Chase</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/chase/</link>
      <pubDate>Tue, 16 Feb 2021 14:41:53 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/chase/</guid>
      <description>&lt;p&gt;In this animation, a 20x20 square moves toward the mouse whenever the&#xA;mouse does something. If the square touches the mouse, then the game&#xA;is over.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;model&lt;/li&gt;&#xA;&lt;li&gt;what model will we use to indicate that the game is over?&lt;/li&gt;&#xA;&lt;li&gt;draw handler&lt;/li&gt;&#xA;&lt;li&gt;stop-when: decide when the game is over&lt;/li&gt;&#xA;&lt;li&gt;lose screen draw handler: put &amp;ldquo;game over&amp;rdquo; on the screen&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;square-moves-toward-the-mouse&#34;&gt;Square moves toward the mouse&lt;/h2&gt;&#xA;&lt;p&gt;You want the square to move toward the mouse, but not too fast or&#xA;nobody will want to play the game.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.6 FishBot</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4b-hw2/</link>
      <pubDate>Wed, 08 Nov 2017 13:13:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4b-hw2/</guid>
      <description>&lt;h2 id=&#34;purpose&#34;&gt;Purpose&lt;/h2&gt;&#xA;&lt;p&gt;The purpose of this assignment is to motivate the use of Strategies instead of &amp;ldquo;hard-coding&amp;rdquo; individual behavior into an object.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A fish that is startled moves to get away from a predator. If a fish&#xA;always does the same behavior to escape, it is easy for a predator to&#xA;predict what will happen and the fish will get eaten. In order to&#xA;avoid getting eaten, a fish alternates between darting forward and darting to the left.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Digits V</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/48-digits-v/</link>
      <pubDate>Thu, 10 Feb 2022 12:03:45 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/48-digits-v/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;transl8: number -&amp;gt; number&lt;/code&gt;) Write a function that changes all of&#xA;the 8 digits to zeros.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (transl8 8) 0)&#xA; (check-expect (transl8 128) 120)&#xA; (check-expect (transl8 847) 47)&#xA; (check-expect (transl8 68687) 60607)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;i88 : number -&amp;gt; number&lt;/code&gt;) Write a function that removes all of the&#xA;digits 8 from a number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (i88 128) 12)&#xA; (check-expect (i88 847) 47)&#xA; (check-expect (i88 81838) 13)&#xA; (check-expect (i88 8474850826) 4745026)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>4.6 More Classes</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4c-classes/</link>
      <pubDate>Thu, 09 Nov 2017 11:35:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4c-classes/</guid>
      <description>&lt;h2 id=&#34;go-south&#34;&gt;Go South&lt;/h2&gt;&#xA;&lt;p&gt;Write a &lt;code&gt;GoFarStrat&lt;/code&gt; which makes a &lt;code&gt;BirdBot&lt;/code&gt; fly three times.&lt;/p&gt;&#xA;&lt;p&gt;We are not going to write a &lt;code&gt;BirdBot&lt;/code&gt; class, but assume it is already written:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BirdBot&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;StrategyLayer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fly&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following code should work:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GoFarStrat&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;flyFar&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GoFarStrat&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BirdBot&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;robin&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BirdBot&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;East&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;flyFar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;flyFar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;doIt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;robin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// could be robin.doStrat()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;andthenstrat&#34;&gt;AndThenStrat&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;AndThenStrat&lt;/code&gt; is a Strategy that combines two strategies by doing one and then the other. See lines 5-6 in the code sample below for its construction and use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.6 MurderBot</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4d-review/</link>
      <pubDate>Mon, 13 Nov 2017 09:52:14 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4d-review/</guid>
      <description>&lt;h2 id=&#34;murderbot&#34;&gt;MurderBot&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A &lt;code&gt;MurderBot&lt;/code&gt; is a kind of &lt;code&gt;StrategyLayer&lt;/code&gt; with two additional abilities:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;public void stab()&lt;/code&gt;: place two beepers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public void flee()&lt;/code&gt;: move one step&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;KillerStrategy&lt;/code&gt; is a kind of &lt;code&gt;Strategy&lt;/code&gt; that makes the robot it controls &lt;code&gt;stab&lt;/code&gt; the first time the strategy is invoked (via &lt;code&gt;doStrat&lt;/code&gt;, which will call &lt;code&gt;doIt&lt;/code&gt;). Every subsequent time the robot is told to &lt;code&gt;doStrat()&lt;/code&gt;, it should &lt;code&gt;flee&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make sure the same &lt;code&gt;doStrat()&lt;/code&gt; call causes one stab or one flee each time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mini E</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-e/</link>
      <pubDate>Thu, 09 Oct 2025 12:13:16 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/05-misc-ex/mini-e/</guid>
      <description>&lt;p&gt;A &lt;code&gt;SqGame&lt;/code&gt; contains&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;a list of &lt;code&gt;(Color, Point)&lt;/code&gt; called &lt;code&gt;sqs&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;a single &lt;code&gt;Point&lt;/code&gt; called &lt;code&gt;here&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;a single &lt;code&gt;Color&lt;/code&gt; called &lt;code&gt;cc&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Exercises:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a data definition for &lt;code&gt;SqGame&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an example variable &lt;code&gt;ex&lt;/code&gt; of type &lt;code&gt;SqGame&lt;/code&gt; containing&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;sqs&lt;/code&gt;: &lt;code&gt;(red, (-1.5, 2.0))&lt;/code&gt; and &lt;code&gt;(orange, (3.0, 1.0))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;here&lt;/code&gt;: &lt;code&gt;(2,-4)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cc&lt;/code&gt;: &lt;code&gt;purple&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a drawing function that places a 0.5x0.5 square for each item&#xA;in the &lt;code&gt;sqs&lt;/code&gt; list.&#xA;In addition, place a r=0.25 circle with color &lt;code&gt;cc&lt;/code&gt; at center &lt;code&gt;here&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Short Exercises A</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/50-problemset/</link>
      <pubDate>Mon, 06 Oct 2025 07:02:32 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/50-problemset/</guid>
      <description>&lt;h2 id=&#34;part-i&#34;&gt;Part I&lt;/h2&gt;&#xA;&lt;p&gt;CodeWorld uses &lt;code&gt;Double&lt;/code&gt; instead of &lt;code&gt;Float&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Point&lt;/code&gt; is an alias for &lt;code&gt;(Double, Double)&lt;/code&gt; in CodeWorld.&lt;/p&gt;&#xA;&lt;p&gt;A grid animation includes two &lt;code&gt;Int&lt;/code&gt;: &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;, a &lt;code&gt;Double&lt;/code&gt;&#xA;for the spacing, and a base &lt;code&gt;Picture&lt;/code&gt;. Examples:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ex1 = GridAnim 8 5 2.0 (circle 0.9)&#xA;ex2 = GridAnim{width=8, height=5, spacing=2.0, base=(circle 0.9)}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Draw the grid so the upper left base picture is at (0,0) and the&#xA;spacing is left between the centers of each adjacent image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>For 0.5</title>
      <link>https://wy-cs.info/intermediate-cs/pro/for/for-0.5/</link>
      <pubDate>Wed, 07 May 2025 08:13:54 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/for/for-0.5/</guid>
      <description>&lt;p&gt;To write list answers, give the first three items, then &lt;code&gt;...&lt;/code&gt; to the&#xA;last item. The long list:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(list 21 22 23 24 25 26 27 28 29 30)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;should be written:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(list 21 22 23 ... 30)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;range&#34;&gt;Range&lt;/h2&gt;&#xA;&lt;h3 id=&#34;instructions&#34;&gt;Instructions&lt;/h3&gt;&#xA;&lt;p&gt;This section contains a mix of &amp;ldquo;stream-making&amp;rdquo; commands like&#xA;&lt;code&gt;in-range&lt;/code&gt; and lists. When the question gives a stream making command,&#xA;write the list it will produce. When the question gives a list, write&#xA;a stream-making command that could be used to produce it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding Proficiency</title>
      <link>https://wy-cs.info/ai/alpha-beta/proficiency/</link>
      <pubDate>Thu, 18 Jan 2024 09:41:51 -0600</pubDate>
      <guid>https://wy-cs.info/ai/alpha-beta/proficiency/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;We expect you to understand the code that you wrote. It can be&#xA;difficult to be sure that you understand code that is very similar to&#xA;pseudocode that you read, so this question is intended to force you to&#xA;approach the problem a way that differs from your original approach.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;def alphabeta_eval (edges, values,&#xA;                    node: int,&#xA;                    is_max : bool,&#xA;                    bounds: [int]):&#xA;    return 0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The inputs to your function are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alpha-Beta Code Plan</title>
      <link>https://wy-cs.info/ai/alpha-beta/code-plan/</link>
      <pubDate>Fri, 12 Jan 2024 09:50:24 -0600</pubDate>
      <guid>https://wy-cs.info/ai/alpha-beta/code-plan/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Goal: write your own alpha-beta pruning evaluator. Keep track of the&#xA;number of nodes you evaluate.&lt;/p&gt;&#xA;&lt;p&gt;Input Data: the bottom of a depth $d$ binary tree, so $2^d$ numbers in&#xA;a list. These represent the values at the bottom of the tree.&lt;/p&gt;&#xA;&lt;p&gt;Output data:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;a list of numbers of length $1 + 2^1 + 2^2 + \cdots +&#xA;2^d$ holding the optimal-play values of each node.&lt;/li&gt;&#xA;&lt;li&gt;the number of evaluations performed&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>7. Data.List</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-data-list/</link>
      <pubDate>Sun, 15 Oct 2023 20:52:56 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-data-list/</guid>
      <description>&lt;p&gt;Welcome to the Stone Age, where we forget all tools and write&#xA;functions using recursion, pattern matching, guards and conditionals.&lt;/p&gt;&#xA;&lt;p&gt;For each of the following functions, write two check-expects&#xA;(examples) and then write the function.&lt;/p&gt;&#xA;&lt;h2 id=&#34;group-a-useful-daily&#34;&gt;Group A: Useful Daily&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;myIntersperse&lt;/code&gt;: takes in an element and a list, and puts the&#xA;element between every pair of the list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  myIntersperse 6 [1,2,9,10] == [1,6,2,6,9,6,10]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;myIntercalate&lt;/code&gt;: like intersperse, but for lists. Takes a list and a&#xA;list of lists, and puts the first list in between each pair of lists&#xA;from the second input. It &amp;ldquo;flattens&amp;rdquo; (concatenates) the result,&#xA;removing one level of list. Note: &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;[Char]&lt;/code&gt;, so this&#xA;applies to putting strings in between a list of words.&lt;/p&gt;</description>
    </item>
    <item>
      <title>01.E</title>
      <link>https://wy-cs.info/intermediate-cs/ch01/ch01e/</link>
      <pubDate>Thu, 24 Aug 2023 07:01:17 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch01/ch01e/</guid>
      <description>&lt;p&gt;Chapter 1 Functions: above, beside, overlay, flip-vertical, flip-horizontal,&#xA;rotate-cw, rotate-ccw, rotate-180. Additional: scale.&lt;/p&gt;&#xA;&lt;h2 id=&#34;part-i&#34;&gt;Part I&lt;/h2&gt;&#xA;&lt;p&gt;Each capital letter below represents an image of that letter.&#xA;Draw the image that you get.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;(beside X B)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(above P D)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(scale 2 B)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(overlay X (scale 2 D))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(beside (scale 2 E) G)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(rotate-ccw E)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(rotate-180 (beside F O O D))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(flip-vertical (beside W A T E R))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(flip-horizontal (above G O))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(above (beside W Y) (beside H I G H))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;part-ii&#34;&gt;Part II&lt;/h2&gt;&#xA;&lt;p&gt;Write the commands that would give the image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coloring</title>
      <link>https://wy-cs.info/ai/graph/50-coloring/</link>
      <pubDate>Tue, 22 Aug 2023 11:57:14 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/50-coloring/</guid>
      <description>&lt;p&gt;A graph is 2-colorable if it is possibly to label each vertex in the&#xA;graph using one of 2 colors in such a way that every edge connects&#xA;different colored vertices.&lt;/p&gt;&#xA;&lt;p&gt;Using the adjacency list representation of a graph:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;can the graph be 2-colored?&lt;/li&gt;&#xA;&lt;li&gt;if so, how can you assign the colors?&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>BPJ Quiz 11-12 A</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-11-12/</link>
      <pubDate>Mon, 23 Jan 2023 07:06:16 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-11-12/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print the numbers from 99 to 50, going down by one each time.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There are four perfect squares between 10 and 50. They are 16, 25, 36,&#xA;and 49. Their average is 31.5.&lt;/p&gt;&#xA;&lt;p&gt;Find the average of all the perfect squares between 99 and 5678.&#xA;Print it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!-- approximately 2169.16666  = 143165 / 66 --&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pick an integer &lt;code&gt;n&lt;/code&gt; in your code (&amp;ldquo;hard code&amp;rdquo; it&amp;hellip; once we know&#xA;random then we will pick a random number).&#xA;Create a &lt;code&gt;Scanner&lt;/code&gt; that must be called &lt;code&gt;river&lt;/code&gt; for full&#xA;credit&amp;hellip; to read input from the keyboard.&#xA;Keep asking &amp;ldquo;Guess?&amp;rdquo; until they type in the number you picked.&#xA;(Then your program ends.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>05 Receive H</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/05-receive/</link>
      <pubDate>Wed, 20 Apr 2022 14:32:38 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/05-receive/</guid>
      <description>&lt;p&gt;The receive handler&amp;rsquo;s job is to update a world&amp;rsquo;s model in response to&#xA;receiving a message. The signature of the receive handler is:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;receive-h: model message -&amp;gt; model&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;In a fancy multi-player system, your world would only receive messages&#xA;that were intended for you.&lt;/p&gt;&#xA;&lt;p&gt;We are using a very &amp;ldquo;generic&amp;rdquo; server, where every world gets messages&#xA;for every other world, so the first thing you should do in your&#xA;receive handler is to see if your own id matches the &amp;ldquo;to&amp;rdquo; id in the&#xA;message.&lt;/p&gt;</description>
    </item>
    <item>
      <title>50 Ch12 Quiz</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-12/</link>
      <pubDate>Fri, 17 Dec 2021 07:00:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-12/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The human types the area of a square. The computer responds with&#xA;the side length.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; What is the area of your square?&#xA; 123.45&#xA; Side length:&#xA; 11.110805551354051&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Starter code:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; Scanner sc; /* ... setup code is omitted ... */&#xA; System.out.println(&amp;quot;What is the area of your square?&amp;quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Get a single word from the user and print out &amp;ldquo;The word xx contains yy&#xA;letters&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17.E</title>
      <link>https://wy-cs.info/intermediate-cs/ch17/17e/</link>
      <pubDate>Wed, 15 Dec 2021 11:48:44 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch17/17e/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;This worksheet addresses a number of challenging&#xA;misconceptions. Read closely and consider you answers thoughtfully.&lt;/p&gt;&#xA;&lt;h2 id=&#34;expanations&#34;&gt;Expanations&lt;/h2&gt;&#xA;&lt;p&gt;You are given some information and asked about other&#xA;functions. Explain how to write the other functions or why the&#xA;situation is impossible.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Big Blue) Moving the mouse makes the blue circle increase its&#xA;radius by 5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Models 5</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-5/</link>
      <pubDate>Mon, 22 Nov 2021 11:45:52 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-5/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a &lt;em&gt;function&lt;/em&gt; &lt;code&gt;q1&lt;/code&gt; that produces a random number from the set { 50,&#xA;130, 210, 290, 370, 450, 530 }, each one equally likely.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a &lt;em&gt;function&lt;/em&gt; &lt;code&gt;q2&lt;/code&gt; that produces a random number from the set&#xA;{ 25, 36, 49, 64, 81}, each one equally likely. (A little thinking&#xA;and math is needed.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Troubleshooting</title>
      <link>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/misc/</link>
      <pubDate>Fri, 19 Nov 2021 10:30:33 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/tic-tac-toe/misc/</guid>
      <description>&lt;p&gt;Common issues:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;translated&lt;/code&gt; generates an error:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  Couldn&#39;t match expected type ‘Double’ with actual type ‘Int’&#xA;  In the first argument of ‘translated’, namely ‘x’&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The &lt;code&gt;translated&lt;/code&gt; function needs decimals (&lt;code&gt;Double&lt;/code&gt;) for inputs.&#xA;Solution: use &lt;code&gt;(fromIntegral x)&lt;/code&gt; to treat the int as a decimal.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Need to convert an Int to a Double: use &lt;code&gt;fromIntegral&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Error about &lt;code&gt;No instance for (Integral Double)&lt;/code&gt;: you rounded a&#xA;double and now you have an integer. Put in &lt;code&gt;fromIntegral&lt;/code&gt; to allow&#xA;the integer to change back to a Double.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Action</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/draw/</link>
      <pubDate>Mon, 26 Apr 2021 13:24:51 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/draw/</guid>
      <description>&lt;h2 id=&#34;grid-drawing-system&#34;&gt;Grid Drawing System&lt;/h2&gt;&#xA;&lt;p&gt;We are going to set up a system to draw on a grid where each square is&#xA;50x50. You have probably done this before.&lt;/p&gt;&#xA;&lt;p&gt;We want to take the list&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(list (make-posn 5 2) (make-posn 4 3) (make-posn 3 2))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;and draw it as&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/projects/battleship/draw/greysquares.png&#34; width=&#34;150px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Ingredients:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;gp-&amp;gt;cp&lt;/code&gt;: posn -&amp;gt; posn. A function that takes grid coordinates and&#xA;puts out the computer coordinates of the center of the grid&#xA;square. You need to decide if the upper left is &lt;code&gt;(0,0)&lt;/code&gt; or&#xA;&lt;code&gt;(1,1)&lt;/code&gt; (both are fine). I chose &lt;code&gt;(0,0)&lt;/code&gt; as the upper left, which&#xA;corresponds to a computer posn of &lt;code&gt;(25,25)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animation</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/parcels/parcels-animation/</link>
      <pubDate>Tue, 13 Apr 2021 22:50:40 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/parcels/parcels-animation/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Making an animation with the work you have done so far mostly involves combining the pieces&#xA;that you have. The only new ingredients are helper functions to translate between&#xA;grid coordinates like $(3,4)$ and computer coordinates like $(125,175)$.&lt;/p&gt;&#xA;&lt;h2 id=&#34;warmup-working-with-a-grid&#34;&gt;Warmup: Working with a grid&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s get used to working with a grid. Each grid square will be&#xA;50x50. Numbering the grid posns just like we did in the grid generator keeps&#xA;everything else uncomplicated, but it does mean we have to do a bit of math to&#xA;figure out what computer coordinates we want to use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5. End Game</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/end-game/</link>
      <pubDate>Tue, 23 Feb 2021 08:45:28 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/end-game/</guid>
      <description>&lt;p&gt;You win the game by moving your ball completely inside the white part&#xA;of the target.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align: center&#34;&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch20/ball-driving/end-game/not-win.png&#34;&#xA;    alt=&#34;This game is not won yet.&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;This game is not won yet.&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;&lt;td style=&#34;text-align: center&#34;&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch20/ball-driving/end-game/yes-win.png&#34;&#xA;    alt=&#34;Winning position.&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Winning position.&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/td&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;5a-win-help&#34;&gt;5a. Win-help?&lt;/h3&gt;&#xA;&lt;p&gt;Signature: &lt;code&gt;win-help? : posn(ball-pos) posn(target-pos) -&amp;gt; boolean&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;This function is testable. Ideally you would write tests for it&amp;hellip; but&#xA;here are some.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; ball radius 5, target inner radius 15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;win-help?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;win-help?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;win-help?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;103&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;129&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;124&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5b-win&#34;&gt;5b. Win?&lt;/h3&gt;&#xA;&lt;p&gt;Signature: &lt;code&gt;win? : posn(ball-pos) -&amp;gt; boolean&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Exercises 5</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-5/</link>
      <pubDate>Mon, 16 Nov 2020 13:53:05 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-5/</guid>
      <description>&lt;h2 id=&#34;helper-functions-1&#34;&gt;Helper functions 1&lt;/h2&gt;&#xA;&lt;p&gt;Re-use functions you have already written.&#xA;This is shown a lot in the chapter (exercises 7.8-7.10, or 7.15-7.17, or 7.18-7.19).&#xA;You should also be seeing it in this worksheet.&lt;/p&gt;&#xA;&lt;p&gt;Look for ways you can use these functions later.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;dot-on: image -&amp;gt; image&lt;/code&gt;): Place a radius 5 solid red circle on the&#xA;lower right corner of an image.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;at-least-10: number -&amp;gt; number)&lt;/code&gt;: Take in any number, put out a&#xA;number that is at least 10.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch05 Book</title>
      <link>https://wy-cs.info/ml/r4ds/ch05-book/</link>
      <pubDate>Wed, 23 Sep 2020 21:16:28 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch05-book/</guid>
      <description>&lt;p&gt;Note: three assignments are recommended: 5.3-5.5, 5.6,&#xA;5.7. Combining the last two was too much work.&lt;/p&gt;&#xA;&lt;h2 id=&#34;general&#34;&gt;General&lt;/h2&gt;&#xA;&lt;p&gt;Many summary functions do not work if the data contains &lt;code&gt;NA&lt;/code&gt;.&#xA;The &lt;code&gt;na.rm&lt;/code&gt; option causes them to be ignored, or &lt;code&gt;drop_na()&lt;/code&gt; gets rid&#xA;of them in the pipe. There are other methods we will learn later.&lt;/p&gt;&#xA;&lt;h2 id=&#34;summarizing-functions-56&#34;&gt;Summarizing Functions (5.6)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mean&lt;/li&gt;&#xA;&lt;li&gt;median&lt;/li&gt;&#xA;&lt;li&gt;sd = standard deviation (will learn later if you do not know)&lt;/li&gt;&#xA;&lt;li&gt;n(): how many values are in the group&lt;/li&gt;&#xA;&lt;li&gt;n_distinct: how many distinct values&lt;/li&gt;&#xA;&lt;li&gt;sum&lt;/li&gt;&#xA;&lt;li&gt;min, max&lt;/li&gt;&#xA;&lt;li&gt;quantile(data,0.25): produces a single number, a value that&#xA;is greater than 25% of the data values at less than the remaining 75%.&#xA;Read&#xA;&lt;code&gt;?quantile&lt;/code&gt; for a surprising amount of technical information.&lt;/li&gt;&#xA;&lt;li&gt;ntile(data,n): produces a column of numbers giving which of the n&#xA;bins the input numbers fall into. Outputs number from 1 to n inclusive.&lt;/li&gt;&#xA;&lt;li&gt;mad = median absolute deviation&lt;/li&gt;&#xA;&lt;li&gt;IQR = interquartile range (Q3-Q1)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Detail Notes: a boolean TRUE counts as the number 1 and FALSE counts&#xA;as 0. Summing booleans gives how many trues. Finding the mean of&#xA;booleans gives the proportion that are true.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Button</title>
      <link>https://wy-cs.info/ecs/arduino/button/</link>
      <pubDate>Tue, 11 Jun 2019 11:31:12 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/button/</guid>
      <description>&lt;p&gt;A button is a digital device, it reads either pressed or not pressed.&#xA;The Arduino is set up to consider a reading of 5V as &amp;ldquo;true&amp;rdquo;, so with&#xA;the circuit below,&#xA;&lt;scratch class=&#34;inline&#34;&gt;digital reading () :: #468cfc reporter&lt;/scratch&gt;&#xA;gives true when the button is &lt;em&gt;not&lt;/em&gt; pressed.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/button/button-1.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;I will use&#xA;&lt;scratch class=&#34;inline&#34;&gt;button pressed? :: variables reporter&lt;/scratch&gt;&#xA;for the variable that holds the reading from&#xA;the button.&lt;/p&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;when green flag clicked&#xA;forever&#xA;  set [button pressed? v] to &lt; not &lt; digital reading (10) :: #468cfc&gt; &gt;&#xA;  if (button pressed?) then&#xA;    say [Pressed] for (0.5) seconds&#xA;  else&#xA;    say [Not Pressed] for (0.5) seconds&#xA;&#xA;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Typed Exercises 1</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-ex1/</link>
      <pubDate>Tue, 07 May 2019 07:24:27 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-ex1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use the &lt;code&gt;[ name : Type ]&lt;/code&gt; method of specifying a type to write the&#xA;function &lt;code&gt;sub7&lt;/code&gt; which takes in a number and subtracts 7 from it.l&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use the &lt;code&gt;(: name Type)&lt;/code&gt; method of specifying a type to write the&#xA;function &lt;code&gt;triple&lt;/code&gt; which takes in a number and triples it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;write-these-functions&#34;&gt;Write these functions&lt;/h2&gt;&#xA;&lt;p&gt;Use Typed Racket to write these functions. Make sure you write the&#xA;output type as well as the input types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Turtle 2</title>
      <link>https://wy-cs.info/ecs/python/turtle-2/</link>
      <pubDate>Thu, 21 Mar 2019 00:28:25 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/turtle-2/</guid>
      <description>&lt;p&gt;In class we discussed how to make the blue square and the triangle&#xA;above it. We decided to make the sides of the blue square 50 each, and&#xA;we discussed the side lengths and angles for every side.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;import math&#xA;oneside = 50 * math.sqrt(2) &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Know the dimensions and angles for each shape before you start.&lt;/li&gt;&#xA;&lt;li&gt;Figure out the moves you want to do step by step.&lt;/li&gt;&#xA;&lt;li&gt;Write the commands for each side before going to the next.&lt;/li&gt;&#xA;&lt;li&gt;One turtle per shape/color.&lt;/li&gt;&#xA;&lt;li&gt;Walking to the correct starting place can be easier than using&#xA;&lt;code&gt;goto&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;assignments&#34;&gt;Assignments&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use several turtles to make the square tangram design below.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/python/turtle-2/tangram-square.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use several turtles to make the swan tangram design below.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/python/turtle-2/tangram-swan.jpg&#34;&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>11. Inheritance 2</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/inheritance-2/</link>
      <pubDate>Wed, 20 Feb 2019 20:44:41 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/inheritance-2/</guid>
      <description>&lt;h2 id=&#34;noisy&#34;&gt;Noisy&lt;/h2&gt;&#xA;&lt;p&gt;It takes 0.2 seconds per letter for an animal to make a noise, so&#xA;&amp;ldquo;meow&amp;rdquo; takes 0.8 seconds and &amp;ldquo;meeeou&amp;rdquo; is 1.2 seconds. There are two&#xA;methods to think about:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;public String noise(): the noise that something &lt;code&gt;Noisy&lt;/code&gt; makes; and&lt;/li&gt;&#xA;&lt;li&gt;public double timeNoise(): the number of seconds it takes to produce&#xA;that noise.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Is this best as an interface or an abstract class? Explain your&#xA;answer.&lt;/li&gt;&#xA;&lt;li&gt;Write the &lt;code&gt;Noisy&lt;/code&gt; thing in Java.&lt;/li&gt;&#xA;&lt;li&gt;Make a &lt;code&gt;Dolphin&lt;/code&gt; class that makes the &amp;ldquo;click&amp;rdquo; noise.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;colorable&#34;&gt;Colorable&lt;/h2&gt;&#xA;&lt;p&gt;A class is &lt;code&gt;Colorable&lt;/code&gt; if it has the methods &lt;code&gt;void setColor(int c)&lt;/code&gt;&#xA;and &lt;code&gt;int getColor()&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homer and Donut</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-3a/</link>
      <pubDate>Tue, 12 Feb 2019 11:07:10 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-3a/</guid>
      <description>&lt;h2 id=&#34;molly-the-dog&#34;&gt;Molly the Dog&lt;/h2&gt;&#xA;&lt;p&gt;Molly the Dog likes to play with her chew toy. Molly is vicious before&#xA;she plays with her chew toy, happy while she plays with it, and&#xA;relaxed after playing with it.&lt;/p&gt;&#xA;&lt;p&gt;Make a variable &lt;code&gt;got toy&lt;/code&gt; that is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 before Molly touches the toy&lt;/li&gt;&#xA;&lt;li&gt;1 when Molly is touching the toy&lt;/li&gt;&#xA;&lt;li&gt;2 after Molly is done playing with the toy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;homer-and-the-donut&#34;&gt;Homer and the Donut&lt;/h2&gt;&#xA;&lt;p&gt;Design this project on paper, then program it on the computer:&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Arrays Exercises 3</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-3/</link>
      <pubDate>Mon, 07 Jan 2019 11:11:07 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-3/</guid>
      <description>&lt;h2 id=&#34;compactor&#34;&gt;Compactor&lt;/h2&gt;&#xA;&lt;p&gt;Given an array of integers &lt;code&gt;nums&lt;/code&gt;, return an array containing only the&#xA;indices &lt;code&gt;k&lt;/code&gt; for which &lt;code&gt;nums[k]&lt;/code&gt; is one.&lt;/p&gt;&#xA;&lt;p&gt;Example: &lt;code&gt;compactor({1,0,1,1}) =&amp;gt; {0,2,3}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{//               0 1 2 3 4 5 6 7&#xA;    int[] nums = {0,0,1,0,1,0,0,1};&#xA;    int[] cpct = compactor(nums);&#xA;    int[] expected = {2,4,7};&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;prime-number-sieve&#34;&gt;Prime Number Sieve&lt;/h2&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;public static int[] primeSieve (int n)&lt;/code&gt; that returns&#xA;an array of length n with a 1 in index k when k is a prime number, and&#xA;0 otherwise.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Fibsum</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/50-fibsum/</link>
      <pubDate>Mon, 26 Feb 2018 14:26:20 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/50-fibsum/</guid>
      <description>&lt;h2 id=&#34;fibsum&#34;&gt;fibsum&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;(fibsum n)&lt;/code&gt;: Sum of Fibonacci numbers 0 through n.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;n&lt;/th&gt;&#xA;          &lt;th&gt;(fibsum n)&lt;/th&gt;&#xA;          &lt;th&gt;simplified&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1+1&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;1+1+2&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;1+1+2+3&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;1+1+2+3+5&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;1+1+2+3+5+8&lt;/td&gt;&#xA;          &lt;td&gt;20&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>I.5 Semester I Review 5</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-5/</link>
      <pubDate>Thu, 25 Jan 2018 09:48:45 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-5/</guid>
      <description>&lt;h2 id=&#34;drifter&#34;&gt;Drifter&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Drifter&lt;/strong&gt;. A circle moves around inside a rectangle. There are&#xA;two different modes of motion: small steps (activated by &amp;ldquo;s&amp;rdquo;) and&#xA;big steps (activated by &amp;ldquo;b&amp;rdquo;). The arrows let you move the circle.&lt;/p&gt;&#xA;&lt;p&gt;Example: &lt;code&gt;s left left&lt;/code&gt; moves two small steps left, then &lt;code&gt;b up right up&lt;/code&gt; takes three big steps (up, right, and up in that order).&lt;/p&gt;&#xA;&lt;h2 id=&#34;extras-lite-review-questions&#34;&gt;Extras: Lite Review Questions&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take a posn and a color. Give a new color that has:&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Map Image</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/map-image/</link>
      <pubDate>Wed, 20 Dec 2017 13:59:24 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/map-image/</guid>
      <description>&lt;p&gt;The &lt;code&gt;map-image&lt;/code&gt; command runs a function on every pixel of an image. See the &lt;a href=&#34;https://docs.racket-lang.org/picturing-programs/index.html?q=map-image#%28def._%28%28lib._picturing-programs%2Fprivate%2Fmap-image..rkt%29._map-image%29%29&#34;&gt;map-image documentation&lt;/a&gt; for the official info.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercises-for-map-image&#34;&gt;Exercises for map-image&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;blue-only&lt;/code&gt;: Keep only the blue, removing red and green.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;black-white&lt;/code&gt;: Turn an image to black and white. You will need to decide how to set the threshold.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;grayscale&lt;/code&gt;: Turn an image to grayscale.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;green-to-white&lt;/code&gt;: Change only green pixels to white.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;color&#34;&gt;Color&lt;/h2&gt;&#xA;&lt;p&gt;There are several logical ways of combining the red, green, and blue components to get one number. The most common is averaging, but it is not the only way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4.* Advanced</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4b-adv/</link>
      <pubDate>Fri, 17 Nov 2017 09:40:32 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4b-adv/</guid>
      <description>&lt;h2 id=&#34;undoing&#34;&gt;Undoing&lt;/h2&gt;&#xA;&lt;p&gt;Page 100, exercise 12 - the robot that has the undo command. I used the idea of a Decorator strategy.&lt;/p&gt;&#xA;&lt;h2 id=&#34;simultaneous-action&#34;&gt;Simultaneous Action&lt;/h2&gt;&#xA;&lt;p&gt;Chapter 8 in the text shows how to make more than one robot act at the same time.  See the &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/apcs-karel/blob/master/MultiThreadBot.java&#34;&gt;MultiThreadBot&lt;/a&gt; on the class GitHub.&lt;/p&gt;&#xA;&lt;p&gt;A brief summary is:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;World.setupThread(robot)&lt;/code&gt; prepares the robot to act in its own thread.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;World.startThreads()&lt;/code&gt; calls the &lt;code&gt;run()&lt;/code&gt; method for every robot that is set up as threading using the command above.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Model Review</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-review/</link>
      <pubDate>Tue, 31 Oct 2017 14:31:08 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-review/</guid>
      <description>&lt;p&gt;Things to know:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Animation following the graph of an equation:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Computer coordinates&lt;/li&gt;&#xA;&lt;li&gt;People coordinates&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Repetition using &lt;code&gt;remainder&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Max/min to keep values large/small.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Randomness&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Range of random numbers (e.g., 10&amp;lt;=x&amp;lt;=50).&lt;/li&gt;&#xA;&lt;li&gt;Write and test a non-random function first.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write checks for a function that you do not yet know how to write.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Terms:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Computer coordinates: (0,0) in the upper left, positive y going down.&lt;/li&gt;&#xA;&lt;li&gt;People coordinates: (0,0) in the center, positive y going up.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Sample code:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Animation Project</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/project/</link>
      <pubDate>Fri, 20 Oct 2017 14:46:03 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/project/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Deadline&lt;/strong&gt;: Finish before Monday, October XX. Turn in Tuesday, October XX.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Produce&lt;/strong&gt;: One sequence of big-bang animations per group. (Groups of at most two.)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: Animation projects should demonstrate the use of draw, tick, mouse, and key handlers.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Time&lt;/strong&gt;: Spend approximately two hours on this project.&lt;/p&gt;&#xA;&lt;p&gt;Making an animation is a way to study for Monday&amp;rsquo;s animation&#xA;test. Think of your work as a way to study and become more familiar&#xA;with animations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect Four UI</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/ui/</link>
      <pubDate>Thu, 12 Oct 2017 09:54:31 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/ui/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;ui-connect-four.hs&#34;&gt;user interface code&lt;/a&gt; for Connect Four is a little clunky. (Repl.it &lt;a href=&#34;https://repl.it/Marn/0&#34;&gt;shared code&lt;/a&gt;.)&#xA;You may use the linked code. You do not have to learn this part of writing Haskell programs (yet).&lt;/p&gt;&#xA;&lt;h2 id=&#34;code-outline&#34;&gt;Code Outline&lt;/h2&gt;&#xA;&lt;p&gt;main: just make board and call event loop&lt;/p&gt;&#xA;&lt;p&gt;event loop:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;draw board&lt;/li&gt;&#xA;&lt;li&gt;is it won?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;print the win message&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;not won?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;get a move&lt;/li&gt;&#xA;&lt;li&gt;recursive call to event loop with updated board, next player&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;&#xA;&lt;p&gt;All of the &lt;a href=&#34;ui-connect-four.hs&#34;&gt;user interface code&lt;/a&gt; is linked separately (open in WordPad if necessary).&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-3/</link>
      <pubDate>Fri, 06 Apr 2018 08:20:03 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-3/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Note: This page uses MathJax to show fancy formulas.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;random-gen&lt;/code&gt;: number(&lt;code&gt;N&lt;/code&gt;) -&amp;gt; list of numbers. Generate &lt;code&gt;N&lt;/code&gt; random&#xA;numbers, each one in the interval $ -150 \le x \le 150 $. Example (random so numbers will be different each time):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (random-gen 5) =&amp;gt; (list -75 100 -30 50 21)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;parabola-it&lt;/code&gt;: list of numbers -&amp;gt; list of posn. Use the numbers as the x-coordinates of function&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Test</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4e-test/</link>
      <pubDate>Tue, 14 Nov 2017 08:21:12 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4e-test/</guid>
      <description>&lt;h1 id=&#34;karel-chapter-4-test&#34;&gt;Karel Chapter 4 Test&lt;/h1&gt;&#xA;&lt;p&gt;You may not use any resource materials for this test.&lt;/p&gt;&#xA;&lt;h2 id=&#34;partners&#34;&gt;Partners&lt;/h2&gt;&#xA;&lt;p&gt;New laws have been passed and now robots can get married. A robot who&#xA;wants to get married must implement the &lt;code&gt;Partner&lt;/code&gt; interface. The&#xA;Partner interface consists of a &lt;code&gt;public Partner getSpouse()&lt;/code&gt; method as&#xA;well as a &lt;code&gt;public void setSpouse(Partner x)&lt;/code&gt; and a &lt;code&gt;public boolean isAvailable()&lt;/code&gt; method. When robots are delivered from the factory they&#xA;do not have a partner.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch05 Problem Set</title>
      <link>https://wy-cs.info/ml/r4ds/ch05/</link>
      <pubDate>Mon, 21 Sep 2020 11:26:45 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch05/</guid>
      <description>&lt;p&gt;Once you have a graph, write a sentence about what it means! Draw a&#xA;conclusion for the reader so they know what you are seeing. People&#xA;with different backgrounds will see different things in the same graph.&lt;/p&gt;&#xA;&lt;p&gt;Don&amp;rsquo;t forget about &lt;code&gt;na.rm=TRUE&lt;/code&gt; when you need it.&lt;/p&gt;&#xA;&lt;p&gt;Other useful sources of information:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.rdocumentation.org/&#34;&gt;Rdocumentation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf&#34;&gt;Dplyr Cheat Sheet&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/dplyr/vignettes/window-functions.html&#34;&gt;Vignette: Window Functions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;section-56-notes&#34;&gt;Section 5.6 Notes&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Question 4 (Is the proportion of cancelled flights related to the&#xA;average delay?) - I don&amp;rsquo;t know what you could find for &amp;ldquo;a pattern&amp;rdquo;&#xA;in the number of cancelled flights per day, so feel free to ignore&#xA;the first part of this question. The second part of the question&#xA;(quoted here) makes sense and you should try to come up with a visualization&#xA;investigating it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch05 Project</title>
      <link>https://wy-cs.info/ml/r4ds/ch05-project/</link>
      <pubDate>Mon, 28 Sep 2020 09:51:08 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch05-project/</guid>
      <description>&lt;p&gt;Timeline 2020:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;one analysis due Thursday&lt;/li&gt;&#xA;&lt;li&gt;second analysis due Monday, plus revisions on the first if required&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;project-description&#34;&gt;Project Description&lt;/h2&gt;&#xA;&lt;p&gt;You will analyze two datasets. One involving mostly categorical data,&#xA;another involving time series data.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;Brainstorm&lt;/em&gt;: List at least 10 questions that you could answer from the data. If&#xA;needed, simple extensions of the data available could be added to&#xA;generate more questions.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pick at least four to answer. The questions you choose should&#xA;demonstrate a range of graph types and data analysis techniques.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hot Pepper and Cookie</title>
      <link>https://wy-cs.info/ecs/scratch/variables-intro-4a/</link>
      <pubDate>Wed, 13 Feb 2019 11:32:11 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-intro-4a/</guid>
      <description>&lt;p&gt;Samantha could eat a hot pepper, drink a glass of milk, or get a&#xA;cookie (all by touching them).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When Samantha eats a cookie and then drinks a glass of milk, she is&#xA;happy.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When Samantha eats a hot pepper and then drinks a glass of milk, she&#xA;is relieved.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;If Samantha eats a hot pepper and then does not drink the milk&#xA;within 10 seconds, she is &amp;ldquo;mouth on fire&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Arrays Exercises 4</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-4/</link>
      <pubDate>Tue, 08 Jan 2019 09:13:20 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-4/</guid>
      <description>&lt;h2 id=&#34;lockers&#34;&gt;lockers&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;public static int[] lockers(int n)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Flip means change 0 to 1 and 1 to 0.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Start with an integer array of n lockers, all closed (0).&lt;/li&gt;&#xA;&lt;li&gt;In step 1, flip every locker&amp;rsquo;s state, beginning at locker 1.&lt;/li&gt;&#xA;&lt;li&gt;In step 2, flip every second locker&amp;rsquo;s state, beginning at locker 2.&lt;/li&gt;&#xA;&lt;li&gt;In step 3, flip every third locker&amp;rsquo;s state, beginning at locker 3.&lt;/li&gt;&#xA;&lt;li&gt;Etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Return the resulting integer array.&lt;/p&gt;&#xA;&lt;p&gt;Examples when n=10:&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Robot Drama</title>
      <link>https://wy-cs.info/ap-cs/karel/ch4f-project/</link>
      <pubDate>Fri, 17 Nov 2017 09:40:50 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/ch4f-project/</guid>
      <description>&lt;p&gt;You are going to make a play in which robots interact.&lt;/p&gt;&#xA;&lt;p&gt;Documentation:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://csis.pace.edu/~bergin/KarelJava2ed/KJRdocs/index.html&#34;&gt;Karel the Robot (all)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://csis.pace.edu/~bergin/KarelJava2ed/KJRdocs/kareltherobot/Robot.html&#34;&gt;Robot&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://csis.pace.edu/~bergin/KarelJava2ed/KJRdocs/kareltherobot/UrRobot.html&#34;&gt;UrRobot&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wy-cs.info/ap-cs/karel/karel-hack/&#34;&gt;Hacked Karel the Robot&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;assignment-in-brief&#34;&gt;Assignment in Brief&lt;/h2&gt;&#xA;&lt;h3 id=&#34;assignment-elements&#34;&gt;Assignment Elements&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;One robot interacts with another robot.&lt;/li&gt;&#xA;&lt;li&gt;You create a new interface or abstract class for use.&lt;/li&gt;&#xA;&lt;li&gt;Robots interact in a non-formulaic way.&lt;/li&gt;&#xA;&lt;li&gt;Interesting plot line (please!). It&amp;rsquo;s supposed to be fun.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;assignment-timeline&#34;&gt;Assignment Timeline&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Friday: Outline of the action which will happen. (Check in.)&lt;/li&gt;&#xA;&lt;li&gt;Tuesday: You should have at least 3 classes/interfaces written. (Check in.)&lt;/li&gt;&#xA;&lt;li&gt;Tuesday after Thanksgiving: project due.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;schoolbot-abstract-class&#34;&gt;SchoolBot abstract class&lt;/h2&gt;&#xA;&lt;p&gt;We decided that every robot in school will have four basic functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Topics to Study</title>
      <link>https://wy-cs.info/intermediate-cs/pro/topics/</link>
      <pubDate>Fri, 23 Feb 2024 16:55:13 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/topics/</guid>
      <description>&lt;h2 id=&#34;standard-course-topics&#34;&gt;Standard Course Topics&lt;/h2&gt;&#xA;&lt;p&gt;This list is just a little bit advanced. You would cover all of these&#xA;in a college course.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local variables: Picturing Programs, Chapter 27; or HtDP&#xA;&lt;a href=&#34;https://htdp.org/2023-8-14/Book/part_three.html#%28part._sec~3alocal-definitions%29&#34;&gt;III.15&lt;/a&gt;. Including&#xA;local functions. Also used in III.16 and beyond.&lt;/li&gt;&#xA;&lt;li&gt;Functions in variables: &lt;a href=&#34;https://htdp.org/2023-8-14/Book/part_three.html#%28part._ch~3add-similarities%29&#34;&gt;HtDP III.14&lt;/a&gt; or Picturing Programs, Chapter 28.).&lt;/li&gt;&#xA;&lt;li&gt;Input/Output (especially using files): Picturing Programs, Chapter&#xA;29 or HtDP&lt;/li&gt;&#xA;&lt;li&gt;Lambda (nameless functions): HtDP&#xA;&lt;a href=&#34;https://htdp.org/2023-8-14/Book/part_three.html#%28part._ch~3a3lambda%29&#34;&gt;III.17&lt;/a&gt;&#xA;is good to be familiar with. Not necessarily deep once you know how&#xA;to make a local function.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/pro/for/&#34;&gt;For&lt;/a&gt;-type constructs.&lt;/li&gt;&#xA;&lt;li&gt;Mutation and &lt;code&gt;set!&lt;/code&gt;: Picturing Programs, Chapter 30.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;good-challenging-exercises&#34;&gt;Good, Challenging Exercises&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; is a yearly sequence&#xA;of 25 puzzles. Try to make &lt;em&gt;quality code&lt;/em&gt;, not just copy-and-paste&#xA;code that barely runs. You&amp;rsquo;re trying to learn to be a better coder!&#xA;The problems are just the inspiration for the learning; have the&#xA;goal of writing &lt;em&gt;elegant&lt;/em&gt; code and you will learn more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Data.Ord</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-data-ord/</link>
      <pubDate>Sun, 15 Oct 2023 21:56:38 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-data-ord/</guid>
      <description>&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;. FIXME. Page is too long.&lt;/p&gt;&#xA;&lt;p&gt;Note: &lt;code&gt;import Data.List&lt;/code&gt; and &lt;code&gt;import Data.Ord&lt;/code&gt; to access these functions.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;Ord&lt;/code&gt; typeclass contains things that can be compared.&lt;/p&gt;&#xA;&lt;p&gt;An &lt;code&gt;Ordering&lt;/code&gt; is one of three possible results:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;LT&lt;/code&gt; (less than) if &lt;code&gt;x&amp;lt;y&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;EQ&lt;/code&gt; (equal) if &lt;code&gt;x==y&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;GT&lt;/code&gt; (greater than) if &lt;code&gt;x&amp;gt;y&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Some kinds of things that can be compared are: integers, Strings, and&#xA;tuples.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;compare x y&lt;/code&gt; function takes in two Ord things gives an&#xA;&lt;code&gt;Ordering&lt;/code&gt;. Examples:&lt;/p&gt;</description>
    </item>
    <item>
      <title>DFS Programming</title>
      <link>https://wy-cs.info/ai/graph/60-dfs-prog/</link>
      <pubDate>Thu, 14 Sep 2023 23:18:36 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/60-dfs-prog/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Know essential characteristics of DFS:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Last In, First Out&lt;/li&gt;&#xA;&lt;li&gt;parent&lt;/li&gt;&#xA;&lt;li&gt;time in/out&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Write examples carefully tracing the excecution of the standard DFS&#xA;algorithm.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;programming-skills&#34;&gt;Programming Skills&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Expose all changing parameters as inputs to a function to make it&#xA;debuggable. (Get rid of global variables.)&lt;/li&gt;&#xA;&lt;li&gt;Write test cases. Simple to complex.&lt;/li&gt;&#xA;&lt;li&gt;Debugging with tests, not &lt;a href=&#34;https://docs.python.org/3/library/pdb.html&#34;&gt;single-stepping with the python&#xA;debugger&lt;/a&gt; or using the &lt;a href=&#34;https://pythontutor.com/&#34;&gt;Python tutor&#xA;visualizer&lt;/a&gt;).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;programming-1&#34;&gt;Programming 1&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write a recursive DFS algorithm that can return information about&#xA;parent, time in, and time out for each vertex.&lt;/li&gt;&#xA;&lt;li&gt;Write at least three test cases for your code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;programming-2&#34;&gt;Programming 2&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Binary search frequently implemented recursively. See below for the&#xA;ChatGPT version, which takes in a sorted list of number (&lt;code&gt;arr&lt;/code&gt;), the&#xA;number to find (&lt;code&gt;target&lt;/code&gt;) and the lowest and highest possible&#xA;indices that could contain the target (inclusive). It returns the&#xA;index at which the target element is found, or &lt;code&gt;-1&lt;/code&gt; if the array&#xA;does not contain the target.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;binary_search&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Element not found&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Element found at index &amp;#39;mid&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;binary_search&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;binary_search&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;programming-2a&#34;&gt;Programming 2a&lt;/h2&gt;&#xA;&lt;p&gt;Change the binary search code to use a stack instead of recursion,&#xA;keeping &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt; on your stack. Write at least three tests!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Battleship Complete</title>
      <link>https://wy-cs.info/intermediate-cs/projects/battleship/final/</link>
      <pubDate>Tue, 23 May 2023 12:46:22 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/battleship/final/</guid>
      <description>&lt;p&gt;Images for two player battleship are below.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Shots that hit and miss is an essential feature.&lt;/li&gt;&#xA;&lt;li&gt;Showing which ships are sunk and which are not is an important&#xA;feature. You do not have to use names.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/projects/battleship/final/player-1.png&#34; width=&#34;300px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/projects/battleship/final/player-2.png&#34; width=&#34;300px&#34;&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>BPJ Quiz 11&#43;17 B</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-11&#43;17/</link>
      <pubDate>Thu, 26 Jan 2023 07:04:36 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-11&#43;17/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Counting from 17 to 100 by 5&amp;rsquo;s gives 17, 22, 27, 32, 37,&#xA;42, 47, etc. The first multiple of 7 in that list is 42.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;: Ask the user for a number n. Counting from 1000 to 9000 by 13&amp;rsquo;s,&#xA;print each number. Stop &lt;em&gt;after&lt;/em&gt; printing the first multiple of n.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What does the following code segment print?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;continue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;k&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Out: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Give an example of values for &lt;code&gt;String a&lt;/code&gt; and &lt;code&gt;String b&lt;/code&gt; so that&#xA;&lt;code&gt;a.compareTo(b)&lt;/code&gt; returns a negative number?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hints for Lights Out</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/04-further/lights-out/60-extra/</link>
      <pubDate>Thu, 08 Dec 2022 07:05:10 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/04-further/lights-out/60-extra/</guid>
      <description>&lt;p&gt;These hints are based on questions that arose in class.&lt;/p&gt;&#xA;&lt;h2 id=&#34;model&#34;&gt;Model&lt;/h2&gt;&#xA;&lt;p&gt;Some students found it easier to think about a model where each circle&#xA;is represented by a tuple containing a &lt;code&gt;Point&lt;/code&gt; for the center of the&#xA;circle and also a &lt;code&gt;Bool&lt;/code&gt; which is true if the circle is solid.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type OneCirc = (Point, Bool)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;How do you feel about a list of &lt;code&gt;OneCirc&lt;/code&gt; instead of a list of&#xA;&lt;code&gt;Point&lt;/code&gt;?  Can you think of any advantages and disadvantages to this approach?&lt;/p&gt;</description>
    </item>
    <item>
      <title>06 Key H</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/06-key-h/</link>
      <pubDate>Wed, 20 Apr 2022 15:21:45 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/06-key-h/</guid>
      <description>&lt;p&gt;In this animation, hitting a key could change the color of this world&#xA;or send a message:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;r&amp;rdquo;: Randomizes the color of the current world.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;1&amp;rdquo; through &amp;ldquo;5&amp;rdquo;: Send messages to the corresponding world 1 &amp;hellip; 5,&#xA;telling them to change to the current world&amp;rsquo;s color.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;sending-a-message&#34;&gt;Sending a Message&lt;/h2&gt;&#xA;&lt;p&gt;Messages can be sent to the server from any handler by returning a&#xA;Package instead of a model. A Package is a special struct whose only&#xA;purpose is to allow you to perform two actions from one handler.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6. Animation</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ball-driving/animation/</link>
      <pubDate>Tue, 23 Feb 2021 08:49:57 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ball-driving/animation/</guid>
      <description>&lt;p&gt;Actually making the animation requires a draw handler and a mouse&#xA;handler. You will have to write those.&lt;/p&gt;&#xA;&lt;h2 id=&#34;draw-handler&#34;&gt;Draw Handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a background that includes the target and the controls.&lt;/li&gt;&#xA;&lt;li&gt;Draw the ball at the position indicated by the model.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;draw-h: posn(model) -&amp;gt; image&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;mouse-handler&#34;&gt;Mouse Handler&lt;/h2&gt;&#xA;&lt;p&gt;When the mouse is inside the control grid, the ball should&#xA;move. Otherwise nothing happens.&lt;/p&gt;&#xA;&lt;h2 id=&#34;big-bang&#34;&gt;Big Bang&lt;/h2&gt;&#xA;&lt;p&gt;This is what my &lt;code&gt;big-bang&lt;/code&gt; looks like.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Exercises 6</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/exercises-6/</link>
      <pubDate>Wed, 18 Nov 2020 13:15:26 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/exercises-6/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;opener&#34;&gt;Opener&lt;/h2&gt;&#xA;&lt;p&gt;A digital thermometer gives temperature readouts with one decimal&#xA;place. The &lt;code&gt;random-therm&lt;/code&gt; function gives a possible temperature&#xA;reading between $96.7$ and $100.5$, inclusive. Write the&#xA;&lt;code&gt;random-therm&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;h2 id=&#34;random&#34;&gt;Random&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;ball-jump&lt;/code&gt;) A ball is supposed to teleport around the screen,&#xA;moving to a random x coordinate. The x-coordinates chosen should be&#xA;multiples of 10 between 70 and 250. Write a function that will give&#xA;the new x-coordinate. Example of random choices:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Quiz C</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-quiz-c/</link>
      <pubDate>Wed, 16 Oct 2019 15:46:05 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-quiz-c/</guid>
      <description>&lt;p&gt;The weighted average of a list of numbers counts each number according&#xA;to its weight, then divide by the total weight.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;wAvg [1,2,3,4] [10,20,30,40] == 3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can produce either an integer or floating point answer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typed Exercises 2</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-ex2/</link>
      <pubDate>Tue, 07 May 2019 07:41:36 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-ex2/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ezn&lt;/code&gt;: Create a list of &lt;code&gt;n&lt;/code&gt; numbers, counting from n down to 0.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (ezn 5) (list 5 4 3 2 1 0))&#xA; (check-expect (ezn 7) (list 7 6 5 4 3 2 1 0))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;rpt&lt;/code&gt;: Given a word and a number, make a list containing that word&#xA;the given number of times, except chop off one more letter at the start&#xA;of the word each time you repeat it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Turtle 3</title>
      <link>https://wy-cs.info/ecs/python/turtle-3/</link>
      <pubDate>Fri, 22 Mar 2019 11:50:43 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/turtle-3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make the picture below with three turtles. Use the same size shapes&#xA;as you used in the other tangrams.&lt;/p&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/python/turtle-3/tangram-3.png&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;em&gt;Simple MadLib&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; number: 3&#xA; cost each: 2.95&#xA; plural noun: tomato plants&#xA; If I have 3 tomato plants and clone them all, then I have 6, costing $17.70 total.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Of course make it so that you can type different numbers and nouns.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    You should have the measurements of the tangram&#xA;pieces in your notes. Use &lt;a href=&#34;tangram-sizes.pdf&#34;&gt;my&#xA;diagram&lt;/a&gt; if you need it.&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>12. Book Exercises</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-book-ex/</link>
      <pubDate>Wed, 09 Jan 2019 08:50:48 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-book-ex/</guid>
      <description>&lt;p&gt;Chapter 12, exercises 23, 24, and 25. Write tests to prove that your work is correct.&#xA;Those exercises, restated here, are:&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercise-23-rotate&#34;&gt;Exercise 23: Rotate&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;public static int[] rotateLeft(int[] a)&lt;/code&gt;: Rotate &lt;code&gt;{0,1,2,3}&lt;/code&gt; to &lt;code&gt;{1,2,3,0}&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public static int[] rotateRight(int[] a)&lt;/code&gt;: Rotate &lt;code&gt;{0,1,2,3}&lt;/code&gt; to &lt;code&gt;{3,0,1,2}&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public static int[] rotate(int[] a, int amount)&lt;/code&gt;: Rotate by &lt;code&gt;amount&lt;/code&gt; to the right, so to the left when amount is negative.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;exercise-24-add-digits&#34;&gt;Exercise 24: Add Digits&lt;/h2&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add two positive numbers given by arrays representing the individual digits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Graphing Review</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-graphing-review/</link>
      <pubDate>Wed, 19 Dec 2018 20:32:27 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-graphing-review/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The graph of $f(x)=10 \cos(2x)$ is illustrated below in a window $-\pi&#xA;\le x \le 2\pi$ and $-15 \le y \le 15$. The graph uses a 400x200 grid&#xA;of computer pixels.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch15/15-graphing-review/simple-graph.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Fill in a diagram of what you have and what you need. Draw and&#xA;label arrows for the functions you have or will write.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;x&lt;/th&gt;&#xA;          &lt;th&gt;y&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;x-people&lt;/td&gt;&#xA;          &lt;td&gt;y-people&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;x-computer&lt;/td&gt;&#xA;          &lt;td&gt;y-computer&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Develop &lt;code&gt;xctxp&lt;/code&gt;, the function that changes x-computer to x-people.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Model Review II</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-review-2/</link>
      <pubDate>Wed, 28 Nov 2018 07:25:03 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-review-2/</guid>
      <description>&lt;p&gt;Definitions: &lt;em&gt;people coordinates&lt;/em&gt; are coordinates where (0,0) refers to&#xA;the origin where the axes cross and positive y numbers are above the&#xA;x-axis. &lt;em&gt;Computer coordinates&lt;/em&gt; have (0,0) in the upper left corner and&#xA;positive y means &amp;ldquo;down&amp;rdquo;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You are making a viewing window that ranges from x=-300 to x=500 and&#xA;from y=-200 to y=600.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write three check-expects for the function &lt;code&gt;x-people&lt;/code&gt;, which takes in a computer x-coordinate and produces a &amp;ldquo;people&amp;rdquo; x-coordinate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 4</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-4-q/</link>
      <pubDate>Mon, 09 Apr 2018 08:00:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-4-q/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;count-down-odd&lt;/code&gt;: number(start) number(end) -&amp;gt; list of numbers. Generate a list of all of the odd numbers from &lt;code&gt;end&lt;/code&gt; down to &lt;code&gt;start&lt;/code&gt; (inclusive).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (count-down-odd 5 10) =&amp;gt; (list 9 7 5)&#xA; (count-down-odd 5 5) =&amp;gt; (list 5)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;dinosaur&lt;/code&gt;: list of numbers -&amp;gt; list of strings. Change a list of numbers, all of which will be between 0 and 7 inclusive, into a list of the corresponding letters from the word &lt;code&gt;dinosaur&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. More Recursion</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/60-more-rec/</link>
      <pubDate>Wed, 28 Feb 2018 08:11:33 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/60-more-rec/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;vblock&lt;/code&gt;: number(n) image(img) -&amp;gt; image. Makes a vertical stack of &lt;code&gt;n&lt;/code&gt; copies of &lt;code&gt;img&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;sum-cubes&lt;/code&gt;: number(n) -&amp;gt; number. Finds the sum of the first &lt;code&gt;n&lt;/code&gt;&#xA;perfect cubes. The first perfect cube is 1x1x1=1. The second perfect&#xA;cube is 2x2x2 = 8. Etc.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;hblock&lt;/code&gt;: number(n) image(img) -&amp;gt; image. Make a horizontal stack of &lt;code&gt;n&lt;/code&gt; copies of &lt;code&gt;img&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;grid&lt;/code&gt;: number(rows) number(columns) image -&amp;gt; image. Make a grid that is &lt;code&gt;columns&lt;/code&gt; wide and &lt;code&gt;rows&lt;/code&gt; tall of the image repeated.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.6 Semester I Review 6</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-6/</link>
      <pubDate>Fri, 26 Jan 2018 07:56:22 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-6/</guid>
      <description>&lt;h2 id=&#34;what-does-it-do&#34;&gt;What does it do?&lt;/h2&gt;&#xA;&lt;p&gt;Write check-expects.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write two check-expects for the  &lt;code&gt;double-circle-img&lt;/code&gt; function&#xA;(abbeviate &lt;code&gt;dci&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define (double-circle-image img)&#xA;   (image-width&#xA;     (beside (circle 40 &amp;quot;solid&amp;quot; &amp;quot;blue&amp;quot;)&#xA;             img&#xA;             (circle 40 &amp;quot;solid&amp;quot; &amp;quot;blue&amp;quot;))))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write and test a function &lt;code&gt;r2d&lt;/code&gt; that returns a random two digit&#xA;number. There is a 40% chance of the number beginning with a 2 and&#xA;a 60% chance of it beginning with a 1. The ones digit should be&#xA;random.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Color Enhancing</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/color-enhancing/</link>
      <pubDate>Wed, 20 Dec 2017 10:51:18 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/color-enhancing/</guid>
      <description>&lt;p&gt;Write a function that takes a color and does the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cut the amount of red in half&lt;/li&gt;&#xA;&lt;li&gt;leave green the same&lt;/li&gt;&#xA;&lt;li&gt;double the amount of blue&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Start using the design process - write a signature, then examples&#xA;showing how each number changes. What possibly troublesome cases&#xA;should appear in your examples?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grade Weights</title>
      <link>https://wy-cs.info/docs/grading-scale/</link>
      <pubDate>Sat, 09 Sep 2017 11:00:30 -0500</pubDate>
      <guid>https://wy-cs.info/docs/grading-scale/</guid>
      <description>&lt;p&gt;The most common question people have is how grades are&#xA;computed.&lt;/p&gt;&#xA;&lt;h2 id=&#34;grading-weights-and-scale&#34;&gt;Grading weights and scale&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Percent&lt;/th&gt;&#xA;          &lt;th&gt;Category&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;Final Exam/Project (Quarterly)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;45&lt;/td&gt;&#xA;          &lt;td&gt;Tests and Quizzes (individual)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;45&lt;/td&gt;&#xA;          &lt;td&gt;Participation (incl. homework)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;We use the standard Whitney Young grading scale (90+ A, 80+ B, 70+ C, 60+ D, below 60 F).&lt;/p&gt;&#xA;&lt;p&gt;Class participation will be four points per day. You must be present and engaged in the class activities for the entire class to earn all of the points.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch6 Discussion 01</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-01/</link>
      <pubDate>Tue, 12 Nov 2019 15:13:20 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-01/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;partial-evaluation&#34;&gt;Partial Evaluation&lt;/h2&gt;&#xA;&lt;h3 id=&#34;p1&#34;&gt;P1&lt;/h3&gt;&#xA;&lt;p&gt;Given&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;f x y = 2*x+3*y&#xA;moo = f&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;What kind of thing is &lt;code&gt;moo&lt;/code&gt;? A number? A function? An error?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;moo 10 1 == f 10 1&#xA;         == 23&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;p2&#34;&gt;P2&lt;/h3&gt;&#xA;&lt;p&gt;Continuing:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;oom = f 100 10&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;What kind of thing is &lt;code&gt;oom&lt;/code&gt;? A number? A function? An error?&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Harmonic</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/61-harmonic/</link>
      <pubDate>Fri, 15 Feb 2019 11:38:48 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/61-harmonic/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The &lt;code&gt;harmonic-add&lt;/code&gt; function takes in a &lt;code&gt;start&lt;/code&gt; and an &lt;code&gt;end&lt;/code&gt; number,&#xA;and finds the sum &lt;code&gt;1/start + 1/(start+1) + ... + 1/end&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (check-expect (harmonic-add 1 2) 1.5)&#xA;    (check-within (harmonic-add 1 3) 1.8333 0.0001)&#xA;    (check-within (harmonic-add 1 4) 2.0833 0.0001)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Example in math: &lt;code&gt;(harmonic-add 1 4)&lt;/code&gt; is&#xA;$$ \frac{1}{1} + \frac{1}{2} + \frac{1}{3} + \frac{1}{4}. $$&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Practice&#43;&#43;</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/62-rec-plus/</link>
      <pubDate>Thu, 27 Feb 2020 07:50:17 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/62-rec-plus/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;A few more practice problems.&lt;/p&gt;&#xA;&lt;h2 id=&#34;parabola&#34;&gt;Parabola&lt;/h2&gt;&#xA;&lt;p&gt;Using the parabola $$f(x) = (x+8)(x-6),$$ find the sum of all of the&#xA;y-coordinates on the graph of $y=f(x)$ with x an integer between&#xA;&lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; (&amp;ldquo;inclusive&amp;rdquo;: see first example).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (parabola-ys 2 2) (* 10 -4))&#xA; (check-expect (parabola-ys 2 3) (+ (* 10 -4) (* 11 -3)))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;sevenths&#34;&gt;Sevenths&lt;/h2&gt;&#xA;&lt;p&gt;The function&#xA;&lt;code&gt;add-sevenths: number(start) number(end) -&amp;gt; number&lt;/code&gt;&#xA;finds the sum of all of the sevenths with integer numerator between&#xA;start and end (inclusive).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch6 Discussion 02</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-02/</link>
      <pubDate>Fri, 15 Nov 2019 13:31:01 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-02/</guid>
      <description>&lt;p&gt;The &lt;code&gt;cityscape&lt;/code&gt; function takes in a list of integers representing the&#xA;heights of buildings and puts out a single string that will show&#xA;skyscrapers built of X&amp;rsquo;s in columns whose heights correspond to the&#xA;integers.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cityscape [4,2,6,1]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Output:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  x&#xA;  x&#xA;x x&#xA;x x&#xA;xxx&#xA;xxxx&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Make sure you test your program to verify that it works with two&#xA;skyscrapers of the same height.&lt;/p&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;Make multiline output by adding &lt;code&gt;\n&lt;/code&gt; characters into a string.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 6</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-6/</link>
      <pubDate>Tue, 21 Mar 2023 12:21:53 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-6/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;rep1: number(n) -&amp;gt; list of numbers&lt;/code&gt;. Produce a list with the number 20&#xA;repeated n times.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (rep1 5) (list 20 20 20 20 20))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;rep2: number(n) -&amp;gt; list of numbers&lt;/code&gt;. Produce a list with the&#xA;pattern &lt;code&gt;30 40&lt;/code&gt; repeated n times.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (rep2 3) (list 30 40 30 40 30 40))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;rep3: number(n) -&amp;gt; list of numbers&lt;/code&gt;. Produce a list of n numbers,&#xA;repeating the pattern 50 60. (But not n repetitions of the pattern!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. ss3</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/63-ssa/</link>
      <pubDate>Tue, 03 Mar 2020 07:50:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/63-ssa/</guid>
      <description>&lt;p&gt;Design and test a function &lt;code&gt;ss3: number(a) number(b) -&amp;gt; number&lt;/code&gt; to sum&#xA;the squares of every third number from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt;. Skip multiples of&#xA;ten.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(ss3 14 23) = 14^2 + 17^2 + 23^2&#xA;(ss3 14 18) = 14^2 + 17^2&#xA;(ss3 10 40) = 6165&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Ch6 Discussion 03</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-03/</link>
      <pubDate>Tue, 19 Nov 2019 13:18:07 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-03/</guid>
      <description>&lt;p&gt;Learn: &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;foldl&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I will write &lt;code&gt;foldL&lt;/code&gt; and &lt;code&gt;foldR&lt;/code&gt; so it is clear that the last&#xA;character is a ell not a one. There are also functions &lt;code&gt;foldl1&lt;/code&gt; and&#xA;&lt;code&gt;foldr1&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt; filter (&amp;gt;=0) [5,-1,3,4,-8]&#xA; filter (0&amp;gt;=) [5,-1,3,4,-8]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Find want all numbers x from a list so that &lt;code&gt;x^2&lt;/code&gt; is less&#xA;than 100.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; filter (\x -&amp;gt; x*x &amp;lt;= 100) [5,90,13,-4]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;exercises-1&#34;&gt;Exercises 1&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Find all of the words of length at most 7.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22b. List Exercises 7</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-7/</link>
      <pubDate>Fri, 24 Mar 2023 12:53:11 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-exercises-7/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;col-gen: number(x) number(ymax) -&amp;gt; list-of-posn&lt;/code&gt;)&#xA;The column generator. Given an x-coordinate and maximum y-coordinate&#xA;&lt;code&gt;ymax&lt;/code&gt;, make a list of posns with that x-coordinate whose y-coordinate&#xA;counts down from &lt;code&gt;ymax&lt;/code&gt; to 0.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (col-gen 5 3)&#xA;               (list (make-posn 5 3)&#xA;                     (make-posn 5 2)&#xA;                     (make-posn 5 1)&#xA;                     (make-posn 5 0)))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;circler: list-of-posns image -&amp;gt; image&lt;/code&gt;)&#xA;Take in a list of posns $(x,y)$ and a background image&#xA;and put out a list of circles of radius 8 at coordinates $(10x, 10y)$ on&#xA;the background.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Quiz 4</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-quiz-4/</link>
      <pubDate>Fri, 29 Apr 2022 11:54:21 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-quiz-4/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Clicking with a mouse in a window cycles the shape showing: nothing&#xA;-&amp;gt; circle -&amp;gt; triangle -&amp;gt; square -&amp;gt; nothing (repeatedly).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &amp;ldquo;e&amp;rdquo; key erases all shapes in every window.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &amp;ldquo;n&amp;rdquo; key moves a shape to the &amp;ldquo;next&amp;rdquo; window. If there is already&#xA;a shape there it is replaced by the incoming shape.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &amp;ldquo;p&amp;rdquo; key moves a shape to the &amp;ldquo;previous&amp;rdquo; window, as above.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;challenges&#34;&gt;Challenges&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The shape also has a number indicating which world it originated&#xA;in. That number goes with the shape as it moves.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch6 Discussion 04</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-04/</link>
      <pubDate>Tue, 19 Nov 2019 15:44:39 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-discussion-04/</guid>
      <description>&lt;p&gt;Learn: &lt;code&gt;scanl&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Find the first 40 partial sums of the sequence 1+1/2+1/3+1/4+&amp;hellip; by&#xA;using &lt;code&gt;scanl&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in a list &lt;code&gt;[(Float,Bool)]&lt;/code&gt; of &lt;code&gt;(gpa, admitted)&lt;/code&gt; student data, find all of the&#xA;pairs where the student was admitted with a gpa of less than 3.0.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Shopping. Given $200 and a list of &lt;code&gt;Int&lt;/code&gt; prices of items, find:&lt;/p&gt;&#xA;&lt;p&gt;a. How much money remains after buying each item possible, in order&#xA;from left to right.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Treasure Hunt</title>
      <link>https://wy-cs.info/ecs/scratch/variables-6a-treasure/</link>
      <pubDate>Fri, 15 Feb 2019 11:10:02 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-6a-treasure/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Get a key (disappears when you have it).&lt;/li&gt;&#xA;&lt;li&gt;Door opens when touched after have the key.&lt;/li&gt;&#xA;&lt;li&gt;Win when you get the money.&lt;/li&gt;&#xA;&lt;li&gt;Cannot walk through door or walls.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/scratch/variables-6a-treasure/treasure-hunt.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;common-misunderstandings&#34;&gt;Common Misunderstandings&lt;/h2&gt;&#xA;&lt;p&gt;These statements are the way the game &lt;em&gt;should&lt;/em&gt; work.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The door does not open immediately when you get the key, you need to&#xA;walk over and touch the door to open it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Door is always visible!&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Cannot get treasure without getting past door.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Heatmap</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-heatmap/</link>
      <pubDate>Wed, 19 Dec 2018 20:54:29 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-heatmap/</guid>
      <description>&lt;p&gt;The figure below is 100 pixels wide and 300 pixels tall. Each 100&#xA;pixel color segment is a color gradient.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch15/15-heatmap/heatmap.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;y-coord&lt;/th&gt;&#xA;          &lt;th&gt;color&lt;/th&gt;&#xA;          &lt;th&gt;color value&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;blue&lt;/td&gt;&#xA;          &lt;td&gt;125&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;99&lt;/td&gt;&#xA;          &lt;td&gt;blue&lt;/td&gt;&#xA;          &lt;td&gt;224&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;100&lt;/td&gt;&#xA;          &lt;td&gt;green&lt;/td&gt;&#xA;          &lt;td&gt;125&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;199&lt;/td&gt;&#xA;          &lt;td&gt;green&lt;/td&gt;&#xA;          &lt;td&gt;224&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;200&lt;/td&gt;&#xA;          &lt;td&gt;red&lt;/td&gt;&#xA;          &lt;td&gt;125&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;300&lt;/td&gt;&#xA;          &lt;td&gt;red&lt;/td&gt;&#xA;          &lt;td&gt;225&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;For example, when y=150, the color produced is &lt;code&gt;(make-color 0 175 0)&lt;/code&gt;&#xA;because the color is supposed to be green when y is between 100 and 199.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Academic Integrity</title>
      <link>https://wy-cs.info/docs/academic-integrity/</link>
      <pubDate>Sat, 09 Sep 2017 16:51:48 -0500</pubDate>
      <guid>https://wy-cs.info/docs/academic-integrity/</guid>
      <description>&lt;p&gt;Being honest and honorable regarding one’s academic integrity is&#xA;essential in all of your classes.&lt;/p&gt;&#xA;&lt;p&gt;Students are expected to adhere to the following honor code regarding&#xA;all of their work in this class.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;“I have neither given nor received improper aid on this test/project.”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;“Improper aid” includes, but is not limited to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;copying another student’s work&lt;/li&gt;&#xA;&lt;li&gt;allowing another student to copy your work&lt;/li&gt;&#xA;&lt;li&gt;sharing the problems given on a test to a student who has not&#xA;taken the test&lt;/li&gt;&#xA;&lt;li&gt;copying work from any online or electronic resource without citation&lt;/li&gt;&#xA;&lt;li&gt;chatting or texting with another student during a test in which&#xA;computer use is allowed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On a project (not test), it is acceptable to give suggestions to a&#xA;student who knows less than you do.&lt;/p&gt;</description>
    </item>
    <item>
      <title>For 1.5</title>
      <link>https://wy-cs.info/intermediate-cs/pro/for/for-1.5/</link>
      <pubDate>Wed, 07 May 2025 14:16:16 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/for/for-1.5/</guid>
      <description>&lt;p&gt;Understand how &lt;a href=&#34;https://docs.racket-lang.org/guide/for.html#(part._for_list_and_for__list)&#34;&gt;two variables in a for&#xA;loop&lt;/a&gt;&#xA;work and be able to use&#xA;&lt;a href=&#34;https://docs.racket-lang.org/teachpack/2htdpabstraction.html#%28def._x._%28%28lib._teachpack%2F2htdp%2Fabstraction..rkt%29._in-naturals%29%29&#34;&gt;in-naturals&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an &lt;code&gt;enumerate&lt;/code&gt; function to number the items in a list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (enumerate (list &amp;quot;Pencils&amp;quot; &amp;quot;Pens&amp;quot; &amp;quot;Markers&amp;quot; &amp;quot;Erasers&amp;quot;))&#xA;               (list &amp;quot;1. Pencils&amp;quot; &amp;quot;2. Pens&amp;quot; &amp;quot;3. Markers&amp;quot; &amp;quot;4. Erasers&amp;quot;))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;scs&lt;/code&gt; function takes in a list of numbers and a list of&#xA;colors. It makes a list of solid squares by using the corresponding&#xA;numbers and colors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prolog Bonus</title>
      <link>https://wy-cs.info/ai/logic/20-prolog/70-bonus/</link>
      <pubDate>Thu, 22 Feb 2024 17:47:38 -0600</pubDate>
      <guid>https://wy-cs.info/ai/logic/20-prolog/70-bonus/</guid>
      <description>&lt;h2 id=&#34;when-is-a-goal-true&#34;&gt;When is a goal true?&lt;/h2&gt;&#xA;&lt;p&gt;In Prolog, not matching one of the arguments of a function / goal /&#xA;fact is not an error; the default is &lt;code&gt;false&lt;/code&gt;. The function &lt;code&gt;check&lt;/code&gt; in&#xA;the program below is &lt;code&gt;false&lt;/code&gt;, not an error.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;abc(0) :- true.&#xA;check :- abc(5).&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This explains why &lt;code&gt;maplist&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; when the arguments do not have&#xA;the same length. The recursion rules for &lt;code&gt;maplist&lt;/code&gt; remove one item&#xA;from each list. There is no pattern in maplist for one empty and one&#xA;nonempty list, so the false result comes directly from &lt;code&gt;maplist&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DFS Applications</title>
      <link>https://wy-cs.info/ai/graph/70-dfs-applications/</link>
      <pubDate>Mon, 25 Sep 2023 07:13:42 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/70-dfs-applications/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Question: how do you learn the ideas from an algorithm? What kind of&#xA;work shows that you understand it?&lt;/p&gt;&#xA;&lt;h2 id=&#34;connected-components&#34;&gt;Connected Components&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use BFS or DFS to determine if an undirected graph is&#xA;connected. Inputs: number of vertices, adjacency list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>BPJ Quiz 15&#43;18 A</title>
      <link>https://wy-cs.info/ap-cs/bpj/bpj-q-15&#43;18-a/</link>
      <pubDate>Wed, 01 Feb 2023 07:06:59 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/bpj/bpj-q-15&#43;18-a/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an array of integers whose length is a number $n$ that the user&#xA;types. Fill it with the perfect squares from $n^2$ down to $1^2$,&#xA;in that order.&lt;/p&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; Number?&#xA; 10&#xA; [Array contains: {100,81,64,49,36,25,16,9,4,1}]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Starter code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Scanner&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kb&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Scanner&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Number?&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;nextInt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Your code here&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;Pencil&lt;/code&gt;) The Pencil class has a &lt;code&gt;boolean mechanical&lt;/code&gt; field and a&#xA;&lt;code&gt;boolean sharp&lt;/code&gt; field. When you make a new pencil, it is always&#xA;sharp. A pencil has a &lt;code&gt;void write()&lt;/code&gt; method which makes non-mechanical&#xA;pencils get dull. A &lt;code&gt;void sharpen()&lt;/code&gt; method makes the pencil sharp.&#xA;See below for printing out.&lt;/p&gt;</description>
    </item>
    <item>
      <title>07 Big Bang</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/07-big-bang/</link>
      <pubDate>Wed, 20 Apr 2022 17:34:32 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/07-big-bang/</guid>
      <description>&lt;p&gt;We learn how to launch more than one world at a time using&#xA;&lt;code&gt;launch-many-worlds&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The most common way to launch more than one big-bang is by writing a&#xA;function that runs a big-bang. The function usually takes in the name&#xA;of the world (which is used to title the window) and the initial&#xA;model.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(define (start-bang title initial)&#xA;   (big-bang initial&#xA;      (name title)&#xA;      (register LOCALHOST) ;; see 08 Server&#xA;      (to-draw draw-h)&#xA;      (on-key key-h)&#xA;      (on-receive receive-h)))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can then launch two worlds like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch07</title>
      <link>https://wy-cs.info/ml/r4ds/ch07/</link>
      <pubDate>Tue, 22 Sep 2020 12:32:23 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch07/</guid>
      <description>&lt;h2 id=&#34;751-one-categorical-one-continuous&#34;&gt;7.5.1 One categorical, one continuous&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Question 4. Letter-value plots are an improvement on boxplots when the datasets&#xA;get larger. Read the &lt;a href=&#34;https://vita.had.co.nz/papers/letter-value-plot.pdf&#34;&gt;original source for&#xA;lvplots&lt;/a&gt; if you&#xA;want to see exactly what they mean. (Good short summary&#xA;needed. Offer one if you want.)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Typed Exercises 3</title>
      <link>https://wy-cs.info/intermediate-cs/typed/typed-ex3/</link>
      <pubDate>Thu, 09 May 2019 07:24:49 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/typed-ex3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a game structure that has a player &lt;code&gt;name&lt;/code&gt;, a &lt;code&gt;location&lt;/code&gt; Posn,&#xA;and a Boolean variable for &lt;code&gt;horizontal?&lt;/code&gt;. You can abbreviate field names.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a draw handler that draws a rectangle with the player&amp;rsquo;s name&#xA;inside of it (you pick a size) and then potentially rotates it 90&#xA;degrees if &lt;code&gt;horizontal?&lt;/code&gt; is false.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a key handler that flips the image from horizontal to&#xA;vertical when you hit space.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add to your key handler so any other (length 1) key that is hit is&#xA;added to the end of the existing name. Advanced: make backspace work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Bases</title>
      <link>https://wy-cs.info/ecs/scratch/variables-7a-baseball/</link>
      <pubDate>Thu, 14 Feb 2019 10:30:07 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-7a-baseball/</guid>
      <description>&lt;p&gt;In the game of baseball, the batter hits the ball and then tries to&#xA;touch all four bases, in order, before being tagged out. We will not&#xA;do anything with the hitting the ball, just running the bases.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Goal: move to base 1, 2, 3, and home (base 4).&lt;/li&gt;&#xA;&lt;li&gt;You are a cheater if you try to skip a base. Lose in that case.&lt;/li&gt;&#xA;&lt;li&gt;You win when you get to home.&lt;/li&gt;&#xA;&lt;li&gt;When the green flag is clicked, pick a random number from 1&#xA;to 5. That number is the base you get &amp;ldquo;out&amp;rdquo; at. (If the number is 5&#xA;you score.)&lt;/li&gt;&#xA;&lt;li&gt;Reset to start at base 0 when the green flag is clicked.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;class-discussion&#34;&gt;Class discussion&lt;/h2&gt;&#xA;&lt;p&gt;We talked about what variables you should use, and what they mean.&#xA;The most important variable is &lt;code&gt;last base I got to&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.7 Semester I Review 7</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-7/</link>
      <pubDate>Wed, 23 Jan 2019 17:34:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-7/</guid>
      <description>&lt;p&gt;This page contains additional review exercises.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basic-spanish&#34;&gt;Basic Spanish&lt;/h2&gt;&#xA;&lt;p&gt;We will write a function to conjugate regular&#xA;verbs &amp;ldquo;-ar&amp;rdquo; and &amp;ldquo;-er&amp;rdquo; verbs according to the following chart. Use the&#xA;ending letters to decide how to categorize a given verb. We will only&#xA;consider the present and past tense (preterit) of the verbs.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Verb&lt;/th&gt;&#xA;          &lt;th&gt;Subject&lt;/th&gt;&#xA;          &lt;th&gt;Past?&lt;/th&gt;&#xA;          &lt;th&gt;Result is base +&lt;/th&gt;&#xA;          &lt;th&gt;Example (&amp;ldquo;andar&amp;rdquo;/&amp;ldquo;correr&amp;rdquo;)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ar&lt;/td&gt;&#xA;          &lt;td&gt;yo&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;          &lt;td&gt;-o&lt;/td&gt;&#xA;          &lt;td&gt;ando&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ar&lt;/td&gt;&#xA;          &lt;td&gt;yo&lt;/td&gt;&#xA;          &lt;td&gt;true&lt;/td&gt;&#xA;          &lt;td&gt;-é&lt;/td&gt;&#xA;          &lt;td&gt;andé&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ar&lt;/td&gt;&#xA;          &lt;td&gt;tu&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;          &lt;td&gt;-as&lt;/td&gt;&#xA;          &lt;td&gt;andas&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-ar&lt;/td&gt;&#xA;          &lt;td&gt;tu&lt;/td&gt;&#xA;          &lt;td&gt;true&lt;/td&gt;&#xA;          &lt;td&gt;-aste&lt;/td&gt;&#xA;          &lt;td&gt;andaste&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-er&lt;/td&gt;&#xA;          &lt;td&gt;yo&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;          &lt;td&gt;-o&lt;/td&gt;&#xA;          &lt;td&gt;corro&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-er&lt;/td&gt;&#xA;          &lt;td&gt;yo&lt;/td&gt;&#xA;          &lt;td&gt;true&lt;/td&gt;&#xA;          &lt;td&gt;-í&lt;/td&gt;&#xA;          &lt;td&gt;corrí&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-er&lt;/td&gt;&#xA;          &lt;td&gt;tu&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;          &lt;td&gt;-es&lt;/td&gt;&#xA;          &lt;td&gt;corres&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;-er&lt;/td&gt;&#xA;          &lt;td&gt;tu&lt;/td&gt;&#xA;          &lt;td&gt;true&lt;/td&gt;&#xA;          &lt;td&gt;-iste&lt;/td&gt;&#xA;          &lt;td&gt;corriste&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Signature:&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Heatmap with Contours</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-heat-contour/</link>
      <pubDate>Fri, 21 Dec 2018 07:24:27 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-heat-contour/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;We are going to make a beautiful icy winter picture using that idea.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch15/15-heat-contour/astral.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;&#xA;&lt;p&gt;We use a function of x and y to create a number. Use the number in a&#xA;heatmap function to produce a color. Build-image to make a picture&#xA;from this process.&lt;/p&gt;&#xA;&lt;script src=&#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;mermaid.initialize({startOnLoad:true});&lt;/script&gt;&#xA;&lt;div class=&#34;mermaid&#34;&gt;&#xA;graph LR;&#xA;  A[x-computer] --&gt; B[x-people]&#xA;  C[y-computer] --&gt; D[y-people]&#xA;  B --&gt; E[function]&#xA;  D --&gt; E&#xA;  E --&gt; F[number]&#xA;  F --&gt; |heatmap| G[color]&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;When we draw, we will have conversion functions so we can draw in computer&#xA;coordinates and do math in people coordinates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Graph Zoom</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-graph-zoom/</link>
      <pubDate>Fri, 30 Nov 2018 17:31:57 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-graph-zoom/</guid>
      <description>&lt;p&gt;A good graph of &lt;code&gt;(sin x)&lt;/code&gt; would have x-people from -5 to 5 and y-people from -1 to 1. That is only a 10x2 window, too small to really see anything.&lt;/p&gt;&#xA;&lt;p&gt;We want to graph the same function in a 300x200 window.&lt;/p&gt;&#xA;&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;&#xA;&lt;p&gt;We have a function that takes in people x-coordinates and puts out&#xA;people y-coordinates, so the infomation will flow as diagrammed below.&lt;/p&gt;&#xA;&lt;script src=&#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;mermaid.initialize({startOnLoad:true});&lt;/script&gt;&#xA;&lt;div class=&#34;mermaid&#34;&gt;&#xA;graph LR;&#xA;   A[x-computer] --&gt; B[x-people]&#xA;   B --&gt; |func| C[y-people]&#xA;   C --&gt; D[x-computer]&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This means figuring out conversion functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Slapjack</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-slapjack/</link>
      <pubDate>Wed, 16 May 2018 14:57:00 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-slapjack/</guid>
      <description>&lt;p&gt;A bunch of players connect to the server. (One player per window.) The&#xA;screen is yellow for a random amount of time (say 1-10 seconds). When&#xA;the screen turns green, the first window to hit a key gets a&#xA;point. The others are locked out until the next time the screen turns green.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Show points on screen.&lt;/li&gt;&#xA;&lt;li&gt;Any key hit in a window scores for that window.&lt;/li&gt;&#xA;&lt;li&gt;Only one point per green screen.&lt;/li&gt;&#xA;&lt;li&gt;No points can be earned when the screen is yellow.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;planning&#34;&gt;Planning&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Model&lt;/li&gt;&#xA;&lt;li&gt;Message(s)&lt;/li&gt;&#xA;&lt;li&gt;What will happen when the message is received?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;&#xA;&lt;p&gt;The grey background and the line are not part of the animation; they just separate the active worlds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursive Helpers</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/70-rec-helpers/</link>
      <pubDate>Wed, 28 Feb 2018 13:58:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/70-rec-helpers/</guid>
      <description>&lt;h2 id=&#34;image-theory&#34;&gt;Image Theory&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;big-bullseye&lt;/code&gt;: number(n) -&amp;gt; image. Draw n concentric circles, alternating color beginning with black on the inside. Begin with a radius of 10 and increase the radius by 10 each successive circle.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;sier-triangle&lt;/code&gt;: number(n) number(size) -&amp;gt; image. Make a &lt;a href=&#34;https://en.wikipedia.org/wiki/Sierpi%C5%84ski_gasket&#34;&gt;Sierpinski triangle&lt;/a&gt; with &lt;code&gt;n&lt;/code&gt; stages in the pattern and a side length of &lt;code&gt;size&lt;/code&gt;. Do this by dividing the size in two when you make a smaller triangle, and arrange those triangles themselves in a triangle (see images).&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Review</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ch20-review/</link>
      <pubDate>Wed, 10 Jan 2018 09:54:08 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ch20-review/</guid>
      <description>&lt;p&gt;Write checks and follow the design process as you write these functions.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Move to parabola. Input any point, output a point on the graph of &lt;code&gt;y=x^2&lt;/code&gt;.&#xA;Find the output point by moving vertically up or down from the input point until you reach the graph of &lt;code&gt;y=x^2&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;to-parabola: posn(initial) -&amp;gt; posn&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&#xA;    If you have time, make an animation that shows a gray circle where the mouse is and then connects that via a gray line to a blue circle on the parabola. You can use [my 400x400 parabola image](bg-parabola.png) to see the whole parabola. (Read the [code I used to make the parabola](parabola-maker.rkt) if you want.)&#xA;&#xA;     If you want to see an upward facing parabola in people coordinates,&#xA;you should use the formula below:&#xA;&#xA;    ```racket&#xA;(define (f x)&#xA;        (+ 200 (* -1/200 (- x 200) (- x 200))))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Input a color, output a new color.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chat App</title>
      <link>https://wy-cs.info/intermediate-cs/universe/chat-app/</link>
      <pubDate>Wed, 20 Mar 2024 12:40:35 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/chat-app/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;basic-features&#34;&gt;Basic Features&lt;/h2&gt;&#xA;&lt;p&gt;Write a check before writing the function! Beginning with step 3.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Read requirements and decide on a model.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Set up the model with updater functions like &lt;code&gt;update-co: player new-co -&amp;gt; player&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a draw handler to display a list of messages.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a key handler so you can type a message and then send it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prolog FAQ</title>
      <link>https://wy-cs.info/ai/logic/20-prolog/80-faq/</link>
      <pubDate>Thu, 22 Feb 2024 16:47:38 -0600</pubDate>
      <guid>https://wy-cs.info/ai/logic/20-prolog/80-faq/</guid>
      <description>&lt;h2 id=&#34;making-a-domain&#34;&gt;Making a Domain&lt;/h2&gt;&#xA;&lt;p&gt;In the example &lt;code&gt;Num in 1..10&lt;/code&gt;, the &lt;code&gt;1..10&lt;/code&gt; is called the&#xA;&lt;a href=&#34;https://www.swi-prolog.org/pldoc/man?section=clpfd-domains&#34;&gt;domain&lt;/a&gt;&#xA;of the variable &lt;code&gt;Num&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;When you have a list of possible values like &lt;code&gt;[1936, 1939, 1945]&lt;/code&gt;, you&#xA;cannot directly use that as a domain. The conversion process follows:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Allowed = [1936, 1939, 1945],&#xA;list_to_fdset(Allowed, FD_Allowed),&#xA;fdset_to_range(FD_Allowed, Range),&#xA;&#xA;Num in Range.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The vocabulary is slightly confusing; the documentation refers to the&#xA;domain of a variable, but the functions call that same quantity&#xA;a range.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Paint</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-paint/</link>
      <pubDate>Tue, 03 May 2022 11:37:26 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-paint/</guid>
      <description>&lt;p&gt;You will build a shared screen paint program, kind of like&#xA;&amp;ldquo;/r/place&amp;rdquo;&amp;hellip; barely.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;two-paints.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/universe/u-paint/two-paints.png&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;If you examine the full-size version of picture above, you can see I&#xA;have modified the program to label each circle with the id of the&#xA;world that drew it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;message&#34;&gt;Message&lt;/h2&gt;&#xA;&lt;p&gt;We will all be sending the same message, so it is important that you&#xA;get this exactly right (or you will crash other peoples&amp;rsquo; clients).&lt;/p&gt;</description>
    </item>
    <item>
      <title>08 Server</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/08-server/</link>
      <pubDate>Wed, 20 Apr 2022 17:34:39 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/08-server/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Download the &lt;a href=&#34;generic-server-v1.rkt&#34;&gt;generic server code&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Open the code in a new tab and run it.&lt;/li&gt;&#xA;&lt;li&gt;Without closing, return to your main file.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Connecting a big-bang to a server is done by adding a &lt;code&gt;register&lt;/code&gt;&#xA;clause:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(register LOCALHOST)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;You can name each window by adding a &lt;code&gt;name&lt;/code&gt; clause:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(name &amp;quot;My Name&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Follow the video, it&amp;rsquo;s pretty straightforward.&lt;/p&gt;&#xA;&lt;p&gt;The most common error is not having the server running!!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simulator</title>
      <link>https://wy-cs.info/ecs/arduino/simulator/</link>
      <pubDate>Tue, 21 May 2019 10:48:39 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/simulator/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.tinkercad.com&#34;&gt;TinkerCad&lt;/a&gt; provides a simulator.&lt;/p&gt;&#xA;&lt;p&gt;Sign up for an account and log in.&#xA;Lost? Click on the TinkerCad logo in the upper left corner.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Left side bar: &amp;ldquo;Circuits&amp;rdquo;&lt;/p&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/simulator/tinkercad-circuits-marked.png&#34; width=&#34;150&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Button: &amp;ldquo;Create a new circuit&amp;rdquo;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dropdown on right: change &amp;ldquo;Components - Basic&amp;rdquo; to &amp;ldquo;Starters -&#xA;Arduino.&lt;/p&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/simulator/tinkercad-starters-1-marked.png&#34; width=&#34;250&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Select &amp;ldquo;Breadboard&amp;rdquo; and drag it out (may lag, go slow).&lt;/p&gt;&#xA;  &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ecs/arduino/simulator/tinkercad-starters-2-marked.png&#34;&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Change back to &amp;ldquo;Components - Basic&amp;rdquo;. Search for &amp;ldquo;potentiometer&amp;rdquo; if&#xA;you can&amp;rsquo;t see it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Air and Water</title>
      <link>https://wy-cs.info/ecs/scratch/variables-8a-drown/</link>
      <pubDate>Tue, 19 Feb 2019 10:57:02 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-8a-drown/</guid>
      <description>&lt;p&gt;There is water and air. If the main character is completely under&#xA;water for 10 seconds, they drown. When the character touches air, they&#xA;can breathe, so they will not drown 10 seconds if they go under water&#xA;again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.8 Semester I Review 8</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-8/</link>
      <pubDate>Wed, 23 Jan 2019 14:25:49 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-8/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a 300x700 gradient that goes from &amp;ldquo;MediumVioletRed&amp;rdquo; at the top&#xA;to &amp;ldquo;LimeGreen&amp;rdquo; at the bottom. Include at least three check-expects.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a function &lt;code&gt;purple-ize: image -&amp;gt; image&lt;/code&gt; that takes in an&#xA;image and changes every pixel&amp;rsquo;s color to the closest &amp;ldquo;purple&amp;rdquo;&#xA;color.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Say purple is red and blue, so the nearest purple color&#xA;corresponds to whichever component has more.&#xA;&#xA;Example: the nearest purple color to (220,50,80) is&#xA;(220,50,220), and the nearest purple color to (30,40,50) is&#xA;(50,40,50).&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Bonus: Animate a purple-izing circle of radius 20 that follows the&#xA;mouse around an image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Number Project</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-project/</link>
      <pubDate>Sun, 02 Dec 2018 22:38:33 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-project/</guid>
      <description>&lt;p&gt;Requirements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Four quadrants.&lt;/li&gt;&#xA;&lt;li&gt;Axes do not meet in the center.&lt;/li&gt;&#xA;&lt;li&gt;People coordinates are not in 1 to 1 ratio with computer coordinates.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>7. Review 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/review-1/</link>
      <pubDate>Tue, 13 Nov 2018 07:38:18 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/review-1/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;f1&lt;/code&gt; to create a random number between 10 and 50.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;tree&lt;/code&gt; to make a tree given a radius and a&#xA;height. We measure the height of the tree to the center of the&#xA;circle, not the very top. The width of the trunk should be the same&#xA;as the radius. Shown below is &lt;code&gt;(tree 90 220)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Quiz Practice</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/80-rec-practice-q/</link>
      <pubDate>Fri, 02 Mar 2018 08:00:42 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/80-rec-practice-q/</guid>
      <description>&lt;p&gt;Follow the design process for each function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;hawaiian-earring&lt;/code&gt;: number(stage) number(radius) -&amp;gt; image. Create &lt;code&gt;stage&lt;/code&gt; circles with each successive circle 80% of the radius of the previous one.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch22a/80-rec-practice-q/hawaiian-earring.png&#34;&gt;&lt;figcaption&gt;&#xA;          &lt;h4&gt;(hawaiian-earring 10 80)&lt;/h4&gt;&#xA;        &lt;/figcaption&gt;&#xA;    &lt;/figure&gt;&#xA;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;double-ss&lt;/code&gt;: string -&amp;gt; string. Double each &lt;code&gt;s&lt;/code&gt; appearing in the string.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (double-ss &amp;quot;The snake was silent.&amp;quot;)&#xA;               &amp;quot;The ssnake wass ssilent.&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;math-mess&lt;/code&gt;: number(start) number(end) -&amp;gt; number. For all of the numbers between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;: add the squares of the even numbers, subtract the square roots of the odd numbers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Review 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/review-2/</link>
      <pubDate>Thu, 21 Nov 2019 12:57:17 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/review-2/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;signatures&#34;&gt;Signatures&lt;/h2&gt;&#xA;&lt;p&gt;Remember that when you are describing a model which is a string, you&#xA;should write model(string) instead of just model or string. This makes&#xA;it clear that you know &lt;em&gt;exactly&lt;/em&gt; the role that value plays in the&#xA;animation.&lt;/p&gt;&#xA;&lt;h3 id=&#34;triangle-in-the-corner&#34;&gt;Triangle in the corner&lt;/h3&gt;&#xA;&lt;p&gt;You are making an animation that shows a triangle in the upper left&#xA;corner of a 400x200 rectangle, filled in to the location of the mouse.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Quiz 2018</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/81-rec-quiz/</link>
      <pubDate>Mon, 05 Mar 2018 07:59:54 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/81-rec-quiz/</guid>
      <description>&lt;p&gt;You may use the Picturing Programs textbook and the blog to look up functions th&#xA;at you do not know. Do not consult any other programs written by you or anyone else. (No old homework, Stack Overflow, etc.)&lt;/p&gt;&#xA;&lt;p&gt;Have at least two check expects for each function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;reciprocal-squares&lt;/code&gt;: number(start) number(end) -&amp;gt; number. Find the sum of &lt;code&gt;1/n^2&lt;/code&gt; for every &lt;code&gt;n&lt;/code&gt; between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; (including both).&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;start&lt;/th&gt;&#xA;          &lt;th&gt;end&lt;/th&gt;&#xA;          &lt;th&gt;sum&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1.0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;1.25&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;1.36111&amp;hellip;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;blank-vowels&lt;/code&gt;: string(word) -&amp;gt; string. Change every vowel (a,e,i,o,u) to an underscore (&lt;code&gt;_&lt;/code&gt;). Example: &lt;code&gt;(blank-vowels &amp;quot;elephant&amp;quot;) =&amp;gt; &amp;quot;_l_ph_nt&amp;quot;&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Practice I 2019</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/82-quiz/</link>
      <pubDate>Tue, 19 Feb 2019 21:14:22 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/82-quiz/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;altsum&lt;/code&gt;) One way to see if a number is divisible by 11 is to find&#xA;the alternating sum (+ then -) of the digits of the number,&#xA;beginning at the ones digit, and see if that number is divisible&#xA;by 11. The alternating sum of the digits if 1495 is $5-9+4-1 = -1$, so 1495&#xA;is not divisible by 11. Design and test the function&#xA;&lt;code&gt;altsum: number(n) -&amp;gt; number&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Roygbiv Code</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/roygbiv-code/</link>
      <pubDate>Thu, 21 Feb 2019 17:11:35 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/roygbiv-code/</guid>
      <description>&lt;p&gt;We are going to write an encoding function that makes an image like a&#xA;bar code, but using colored rectangles instead of bars.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Strings</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/84-strings/</link>
      <pubDate>Fri, 22 Feb 2019 07:53:26 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/84-strings/</guid>
      <description>&lt;h1 id=&#34;objective&#34;&gt;Objective&lt;/h1&gt;&#xA;&lt;p&gt;I can write a recursive function that works on a string.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;letterswap&#34;&gt;LetterSwap&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;(swap &amp;quot;wallaby&amp;quot; &amp;quot;a&amp;quot; &amp;quot;x&amp;quot;)&lt;/code&gt;&#xA;&lt;code&gt;=&amp;gt; &amp;quot;wxllxby&amp;quot;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;swap: word original replace -&amp;gt; string&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Change the letter &lt;code&gt;original&lt;/code&gt; to the letter &lt;code&gt;replace&lt;/code&gt; in the &lt;code&gt;word&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;no-mistakes&#34;&gt;No Mistakes&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;no-mistake: string(word) -&amp;gt; string&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Remove every appearance of &amp;ldquo;mistake&amp;rdquo; inside the given word.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.9 Semester I Review 9</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-9/</link>
      <pubDate>Tue, 17 Dec 2024 13:34:25 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-9/</guid>
      <description>&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There will be a white Christmas if the temperature is below 32 and there is &lt;code&gt;water?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; ;; white-christmas?: boolean(water?) number(temperature)&#xA; ;;                   -&amp;gt; boolean&#xA; (define (white-christmas? water? temperature)&#xA;     ...)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Give examples showing how to get &amp;ldquo;ACE&amp;rdquo;, &amp;ldquo;BETA&amp;rdquo;, and &amp;ldquo;CROW&amp;rdquo;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define (q2 x y? z)&#xA;     (cond [(and y? (&amp;lt; x 30))         &amp;quot;ACE&amp;quot;]&#xA;           [(or (not y?)&#xA;                (string=? z &amp;quot;good&amp;quot;))  &amp;quot;BETA&amp;quot;]&#xA;           [else                      &amp;quot;CROW&amp;quot;]))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write this function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; ;; q3 : number number number string -&amp;gt; number&#xA; (define (q3 m x y e)&#xA;     ...)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;give -10 when x &amp;gt; 200 and e is &amp;ldquo;button-down&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;give -20 when x &amp;lt; 200 and e is &amp;ldquo;button-down&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;give m otherwise&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;simple-animation&#34;&gt;Simple Animation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The model is a number, a multiple of 10 from 10 through 90.&lt;/li&gt;&#xA;&lt;li&gt;Losing is indicated by adding 100 to the number, so the losing&#xA;models will be 110, 120, &amp;hellip;, 190.&lt;/li&gt;&#xA;&lt;li&gt;Winning is indicated by adding 1000 to the number, so the winning&#xA;models will be 1010, 1020, &amp;hellip;, 1090.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Examples: when the model is 40, you see &amp;ldquo;PLAY 40&amp;rdquo;; when the model is&#xA;130, you see &amp;ldquo;LOSE 30&amp;rdquo;; when the model is 1070, you see &amp;ldquo;WIN 70&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prolog Docs</title>
      <link>https://wy-cs.info/ai/logic/20-prolog/90-docs/</link>
      <pubDate>Thu, 22 Feb 2024 16:47:34 -0600</pubDate>
      <guid>https://wy-cs.info/ai/logic/20-prolog/90-docs/</guid>
      <description>&lt;h2 id=&#34;header&#34;&gt;Header&lt;/h2&gt;&#xA;&lt;p&gt;The start of your file should at least contain:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-prolog&#34; data-lang=&#34;prolog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use_module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;clpfd&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)).&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;use_module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;clpb&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)).&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I also add the debug flag when writing my code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-prolog&#34; data-lang=&#34;prolog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:-&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;operators&#34;&gt;Operators&lt;/h2&gt;&#xA;&lt;p&gt;The FD library operators use the pound sign &lt;code&gt;#&lt;/code&gt;. You should prefer&#xA;them over the &amp;ldquo;vanilla&amp;rdquo; operators.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-prolog&#34; data-lang=&#34;prolog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;#\=&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;#&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;#&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;#&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;#=&amp;lt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;max&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;mod&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;rem&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;B&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;abs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Logical operations that work on booleans:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#\/       or (union)&#xA;#/\       and (intersection)&#xA;#\ A      not&#xA;A #\ B    exclusive or&#xA;#&amp;lt;==&amp;gt;     if and only if (equivalence)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;learning-prolog&#34;&gt;Learning Prolog&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://lpn.swi-prolog.org/lpnpage.php?pageid=online&#34;&gt;Learn Prolog Now!&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;The examples in the &lt;a href=&#34;&#34;&gt;clpfd documentation&lt;/a&gt; are great for logic&#xA;programming.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;Https://www.swi-prolog.org/pldoc/man?section=clpfd&#34;&gt;clpfd library&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Observed Errors</title>
      <link>https://wy-cs.info/ap-cs/haskell/code-world/04-further/lights-out/90-errors/</link>
      <pubDate>Thu, 08 Dec 2022 22:50:36 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/code-world/04-further/lights-out/90-errors/</guid>
      <description>&lt;p&gt;A catalog of mistakes seen while writing this project.&lt;/p&gt;&#xA;&lt;h2 id=&#34;quotient-of-doubles&#34;&gt;Quotient of Doubles&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;quot&lt;/code&gt; and &lt;code&gt;div&lt;/code&gt; functions only work on integers. That is, &lt;code&gt;quot 1.7 0.5&lt;/code&gt; does not give &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;rouding-gives-an-integer&#34;&gt;Rouding gives an Integer&lt;/h2&gt;&#xA;&lt;p&gt;The result of &lt;code&gt;round 1.7&lt;/code&gt; is the integer 2, not the double 2.0.&lt;/p&gt;&#xA;&lt;h2 id=&#34;recursive-rendering&#34;&gt;Recursive Rendering&lt;/h2&gt;&#xA;&lt;p&gt;Recursion in general can be a mess without an example to guide the coding.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;draw :: [Double] -&amp;gt; Picture&#xA;draw [] = []&#xA;draw (x:xs) = pictures [translated x 0 (circle 2.5) : draw xs ]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;clicked-point&#34;&gt;Clicked Point&lt;/h2&gt;&#xA;&lt;p&gt;Not returning the intended coordinates. No check-expects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gray Rectangles</title>
      <link>https://wy-cs.info/intermediate-cs/universe/gray-rect/</link>
      <pubDate>Tue, 17 May 2022 12:29:28 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/gray-rect/</guid>
      <description>&lt;p&gt;There is one colored rectangle in each window, and possibly many gray&#xA;rectangles.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Clicking moves the center of the colored rectangle to the mouse.&lt;/li&gt;&#xA;&lt;li&gt;Hitting the space bar projects the shadow of the colored rectangle&#xA;from the current window to gray rectangles in the other&#xA;windows. (Same center, width, and height; different color.)&lt;/li&gt;&#xA;&lt;li&gt;The shadow does not move when you click to move the colored&#xA;rectangle.&lt;/li&gt;&#xA;&lt;li&gt;Hitting space a second time replaces the old shadow of the colored&#xA;rectangle with a new one.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;understanding&#34;&gt;Understanding&lt;/h2&gt;&#xA;&lt;p&gt;There are check-expects for all of the behavior described above.&lt;/p&gt;</description>
    </item>
    <item>
      <title>09 Enhance</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/09-enhance/</link>
      <pubDate>Wed, 20 Apr 2022 17:34:44 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/09-enhance/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Now that you have a working basic program, here are modifications you&#xA;can make:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;World 3 refuses to change its color.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pick one world (by id number) to be the &amp;ldquo;random world&amp;rdquo;&#xA;(R-world). The R-world changes its color randomly when asked to&#xA;change. That is, no matter what message is sent to the R-world, it&#xA;changes to a random color. This is most interesting with 3 or more&#xA;worlds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DubTV</title>
      <link>https://wy-cs.info/ecs/scratch/variables-9a-dubtv/</link>
      <pubDate>Fri, 22 Feb 2019 09:59:06 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-9a-dubtv/</guid>
      <description>&lt;p&gt;You are in charge of making a show for DubTV.&lt;/p&gt;&#xA;&lt;p&gt;Sprites: main character, other character, camera, computer.&lt;/p&gt;&#xA;&lt;p&gt;Additional information: there is a &amp;ldquo;scene&amp;rdquo; area of screen to &amp;ldquo;film&amp;rdquo;. (Could be a&#xA;sprite.)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Get the camera sprite (touch it).&lt;/li&gt;&#xA;&lt;li&gt;Go to the &amp;ldquo;scene&amp;rdquo; and touch the other character. Hit &amp;ldquo;f&amp;rdquo; to film.&lt;/li&gt;&#xA;&lt;li&gt;You cannot film unless you are in the scene area.&lt;/li&gt;&#xA;&lt;li&gt;You must be touching the other character to film.&lt;/li&gt;&#xA;&lt;li&gt;Go to the computer to distribute the video.&lt;/li&gt;&#xA;&lt;li&gt;Computer says &amp;ldquo;You have no footage&amp;rdquo; if you have not filmed.&lt;/li&gt;&#xA;&lt;li&gt;Computer says &amp;ldquo;Uploading DubTV&amp;hellip;&amp;rdquo; and then five seconds later it&#xA;says &amp;ldquo;DubTV ready!&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Camera sprite disappears when you have it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When you are filming, use a diffent set of keys (wasd, arrows) to&#xA;control the other character. Write the motions &amp;ldquo;up&amp;rdquo; &amp;ldquo;down&amp;rdquo; &amp;ldquo;left&amp;rdquo;&#xA;&amp;ldquo;right&amp;rdquo; to a list.&lt;/li&gt;&#xA;&lt;li&gt;After DubTV is ready, you can go to a TV and touch it to &amp;ldquo;play&amp;rdquo; -&#xA;then the TV says the actions with a short delay between each one.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>8. Number Finale</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-finale/</link>
      <pubDate>Sun, 02 Dec 2018 23:37:17 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-finale/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;We are going to make this graph:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch08/number-finale/warmup-graph.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;The equation we are using is:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(define (func x)&#xA;  (* (- x 5)&#xA;     (+ x 2)&#xA;     (- x 7)))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The range of people coordinates we want to graph is:&#xA;$$-5 \le x \le 7 $$&#xA;$$-400 \le y \le 100 $$&lt;/p&gt;&#xA;&lt;p&gt;Your want to make the graph have dimensions 360x250 (in computer&#xA;coordinates).&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Numbers Quiz A</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/ch07-quiz-a/</link>
      <pubDate>Thu, 15 Nov 2018 22:38:57 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/ch07-quiz-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a function that picks a color that has a random amount of red,&#xA;either 50, 150, 250, and a random amount of green, either 100 or 200.&#xA;Use it to make six 50x50 squares next to each other.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Check if a random integer between 0 and 60 (inclusive) has a square root&#xA;between 3.5 and 7.5. Use &lt;code&gt;check-within&lt;/code&gt;. You can comment out your test&#xA;when you know it works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Resources</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-resources/</link>
      <pubDate>Wed, 16 May 2018 14:56:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-resources/</guid>
      <description>&lt;p&gt;This page contains only the bare-bones information.&lt;/p&gt;&#xA;&lt;!--&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&#xA;&#xA;    &lt;p&gt;Plain old attachments would go here.&lt;/p&gt;&#xA;&lt;pre&gt;&#xA;&lt;p&gt;&lt;/pre&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;--&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Generic server (see &lt;a href=&#34;u-resources.files/generic-server-v1.rkt&#34;&gt;attachment&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;(make-package model message)&lt;/code&gt; to update model and send a message.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A main function &lt;code&gt;start-big-bang&lt;/code&gt; to launch the windows.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  (define (start-big-bang my-name initial-model)&#xA;    (big-bang initial-model&#xA;      (on-draw draw-h)&#xA;      (on-key key-h)&#xA;      (on-receive receive-h)&#xA;&#xA;      (register LOCALHOST) ;; or ip address: &amp;quot;10.213.69.91&amp;quot;&#xA;      (name my-name)       ;; sets window name&#xA;      (close-on-stop true)))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;launch-many-worlds&lt;/code&gt; command to quickly and easily start several windows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Bloopers</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-feb/bloopers/</link>
      <pubDate>Fri, 09 Mar 2018 10:29:38 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-feb/bloopers/</guid>
      <description>&lt;p&gt;Here are two very tricky problems that people in our class had.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exponentiation&#34;&gt;Exponentiation&lt;/h2&gt;&#xA;&lt;p&gt;What should the output of &lt;code&gt;loop(5)&lt;/code&gt; be?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;public static void loop(int y)&#xA;{&#xA;    for (int k = 0; k &amp;lt; (y^2); k++) {&#xA;        System.out.println(k);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Explain:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;DemoBlooper.loop(5);&#xA;0 1 2 3 4 5 6 &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Uh-oh:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;DemoBlooper.loop(7);&#xA;0 1 2 3 4 &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll leave it a mystery for now. If you want the compiler to give you&#xA;a hint, remove the parentheses around &lt;code&gt;y^2&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Helpers</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/90-helpers/</link>
      <pubDate>Tue, 06 Mar 2018 10:30:29 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/90-helpers/</guid>
      <description>&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;count-div&lt;/code&gt;: number(k) number(n) -&amp;gt; number that gives&#xA;1 if k divides n and 0 otherwise.&lt;/p&gt;&#xA;&lt;h2 id=&#34;opener&#34;&gt;Opener&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;count-divisors&lt;/code&gt;: positive-integer(n) -&amp;gt; positive-integer. Count how&#xA;many integers 1,2,&amp;hellip;,n divide the number &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/ch22a/91-count-divisors/&#34;&gt;Count-divisors solution&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;number-theory&#34;&gt;Number Theory&lt;/h2&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;smallest-factor&lt;/code&gt;: positive-integer(n) -&amp;gt; positive-integer. Find the smallest divisor of &lt;code&gt;n&lt;/code&gt; that is greater than 1.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;is-prime?&lt;/code&gt;: positive-integer(n) -&amp;gt; boolean. True if &lt;code&gt;n&lt;/code&gt; is prime,&#xA;false otherwise.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;largest-prime-factor&lt;/code&gt;: positive-integer(n) -&amp;gt;&#xA;positive-integer. Find the largest prime factor of &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect Four Testcases</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/testcases/</link>
      <pubDate>Wed, 25 Oct 2017 22:16:15 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/testcases/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;connect4.zip&#34;&gt;testcases zip file&lt;/a&gt; contains all of the template files.&lt;/p&gt;&#xA;&lt;p&gt;You can also download them one by one:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;ConnectFour.hs&#34;&gt;Connect Four&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;BoardConvert.hs&#34;&gt;BoardConvert&lt;/a&gt;: Convert from a matrix representing&#xA;the board to a list of &lt;code&gt;Piece&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;TestConnectFour.hs&#34;&gt;TestConnectFour&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;UIConnectFour.hs&#34;&gt;User Interface for Connect Four&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Main.hs&#34;&gt;Main method in its own file&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It may help you to start from &lt;strong&gt;(FIXME) &lt;a href=&#34;https://repl.it/NP9L/1&#34;&gt;my repl.it workspace&lt;/a&gt;&lt;/strong&gt; with all of the&#xA;testing code already in it. Your code should go in &lt;code&gt;ConnectFour.hs&lt;/code&gt;. You may need&#xA;to edit some of the function names. The list of what they are supposed to be is&#xA;at the start.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 4 Summary</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-summary/</link>
      <pubDate>Tue, 19 Sep 2017 14:06:42 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-summary/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;patterns&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;guards&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;numword&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Negative&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Zero&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;otherwise&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Positive&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;where&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;h&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;constant&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;constant&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;let&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;yis65&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;parabola&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;parabola&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;65&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;case&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;numit&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;of&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Five&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Four&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Something else&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>22a. Helpers: Count Divisors</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/91-count-divisors/</link>
      <pubDate>Tue, 06 Mar 2018 10:37:37 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/91-count-divisors/</guid>
      <description>&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;count-div&lt;/code&gt;: number(k) number(n) -&amp;gt; number that gives&#xA;1 if k divides n and 0 otherwise.&lt;/p&gt;&#xA;&lt;h2 id=&#34;warmup-solution&#34;&gt;Warmup Solution&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define (count-div k n)&#xA;    (cond [(= 0 (remainder n k))&#xA;            1]&#xA;          [else&#xA;            0]&#xA;            &#xA; (check-expect (count-div 3 6) 1)&#xA; (check-expect (count-div 4 6) 0)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;count-divisors-example&#34;&gt;Count-divisors example&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt; (count-divisors 2) =&amp;gt; 1 + 1&#xA; (count-divisors 3) =&amp;gt; 1 + 0 + 1&#xA; (count-divisors 4) =&amp;gt; 1 + 1 + 0 + 1&#xA; (count-divisors 5) =&amp;gt; 1 + 0 + 0 + 0 + 1&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Notice that there is &lt;em&gt;not&lt;/em&gt; a pattern of repeating previously used results! See the longer list of factors to confirm:&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Practice 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/92-helpers-2/</link>
      <pubDate>Tue, 06 Mar 2018 20:37:55 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/92-helpers-2/</guid>
      <description>&lt;p&gt;Do at least the first three.&#xA;Please make sure to write at least three tests for each function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;is-in-word?&lt;/code&gt;: string(letter) string(word) -&amp;gt; boolean. True if the letter is in the word, false otherwise.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (is-in-word? &amp;quot;x&amp;quot; &amp;quot;explode&amp;quot;) true)&#xA; (check-expect (is-in-word? &amp;quot;s&amp;quot; &amp;quot;juliuc caecar&amp;quot; false)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;word-shrink&lt;/code&gt;: string(word) number(starting-size) -&amp;gt; image. Create a picture of the word in which each letter is four points smaller than the previous letter. Do not let the font size go below 5pt.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Self Quiz</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/93-self-quiz/</link>
      <pubDate>Fri, 09 Mar 2018 10:16:43 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/93-self-quiz/</guid>
      <description>&lt;p&gt;&lt;code&gt;draw-cats&lt;/code&gt;: string -&amp;gt; image&lt;/p&gt;&#xA;&lt;p&gt;Draw one cat for every time the word &amp;ldquo;cat&amp;rdquo; appears in the string.&lt;/p&gt;&#xA;   &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch22a/93-self-quiz/cat.png&#34;&gt;&lt;figcaption&gt;&#xA;         &lt;h4&gt;(draw-cats &amp;#34;nyan cat&amp;#34;)&lt;/h4&gt;&#xA;       &lt;/figcaption&gt;&#xA;   &lt;/figure&gt;&#xA;   &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch22a/93-self-quiz/catcat.png&#34;&gt;&lt;figcaption&gt;&#xA;         &lt;h4&gt;(draw-cats &amp;#34;cat dog cat&amp;#34;)&lt;/h4&gt;&#xA;       &lt;/figcaption&gt;&#xA;   &lt;/figure&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    I have had problems with tests failing even though the images are identical.&#xA;I found that scaling the image in Racket caused the problem.&#xA;Now I do not &lt;code&gt;scale&lt;/code&gt; the size of the images I use in my tests.&#xA;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Practice 4</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/94-rec-practice-4/</link>
      <pubDate>Mon, 12 Mar 2018 08:18:47 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/94-rec-practice-4/</guid>
      <description>&lt;p&gt;Classwork (20 min) and discussion (25 min).&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;zoo-1&lt;/code&gt;: string -&amp;gt; string. Change every occurrence of &amp;ldquo;penguin&amp;rdquo; to &amp;ldquo;penguins&amp;rdquo; and change every occurrence of &amp;ldquo;mouse&amp;rdquo; to &amp;ldquo;mice&amp;rdquo;. Leave everything else alone.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  (check-expect (zoo-1 &amp;quot;mouse&amp;quot;) &amp;quot;mice&amp;quot;)&#xA;  (check-expect (zoo-1 &amp;quot;xmouse&amp;quot;) &amp;quot;xmice&amp;quot;)&#xA;  (check-expect (zoo-1 &amp;quot;mousex&amp;quot;) &amp;quot;micex&amp;quot;)&#xA;  (check-expect (zoo-1 &amp;quot;mouse moose&amp;quot;) &amp;quot;mice moose&amp;quot;)&#xA;  (check-expect (zoo-1 &amp;quot;mouse mouse&amp;quot;) &amp;quot;mice mice&amp;quot;)&#xA;  (check-expect (zoo-1 &amp;quot;penguin penguins&amp;quot;) &amp;quot;penguins penguinss&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;review-homework&#34;&gt;Review Homework&lt;/h2&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;sum5&lt;/code&gt;: number(n) -&amp;gt; number. Find the sum of the first &lt;code&gt;n&lt;/code&gt; fifth powers, starting&#xA;with 1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Memorization Quiz 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/95-0-quiz/</link>
      <pubDate>Fri, 24 Feb 2023 03:52:57 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/95-0-quiz/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;The &lt;code&gt;fib&lt;/code&gt; function makes Fibonacci numbers starting with&#xA;&lt;code&gt;fib(0)=1&lt;/code&gt;. Write it.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;num-digits&lt;/code&gt; function takes in a positive integer and returns&#xA;the number of digits. For example, &lt;code&gt;(num-digits 5031)&lt;/code&gt;&#xA;gives 4. Write this function. Edit to remove any unnecessary code.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Interviews</title>
      <link>https://wy-cs.info/docs/interview/</link>
      <pubDate>Thu, 12 Sep 2019 22:11:32 -0500</pubDate>
      <guid>https://wy-cs.info/docs/interview/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Wanted&lt;/strong&gt;: A snapshot of one of the parts of your career that you&#xA;find most interesting, with enough details to make it feel &amp;ldquo;real&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Who?&lt;/strong&gt; Anyone whose work involves or &lt;em&gt;could involve&lt;/em&gt; automation or&#xA;computer assistance.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; Students benefit from a broad idea of possible career paths,&#xA;especially careers that are not &amp;ldquo;popular&amp;rdquo; in high school. They need to&#xA;hear what a career is like so they begin to consider it a real option.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Mini-Quiz</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/95-1-quiz/</link>
      <pubDate>Wed, 27 Feb 2019 16:50:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/95-1-quiz/</guid>
      <description>&lt;h1 id=&#34;ex-it&#34;&gt;&lt;code&gt;ex-it&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;ex-it: string -&amp;gt; string&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Change every &amp;ldquo;x&amp;rdquo; to a &amp;ldquo;y&amp;rdquo;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(check-expect (ex-it &amp;quot;tresxxx&amp;quot;) &amp;quot;tres&amp;quot;)&#xA;(check-expect (ex-it &amp;quot;zyzzyva&amp;quot;) &amp;quot;zyzzyva&amp;quot;) ; no change&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;unlucky&#34;&gt;&lt;code&gt;unlucky&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;unlucky: number -&amp;gt; number&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;How many multiples of 13 appear in the digits of n? (Just consider&#xA;two digit multiples.)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(check-expect (unlucky 131) 1)&#xA;(check-expect (unlucky 139) 2)&#xA;(check-expect (unlucky 1263) 1)&#xA;(check-expect (unlucky 1326) 2)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Quiz 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/95-rec-quiz-2/</link>
      <pubDate>Tue, 13 Mar 2018 09:44:07 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/95-rec-quiz-2/</guid>
      <description>&lt;p&gt;An ice cream cone can have strawberry, vanilla, or chocolate ice cream scoops.&#xA;The number of scoops is unlimited, specified by the string of flavors that is input.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ice-cream: string -&amp;gt; image&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch22a/95-rec-quiz-2/ice-cream.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;(ice-cream &amp;#34;chocolate vanilla strawberry strawberry chocolate&amp;#34;)&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;detailed-instructions&#34;&gt;Detailed Instructions&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Build up to all of the flavors by first picking a single flavor and&#xA;creating a cone for only that flavor.&lt;/li&gt;&#xA;&lt;li&gt;Write checks as we have discussed in class. It is worth your time!&lt;/li&gt;&#xA;&lt;li&gt;Permitted resources: Picturing Programs book and Racket Help Desk. No old homework or notes.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;grading&#34;&gt;Grading&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Flawless single flavor cone = 70%&lt;/li&gt;&#xA;&lt;li&gt;Good tests = +10%&lt;/li&gt;&#xA;&lt;li&gt;Multi-flavor cone, no problems: 90%.&lt;/li&gt;&#xA;&lt;li&gt;Penalty for untested code, or errors when tested -5.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;faq&#34;&gt;F.A.Q.&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You may write any helper functions that you want.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Practice 5</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/96-rec-practice-5/</link>
      <pubDate>Tue, 26 Feb 2019 17:17:20 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/96-rec-practice-5/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;count-w&lt;/code&gt;) Find how many &amp;ldquo;w&amp;rdquo; letters there are in a&#xA;word. Signature: &lt;code&gt;count-w: string -&amp;gt; number&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;p7&lt;/code&gt;) Find the smallest power of 7 that is at least a given&#xA;number. (So find the smallest $k$ so that $7^k \ge \text{number}$.)&#xA;Signature: &lt;code&gt;p7: number -&amp;gt; number&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (p7 1) 0)&#xA; (check-expect (p7 7) 1)&#xA; (check-expect (p7 8) 2)&#xA; (check-expect (p7 49) 2)&#xA; (check-expect (p7 50) 3)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;eyeball&lt;/code&gt;) Find how many pairs of consecutive zeros there are in a&#xA;number. Signature: &lt;code&gt;eyeball: number -&amp;gt; number&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Recursion Practice 6</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/97-rec-practice-6/</link>
      <pubDate>Thu, 28 Feb 2019 14:01:58 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/97-rec-practice-6/</guid>
      <description>&lt;h1 id=&#34;r-ss&#34;&gt;&lt;code&gt;r-ss?&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;r-ss?: string(word) -&amp;gt; boolean&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;True if the word contains either &amp;ldquo;r&amp;rdquo; or &amp;ldquo;ss&amp;rdquo;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (check-expect (r-ss? &amp;quot;car&amp;quot;) true)&#xA;    (check-expect (r-ss? &amp;quot;ssnake&amp;quot;) true)&#xA;    (check-expect (r-ss? &amp;quot;wrassle&amp;quot;) true)&#xA;    (check-expect (r-ss? &amp;quot;confabulous&amp;quot;) false)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;no-7&#34;&gt;&lt;code&gt;no-7&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;no-7: number(n) -&amp;gt; number&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Remove the 7s from a number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (check-expect (no-7 127347) 1234)&#xA;    (check-expect (no-7      7)    0)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;abfx&#34;&gt;&lt;code&gt;abfx&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;abfx: string -&amp;gt; string&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Change all but the first &amp;ldquo;x&amp;rdquo; to a &amp;ldquo;y&amp;rdquo;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (check-expect (abfx &amp;quot;x&amp;quot;) &amp;quot;x&amp;quot;)&#xA;    (check-expect (abfx &amp;quot;xx&amp;quot;) &amp;quot;xy&amp;quot;)&#xA;    (check-expect (abfx &amp;quot;xxx&amp;quot;) &amp;quot;xyy&amp;quot;)&#xA;    (check-expect (abfx &amp;quot;zxyxx&amp;quot;) &amp;quot;zxyyy&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Quiz 3 (Hard)</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/98-quiz-3-hard/</link>
      <pubDate>Fri, 01 Mar 2019 14:27:16 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/98-quiz-3-hard/</guid>
      <description>&lt;p&gt;Write in Racket. You may use the Picturing Programs book and the&#xA;Racket Help Desk. You may not refer to old code except your&#xA;&lt;code&gt;posn-util.rkt&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;english-q: string -&amp;gt; boolean&lt;/code&gt;: True if every &amp;ldquo;q&amp;rdquo; in the word is&#xA;followed by a &amp;ldquo;u&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ternary-2: number -&amp;gt; number&lt;/code&gt;: Find the number of 2s in the base 3&#xA;representation of the number. You can look up what base 3 is. Write&#xA;your own base 3 converter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quiz 4 (Medium)</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/99-quiz-4-medium/</link>
      <pubDate>Mon, 04 Mar 2019 07:34:29 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/99-quiz-4-medium/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ssm: number(start) number(end) -&amp;gt; number&lt;/code&gt;. Find the sum of all of&#xA;the square roots of odd numbers between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;&#xA;(inclusive). Except skip taking the square roots of any perfect&#xA;squares like 49&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-within (ssm 21 27) &#xA;               (+ (sqrt 21) (sqrt 23) (sqrt 27)) ; skip 25&#xA;               0.01)&#xA;&#xA; (check-within (ssm 7 12)&#xA;               (+ (sqrt 7) (sqrt 11)) ; skip 9 - perfect square&#xA;                 0.01)&#xA;&#xA; (check-within (ssm 101 1001) 10008.2 0.1)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;pairorder: string -&amp;gt; string&lt;/code&gt; function takes a string and puts&#xA;each adjacent pair of letters in alphabetical order, beginning at&#xA;the left and working to the right &lt;em&gt;one&lt;/em&gt; letter at a time. This&#xA;means that a &amp;ldquo;z&amp;rdquo; could potentially move several times in one call&#xA;to &lt;code&gt;pairorder&lt;/code&gt;: &amp;ldquo;zba&amp;rdquo; when processing the first pair would produce&#xA;&amp;ldquo;bza&amp;rdquo; then when processing the second pair would produce &amp;ldquo;baz&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22. Additional Resources</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/list-resources/</link>
      <pubDate>Fri, 23 Feb 2018 11:13:06 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/list-resources/</guid>
      <description>&lt;p&gt;In addition to Chapters 22-23 in Picturing Programs, students in the past have found these resource useful:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://htdp.org/2018-01-06/Book/part_two.html&#34;&gt;How to Design Programs, Part II&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.racket-lang.org/guide/pairs.html&#34;&gt;Pairs and Lists&lt;/a&gt; in the &lt;a href=&#34;https://docs.racket-lang.org/guide/index.html?q=Racket%20guide&#34;&gt;Racket Guide&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Graph in Python</title>
      <link>https://wy-cs.info/ai/graph/graph-class-py/</link>
      <pubDate>Tue, 09 Sep 2025 14:40:18 -0500</pubDate>
      <guid>https://wy-cs.info/ai/graph/graph-class-py/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;constructor&#34;&gt;Constructor&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;Graph&lt;/code&gt; class constructor should take in:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;nvertices: the number of vertices, defaults to &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;edges: a &lt;code&gt;defaultdict(set)&lt;/code&gt; mapping a vertex (start: int) to set of&#xA;vertices ({int}), indicating there is an edge from start to each&#xA;vertex in the set.&lt;/li&gt;&#xA;&lt;li&gt;directed: a boolean, defaults to &lt;code&gt;False&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;weights: a dictionary mapping edges &lt;code&gt;(Vertex, Vertex)&lt;/code&gt; to integers&#xA;(&lt;code&gt;int&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If the number of vertices is not specified, the constructor should&#xA;call a helper function &lt;code&gt;update_nvertices()&lt;/code&gt; to deduce the number of vertices from the&#xA;adjacency list of edges.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10 Questions I</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/10-questions/</link>
      <pubDate>Fri, 04 Apr 2025 09:55:52 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-walkthrough/10-questions/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What error message do you get when your &lt;code&gt;ic-msg.rkt&lt;/code&gt; file is not in&#xA;the same folder as your main Racket file?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;If you download the &lt;a href=&#34;ic-msg.rkt&#34;&gt;ic-msg.rkt&lt;/a&gt; file three times, do&#xA;you see any messages from your browser? Do you end up with one file&#xA;or three? How did you find out?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ideas</title>
      <link>https://wy-cs.info/nand/ch09/ideas/</link>
      <pubDate>Wed, 26 Feb 2025 18:16:18 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch09/ideas/</guid>
      <description>&lt;p&gt;You can use ideas from Intermediate computer science.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rectangle that grows every 0.2 seconds. Hit a key to reset the size.&lt;/li&gt;&#xA;&lt;li&gt;Explore the difference between redrawing the whole screen and&#xA;erasing and redrawing part of it.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Parcels Videos</title>
      <link>https://wy-cs.info/intermediate-cs/ch22b/parcels/videos/</link>
      <pubDate>Wed, 28 Feb 2024 09:43:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22b/parcels/videos/</guid>
      <description>&lt;p&gt;There are three videos demonstrating versions of this program,&#xA;beginning with simple and getting more and more complex.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/WTXhR63evZs?feature=shared&#34;&gt;Parcels I&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/XXdvxcxCSaQ?feature=shared&#34;&gt;Parcels II&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/I4p0YrfHZp4?feature=shared&#34;&gt;Parcels III&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Alpha-Beta Resources</title>
      <link>https://wy-cs.info/ai/alpha-beta/resources/</link>
      <pubDate>Thu, 18 Jan 2024 09:06:50 -0600</pubDate>
      <guid>https://wy-cs.info/ai/alpha-beta/resources/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Animated &lt;a href=&#34;https://aykamko.github.io/abTreePractice/&#34;&gt;demonstration of alpha-beta&#xA;pruning&lt;/a&gt; (app)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Videos&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=l-hh51ncgDI&amp;amp;authuser=0&#34;&gt;Algorithms Explained: minimax and alpha-beta pruning&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_i-lZcbWkps&#34;&gt;Detailed example explained on paper&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;MIT Lecture &lt;a href=&#34;https://www.youtube.com/watch?v=STjW3eH0Cik&#34;&gt;Games, Minimax,&#xA;Alpha-Beta&lt;/a&gt;, Professor&#xA;Winston, 48 minutes. Interesting details even for someone who knows&#xA;the subject.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;MIT &lt;a href=&#34;https://ocw.mit.edu/courses/6-034-artificial-intelligence-fall-2010/resources/mega-recitation-3-games-minimax-alpha-beta/?authuser=0&#34;&gt;Minimax Recitation&#xA;Section&lt;/a&gt;. Again,&#xA;very good, details and also a Q&amp;amp;A.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Sample Design Process</title>
      <link>https://wy-cs.info/intermediate-cs/ch04/under/sample-design-process/</link>
      <pubDate>Tue, 03 Oct 2023 21:42:30 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch04/under/sample-design-process/</guid>
      <description>&lt;p&gt;Source code: &lt;a href=&#34;shape-stack.rkt&#34;&gt;racket&lt;/a&gt; or &lt;a href=&#34;shape-stack.txt&#34;&gt;text&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This whole page courtesy of Mr. Underriner in 2023.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problem-1-shape-stack&#34;&gt;Problem 1: shape-stack&lt;/h2&gt;&#xA;&lt;h4 id=&#34;recipe-part-1a-a-purpose-statement&#34;&gt;Recipe Part 1a: a purpose statement&lt;/h4&gt;&#xA;&lt;p&gt;Shape-stack is a function that produces an image of a triangle stacked&#xA;on top of circle, stacked on top of a square.  Shape-stack places each&#xA;shape inside of shape it is stacked on top of so that everything fits&#xA;within the square at the base.  The function takes in 4 inputs; 3 for&#xA;the color of each shape, and 1 for the size of the shapes.  The&#xA;function works by using overlay to place the shapes on top of each&#xA;other, and scale each image to appropriately fit within the image it&#xA;is stacked on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hints 01</title>
      <link>https://wy-cs.info/ap-cs/solving/pro-com-3/hints/</link>
      <pubDate>Mon, 10 Apr 2023 15:03:28 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/pro-com-3/hints/</guid>
      <description>&lt;h2 id=&#34;what-is-stdin-and-stdout&#34;&gt;What is STDIN and STDOUT?&lt;/h2&gt;&#xA;&lt;p&gt;In Java this is &lt;code&gt;System.in&lt;/code&gt; and &lt;code&gt;System.out&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;perfect-travelers-1&#34;&gt;Perfect Travelers 1&lt;/h2&gt;&#xA;&lt;p&gt;Searching all of the possibilities can be slow&#xA;when there are a lot of them. Divisors come in pairs.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;A&lt;/th&gt;&#xA;          &lt;th&gt;B&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;36&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;9&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;pipe-pals&#34;&gt;Pipe Pals&lt;/h2&gt;&#xA;&lt;p&gt;Many causes of problems here.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Get Java to tell you the character codes.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  char c = &#39;A&#39;;&#xA;  int cn = (int) c;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Scanner will read a blank string if you use &lt;code&gt;nextLine()&lt;/code&gt; after the&#xA;last integer on a line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Info: Signature Story</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-sig/</link>
      <pubDate>Tue, 12 Oct 2021 13:49:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-sig/</guid>
      <description>&lt;p&gt;Racket requires functions with specific signatures for the handlers in&#xA;a big bang animation. This page motivates that with a story.&lt;/p&gt;&#xA;&lt;h2 id=&#34;story&#34;&gt;Story&lt;/h2&gt;&#xA;&lt;p&gt;Once upon a time, every teacher in my school required students in&#xA;their class to make &amp;ldquo;name tents&amp;rdquo;. This was a great idea, but every&#xA;teacher had different requirements.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First period wanted your preferred first name, written large on the&#xA;name tent.&lt;/li&gt;&#xA;&lt;li&gt;Second period wanted a preferred name and a last initial.&lt;/li&gt;&#xA;&lt;li&gt;Third period wanted a preferred name (large), and also your grade written in the&#xA;lower right.&lt;/li&gt;&#xA;&lt;li&gt;Fourth period wanted a preferred name (large), and a stripe made of&#xA;your favorite color drawn along the left side.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Some students found themselves carrying around four different name&#xA;tents, each one different, to satisfy each class&amp;rsquo;s requirements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Overview</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/100-overview/</link>
      <pubDate>Wed, 26 May 2021 09:47:21 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/100-overview/</guid>
      <description>&lt;p&gt;The game of &lt;a href=&#34;https://en.wikipedia.org/wiki/Reversi&#34;&gt;Reversi&lt;/a&gt;, also&#xA;known as Othello, is played with reversible white/black tokens on an&#xA;8x8 board.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/projects/reversi/100-overview/reversi-start.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Read the &lt;a href=&#34;https://en.wikipedia.org/wiki/Reversi#Rules&#34;&gt;rules on&#xA;Wikipedia&lt;/a&gt;. A play must&#xA;bracket and flip at least one of the opponent&amp;rsquo;s pieces.&lt;/p&gt;&#xA;&lt;p&gt;You can play &lt;a href=&#34;https://cardgames.io/reversi/&#34;&gt;reversi online&lt;/a&gt; if you&#xA;need to get familiar with the game. Don&amp;rsquo;t waste a lot of time on.&#xA;Once you have a working two-player reversi, then you can start&#xA;thinking about a computer player.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Standard Header</title>
      <link>https://wy-cs.info/ml/rmisc/stdinc/</link>
      <pubDate>Wed, 30 Sep 2020 13:29:57 -0500</pubDate>
      <guid>https://wy-cs.info/ml/rmisc/stdinc/</guid>
      <description>&lt;p&gt;There are two: one for Colaboratory and one for local Jupyter&#xA;notebooks.&lt;/p&gt;&#xA;&lt;h2 id=&#34;colaboratory&#34;&gt;Colaboratory&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;install.packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;farver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;nycflights13&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tidyverse&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;repr.plot.width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;repr.plot.height&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme_update&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;element_text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jupyter-notebook&#34;&gt;Jupyter Notebook&lt;/h2&gt;&#xA;&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tidyverse&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;repr.plot.width&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;repr.plot.height&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;switch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sys.info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;sysname&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;]]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Linux&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;theme_update&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;element_text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;family&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Arial&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mac&#34;&gt;Mac&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[update]&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Snake Functions</title>
      <link>https://wy-cs.info/intermediate-cs/projects/snake/100-snake/</link>
      <pubDate>Mon, 25 Mar 2019 15:44:03 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/snake/100-snake/</guid>
      <description>&lt;h2 id=&#34;draw-handler&#34;&gt;Draw-handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Draw-apple: posn image(background) -&amp;gt; image&lt;/li&gt;&#xA;&lt;li&gt;Draw-snake: list-of-posns image(background) -&amp;gt; image&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;helper-functions&#34;&gt;Helper Functions&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hit-apple? posn(snake-head) posn(apple) -&amp;gt; boolean&lt;/li&gt;&#xA;&lt;li&gt;Hit-self?: list-of-posns(body) -&amp;gt; boolean&lt;/li&gt;&#xA;&lt;li&gt;Hit-wall?: posn(snake-head) -&amp;gt; boolean&lt;/li&gt;&#xA;&lt;li&gt;New-head-position: posn(snake-head) posn(direction) -&amp;gt; posn&lt;/li&gt;&#xA;&lt;li&gt;Update-snake: list-of-posns(body) posn(direction) -&amp;gt; list-of-posns.&#xA;Change the list of posns so the snake moves. Add the direction posn to the first posn in the body. Put that result in front of a list made by dropping the last posn from the list of posns.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tick-handler&#34;&gt;Tick handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tick-apple: model -&amp;gt; model.&#xA;Make the apple vanish/move and snake grow longer when it hits the apple.&lt;/li&gt;&#xA;&lt;li&gt;Tick-snake: model -&amp;gt; model.&#xA;Update snake position.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;key-handler&#34;&gt;Key handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Key-handler: model key -&amp;gt; model.&#xA;Straightforward. It is good to add a feature so you can&amp;rsquo;t go back on yourself.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;update-snake&#34;&gt;Update-snake&lt;/h2&gt;&#xA;&lt;p&gt;The snake appears to move by removing the last body segment and adding&#xA;a new segment in the correct location for the head. You should do this&#xA;in two separate functions before putting it together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blueberry Pancakes</title>
      <link>https://wy-cs.info/ecs/scratch/variables-a-pancake/</link>
      <pubDate>Mon, 25 Feb 2019 13:47:41 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-a-pancake/</guid>
      <description>&lt;p&gt;There is a container of pancake batter, a bowl of blueberries, and a&#xA;stove.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Touching batter or blueberries picks them up.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Touching the stove tries to cook.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When you have batter but no blueberries, you make plain&#xA;pancakes.&lt;/li&gt;&#xA;&lt;li&gt;When you have batter and blueberries, you make blueberry&#xA;pancakes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pancakes are done in two seconds.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Eat by clicking.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Track the number of pancakes &amp;amp; blueberry pancakes eaten.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;optional-features&#34;&gt;Optional features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Burns if left on the stove for two long.&lt;/li&gt;&#xA;&lt;li&gt;Pancakes need to be flipped before they are done.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Abstract Classes</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/abstract-classes/</link>
      <pubDate>Wed, 13 Feb 2019 09:20:55 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/abstract-classes/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;AbstractCollection&lt;/li&gt;&#xA;&lt;li&gt;JComponent graphical user interface component&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;example-abstract-collections&#34;&gt;Example: Abstract Collections&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://hg.openjdk.java.net/jdk8u/jdk8u-dev/jdk/file/c5d02f908fb2/src/share/classes/java/util/AbstractCollection.java&#34;&gt;AbstractCollection&lt;/a&gt;&#xA;is one of the Java utility classes. Its purpose is to remember items,&#xA;so you can add or delete items from the collection. One example of a&#xA;subclass would be &lt;code&gt;ArrayList&lt;/code&gt;, but there are others like&#xA;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html&#34;&gt;HashSet&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Some of the methods it has are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;isEmpty()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The &lt;code&gt;AbstractCollection&lt;/code&gt; is &amp;ldquo;abstract&amp;rdquo; because it does not specify a&#xA;way of remember items. However, once you know the number of items, it&#xA;is easy to determine if the collection is empty - it has zero&#xA;items. That means some of the code for &lt;code&gt;AbstractCollection&lt;/code&gt; looks like&#xA;this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Letters of Recommendation</title>
      <link>https://wy-cs.info/docs/letters-of-recommendation/</link>
      <pubDate>Mon, 08 Oct 2018 10:01:57 -0500</pubDate>
      <guid>https://wy-cs.info/docs/letters-of-recommendation/</guid>
      <description>&lt;p&gt;The most important contribution I can make to your application is&#xA;concrete evidence of some of the claims you make about yourself. I can&#xA;also address things that are not visible in your application (e.g.,&#xA;integrity, grit) and things that you cannot bring up yourself (e.g.,&#xA;poor grade in another class due to irresponsible teaching).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tell me about something you worked hard at.&lt;/li&gt;&#xA;&lt;li&gt;What project did you do (in my class) that you are most proud of?&#xA;(Any similar accomplishments ok.)&lt;/li&gt;&#xA;&lt;li&gt;What topics did you find difficult to understand, and what did you&#xA;do about it?&lt;/li&gt;&#xA;&lt;li&gt;Big projects: usually someone I am writing for has completed some&#xA;kind of larger project, either in my class or outside. Tell me about&#xA;at least one.&lt;/li&gt;&#xA;&lt;li&gt;How have you grown over the years that I have known you?&lt;/li&gt;&#xA;&lt;li&gt;What has made you successful?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It is important that I give specific examples to back up general&#xA;assertion that I make. You are much more likely to remember particular&#xA;things that you have done than I am. Please help me remember when you&#xA;answer these questions!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch01.QuizA</title>
      <link>https://wy-cs.info/intermediate-cs/ch01/ch01quiza/</link>
      <pubDate>Tue, 11 Sep 2018 07:58:13 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch01/ch01quiza/</guid>
      <description>&lt;h2 id=&#34;base-images&#34;&gt;Base images&lt;/h2&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch01/ch01quiza/w.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;&lt;img src=&#34;bird.png&#34; alt=&#34;Bird&#34; title=&#34;Bird&#34;&gt;&#xA;&lt;img src=&#34;sparkle.png&#34; alt=&#34;Sparkle&#34; title=&#34;Sparkle&#34;&gt;&#xA;&lt;img src=&#34;wallpaper-small.png&#34; alt=&#34;Background&#34; title=&#34;Rocky Mountain National Park&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;make-these-images&#34;&gt;Make these images&lt;/h2&gt;&#xA;&lt;p&gt;You do not need to include the box or the title.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Image one. (&lt;a href=&#34;goal-1.png&#34;&gt;Large version&lt;/a&gt;.)&#xA;&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 210px&#34;&gt;&#xA;&lt;img class=&#34;card-img-top&#34; src=&#34;https://wy-cs.info/intermediate-cs/ch01/ch01quiza/goal-1_hu_199dfe20057fab9d.png&#34; width=&#34;200&#34; height=&#34;144&#34;&gt;&#xA;&lt;figcaption class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;&#xA;&lt;p class=&#34;card-text&#34;&gt;&#xA;&#xA;&#xA;Four cursive letter Ws.&#xA;&#xA;&lt;/p&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Image two: note repeated mountain theme. (&lt;a href=&#34;goal-2.png&#34;&gt;Large version&lt;/a&gt;.)&#xA;&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 260px&#34;&gt;&#xA;&lt;img class=&#34;card-img-top&#34; src=&#34;https://wy-cs.info/intermediate-cs/ch01/ch01quiza/goal-2_hu_dea24a911948a0ab.png&#34; width=&#34;250&#34; height=&#34;600&#34;&gt;&#xA;&lt;figcaption class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;&#xA;&lt;p class=&#34;card-text&#34;&gt;&#xA;&#xA;&#xA;Mountain, bird, and necklace.&#xA;&#xA;&lt;/p&gt;&#xA;&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Scratch Teacher Resources</title>
      <link>https://wy-cs.info/ecs/drive-ecs/</link>
      <pubDate>Fri, 01 Dec 2017 23:01:28 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/drive-ecs/</guid>
      <description>&lt;p&gt;Resources (all are Google Drive shared folders):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1-g11Yuord_sv7-yIgrbaNRBUipKovFdo?usp=sharing&#34;&gt;Introductory materials&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1TxHCm9RrvCj7loU3kj3dMLDLxX3M2YTa?usp=sharing&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1LZWUusz3v3hVnPAF6Yjxrcx0iuiJtTLA?usp=sharing&#34;&gt;Lists&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There are quizzes as well; email me for access if you are an instructor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Slides: Max and min</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/maxmin/</link>
      <pubDate>Wed, 18 Oct 2017 14:28:44 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/maxmin/</guid>
      <description>&lt;h1 id=&#34;maximum-minimum-random&#34;&gt;Maximum, Minimum, Random&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;make-a-table&#34;&gt;Make a Table&lt;/h2&gt;&#xA;&lt;p&gt;Max = greatest.&#xA;Min = least.&#xA;Abs = absolute value.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;x&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(min x 10)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(max x 10)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(abs x)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;hellip;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Include x = 8, 13, 18 as well.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;which-keeps-numbers-small&#34;&gt;Which keeps numbers small?&lt;/h1&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;x&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(min x 10)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(max x 10)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;(abs x)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-15&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;15&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;-5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;13&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;13&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;13&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;18&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;18&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;18&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;use-check-expect&#34;&gt;Use Check-expect&lt;/h1&gt;&#xA;&lt;p&gt;Always write check-expects when keeping numbers small or large. It is very easy to have mistakes in this kind of code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect Four Spoilers</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/spoilers/</link>
      <pubDate>Fri, 06 Oct 2017 22:31:43 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/spoilers/</guid>
      <description>&lt;p&gt;&lt;strong&gt;These spoilers are obsolete.&lt;/strong&gt; You should be representing the board&#xA;as a list of pieces. Detecting a win should have mostly been part of a&#xA;warm-up in class.&lt;/p&gt;&#xA;&lt;p&gt;Two problems with connect four: changing an entry in a matrix ([[Int]]) and&#xA;seeing if there is a win.&lt;/p&gt;&#xA;&lt;h2 id=&#34;changing-entries-in-the-board&#34;&gt;Changing entries in the board&lt;/h2&gt;&#xA;&lt;p&gt;The biggest problem with the representation of the board as &lt;code&gt;[[Int]]&lt;/code&gt;&#xA;is that it is really hard to change the entries. If you use&#xA;[((Int,Int),Player)] then it&amp;rsquo;s lots easier to make moves.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 2 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/ch02-reading-guide/</link>
      <pubDate>Sat, 09 Sep 2017 15:57:47 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/ch02-reading-guide/</guid>
      <description>&lt;h1 id=&#34;haskell-starting-out-questions&#34;&gt;Haskell Starting Out Questions&lt;/h1&gt;&#xA;&lt;h2 id=&#34;a-sections-2123&#34;&gt;A. Sections 2.1&amp;ndash;2.3&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;There is an annoyance with negative numbers that is mentioned.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is the correct way to write five times negative three in Haskell?&lt;/li&gt;&#xA;&lt;li&gt;What is a wrong way to do the same thing?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Logical operations are basic building blocks of programs. How do you write:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;and&lt;/li&gt;&#xA;&lt;li&gt;or&lt;/li&gt;&#xA;&lt;li&gt;not&lt;/li&gt;&#xA;&lt;li&gt;equals&lt;/li&gt;&#xA;&lt;li&gt;not equals&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Haskell follows the normal order of operations from mathematics. However, in math functions must be written &lt;code&gt;f(x)&lt;/code&gt; with parentheses, whereas in Haskell functions can be written &lt;code&gt;f x&lt;/code&gt; without parentheses. This means we need to fit functions into the order of operations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Info: Check-Expects</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-check/</link>
      <pubDate>Tue, 12 Oct 2021 17:50:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-check/</guid>
      <description>&lt;h2 id=&#34;importance-of-checks&#34;&gt;Importance of Checks&lt;/h2&gt;&#xA;&lt;p&gt;Good check-expects give you a road map to write your&#xA;function. Check-expects should be correct based on the &lt;em&gt;purpose&lt;/em&gt; of&#xA;your function, not its current behavior.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A working function should&#xA;pass all of its check-expects.&lt;/li&gt;&#xA;&lt;li&gt;A function that does not do&#xA;what it is supposed to do should fail some check-expect.&lt;/li&gt;&#xA;&lt;li&gt;A function that sometimes gives the right answer and sometimes gives&#xA;the wrong answer should pass some check-expects but not all of them.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The idea of check-expects is important because when you are working&#xA;with more complex and possibly buggy functions (later in the course),&#xA;the specification (&amp;ldquo;check-expect&amp;rdquo;) can be written &lt;em&gt;first&lt;/em&gt;, then you&#xA;can test to see your progress in completing the goals you set&#xA;(so it is not all or nothing).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 01</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-01/</link>
      <pubDate>Mon, 23 Sep 2019 16:28:54 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-01/</guid>
      <description>&lt;p&gt;Design process:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;examples which turn into checkExpects&lt;/li&gt;&#xA;&lt;li&gt;signatures&lt;/li&gt;&#xA;&lt;li&gt;break down into simple pieces&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The checks that you write should go from simple to complicated, giving&#xA;you a road map for how to build the function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ct&lt;/code&gt;: Convert a list of base 2 digits into an integer.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; 46 == ct [1,0,1,1,1,0] &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;tobin&lt;/code&gt;: Convert an integer into a list of base 2 digits.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; [1,0,1,1,1,0] == tobin 46&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 02</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-02/</link>
      <pubDate>Tue, 24 Sep 2019 15:16:52 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-02/</guid>
      <description>&lt;p&gt;Note: in the list of digits, we will make the smallest place value&#xA;come first. In &lt;code&gt;[9,0,5]&lt;/code&gt;, the ones digit is &lt;code&gt;9&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;hd&lt;/code&gt;) Write a helper function take in a single integer between 0&#xA;and 15 (inclusive) and return a string containing the corresponding&#xA;hexadecimal digit. The digits are 10=&amp;ldquo;A&amp;rdquo;, 11=&amp;ldquo;B&amp;rdquo;, etc.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; &amp;quot;B&amp;quot; == hd 11&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;hexShow&lt;/code&gt;) Take in a list of values of hexadecimal digits (so&#xA;integers, like &lt;code&gt;[10,11]&lt;/code&gt;. Output a string with the hex number&#xA;&amp;ldquo;AB&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang diagram</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-diagram/</link>
      <pubDate>Wed, 26 Oct 2022 21:38:00 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-diagram/</guid>
      <description>&lt;p&gt;The model/drawing diagram shows a sequence of current models in the&#xA;top row. Each horizontal arrow represents a handler (tick, key, or&#xA;mouse) running using the figure to the left as the old model. Each&#xA;vertical arrow represents a draw handler running.&lt;/p&gt;&#xA;&lt;p&gt;Here is an example model/drawing diagram.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch06/bigbang-diagram/model-drawing-diagram.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;The code that would produce the diagram above is:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;beside&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dh-top-right&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay/align&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;right&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;empty-scene&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;light orange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;to-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dh-top-right&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-tick&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;push&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 03</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-03/</link>
      <pubDate>Wed, 25 Sep 2019 15:27:40 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-03/</guid>
      <description>&lt;p&gt;Old school multiplication problems have work that looks like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  123&#xA; x 45&#xA; ----&#xA;  615&#xA; 4920&#xA; ----&#xA; 5535&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The top two numbers are the inputs, and the bottom number is the&#xA;output, which is easy to get the computer to find. In between are the&#xA;partial products.&lt;/p&gt;&#xA;&lt;p&gt;You are writing a &lt;code&gt;partialProducts&lt;/code&gt; function that produces a list of&#xA;partial products.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;partialProducts 123 45 == [615, 4920]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If you get this function to work, then consider how to make a partial&#xA;products function that works in different bases (showing everything in&#xA;the base you are working on).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 04</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-04/</link>
      <pubDate>Thu, 26 Sep 2019 20:12:19 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-04/</guid>
      <description>&lt;p&gt;The number reverse function, &lt;code&gt;nr: Int -&amp;gt; Int&lt;/code&gt; reverses the order of&#xA;the base 10 digits of a number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;nr 60201 == 10206&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Helper functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;digits 60201 == [6,0,2,0,1]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;undigits [1,0,2,0,6] == 10206&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>13. Intro Exercises 0</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex0/</link>
      <pubDate>Wed, 15 Nov 2023 11:08:39 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex0/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Objectives:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I can simplify Boolean expressions.&lt;/li&gt;&#xA;&lt;li&gt;I know the two key simplifications of &lt;code&gt;boolean=?&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Simplify each as much as possible.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;(&amp;lt; 30 50)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(string=? &amp;quot;move&amp;quot; &amp;quot;button-down&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(&amp;lt;= 30 40 60 50)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(image? 100)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(string-ci&amp;lt;? &amp;quot;cat&amp;quot; &amp;quot;DOG&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(and (&amp;gt;= 50 40) (string&amp;lt;=? &amp;quot;wet&amp;quot; &amp;quot;frog&amp;quot;))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(not (string=? &amp;quot;button-down&amp;quot; &amp;quot;drag&amp;quot;))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Assume each variable mentioned below has the correct type to be&#xA;used in the comparisons. Simplify as much as possible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pothole</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/pothole/</link>
      <pubDate>Thu, 19 Oct 2023 12:02:34 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/pothole/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;In the pothole &amp;ldquo;game&amp;rdquo;, you drive on a rough road. The road is&#xA;represented by the number line &lt;code&gt;[1,2,3...]&lt;/code&gt;. Your car starts at&#xA;position 1 with 50 points. You get 10 points for moving to the next&#xA;square, and 20 points for quitting before you break down.&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 00</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-00/</link>
      <pubDate>Sun, 10 Oct 2021 09:24:16 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-00/</guid>
      <description>&lt;h2 id=&#34;application-practice&#34;&gt;Application Practice&lt;/h2&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You want to turn &lt;code&gt;pah&lt;/code&gt; into a key handler &lt;code&gt;pa&lt;/code&gt;. Write the signature&#xA;for &lt;code&gt;pa&lt;/code&gt;. Write the new function &lt;code&gt;pa&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define pusher-square (square 5 &amp;quot;solid&amp;quot; &amp;quot;transparent&amp;quot;))&#xA; (define (pah x) (beside pusher-square x))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You need to modify the definition of your mouse handler &lt;code&gt;pm&lt;/code&gt; so that it&#xA;can be run when you press a key instead of using the mouse. How do you do that?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Structs</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/105-structs/</link>
      <pubDate>Tue, 01 Jun 2021 13:29:47 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/105-structs/</guid>
      <description>&lt;p&gt;One key question is: how do you want to represent your players?&lt;/p&gt;&#xA;&lt;p&gt;A name (string) or a number both work. Discussion about this&#xA;choice is good - write a choice and why you think that will be better&lt;/p&gt;&#xA;&lt;p&gt;Another question is: in your game model, do you want to represent the&#xA;pieces of each player in one list for the entire game, or one list for&#xA;each player?&lt;/p&gt;&#xA;&lt;p&gt;Both of those choices work, and discussion is essential if you want to&#xA;understand the implications of each choice.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 05 Problem Set</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-05/</link>
      <pubDate>Thu, 26 Sep 2019 21:49:56 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-05/</guid>
      <description>&lt;!--&#xA;2. (SKIP, NO QUESTION) Binary decimals: the binary number 110.101 means&#xA;&#xA;        2**2 + 2**1 + 2**(-1) + 2**(-3) == 6.625&#xA;&#xA;    Haskell does not believe in negative exponents for integers (using&#xA;    `^`), but will happily do them for decimals (`**`). Check the type&#xA;    signatures... when the inputs to a function are integers, expect&#xA;    the output to be an integer as well.&#xA;--&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Note&lt;/h4&gt;&#xA;&#xA;    &lt;ol&gt;&#xA;&lt;li&gt;All binary numbers lists on this page are written with &lt;strong&gt;least&#xA;significant bit&lt;/strong&gt; first. That means &lt;code&gt;[0,1,1]&lt;/code&gt; represents the number 6.&lt;/li&gt;&#xA;&lt;li&gt;Check your work by running &lt;code&gt;status&lt;/code&gt; in the &lt;a href=&#34;complete.txt&#34;&gt;complete testing&#xA;code&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How many numbers are between two given binary numbers, including&#xA;the start and end number?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 05 RG</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-05-rg/</link>
      <pubDate>Mon, 15 Sep 2025 12:59:47 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-05-rg/</guid>
      <description>&lt;p&gt;These reading guide questions should be read along side the &lt;a href=&#34;https://wy-cs.info/ap-cs/haskell/ch03/daily-05/&#34;&gt;Chapter 3 Daily 5&lt;/a&gt; assignment.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Decode the binary number &lt;code&gt;[1,1,0,1]&lt;/code&gt; written in form used in the&#xA;problem set.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A variation on the &lt;code&gt;bcount&lt;/code&gt; function, called &lt;code&gt;bcountTen&lt;/code&gt;, works with base ten&#xA;numbers. What should be the result of running &lt;code&gt;bcountTen 33 44&lt;/code&gt; ?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Another variation, &lt;code&gt;bcountTenBin&lt;/code&gt; is like &lt;code&gt;bcountTen&lt;/code&gt; but the&#xA;results are output in the binary format used in the assignment.&#xA;Give the result of &lt;code&gt;bcountTenbin 51 89&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 06</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-06/</link>
      <pubDate>Sun, 06 Oct 2019 07:24:08 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-06/</guid>
      <description>&lt;p&gt;Write the type signature and function for each problem.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add a 3 to the front of a list of numbers.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add a 4 to the back of a list of numbers.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add a 5 in the middle of a list of numbers. If possible, insert the&#xA;5 so there are exactly the same number of numbers before and after&#xA;it, otherwise put the extra number after it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Switch the front and back number in a list of numbers. Leave the&#xA;others the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sorting Notes</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/sorting-a/</link>
      <pubDate>Thu, 20 Feb 2025 11:36:52 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/sorting-a/</guid>
      <description>&lt;p&gt;Time: 2 days.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Day 1: Implement sorting algorithms.&lt;/li&gt;&#xA;&lt;li&gt;Day 2: Implement searching, quiz.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;searching&#34;&gt;Searching&lt;/h2&gt;&#xA;&lt;p&gt;&amp;ldquo;Binary search&amp;rdquo;. (Higher/lower/got it.)&lt;/p&gt;&#xA;&lt;h3 id=&#34;selection-sort&#34;&gt;Selection Sort&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Find the smallest, move it to the front.&lt;/li&gt;&#xA;&lt;li&gt;Triangle pattern for comparisons - kind of slow.&lt;/li&gt;&#xA;&lt;li&gt;Never any faster (cannot get lucky).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;insertion-sort&#34;&gt;Insertion sort&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Build up a sorted list at the start of the array.&lt;/li&gt;&#xA;&lt;li&gt;Can be fast if input is mostly sorted.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;merge-sort&#34;&gt;Merge sort&lt;/h3&gt;&#xA;&lt;p&gt;Recursive. Build up from small sorted lists to big.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Struct A</title>
      <link>https://wy-cs.info/intermediate-cs/intensive/struct-a/</link>
      <pubDate>Fri, 14 Feb 2025 12:35:57 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/intensive/struct-a/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a structure called &lt;code&gt;pqr&lt;/code&gt; with fields &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt;, and &lt;code&gt;w&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;struct-a&#34;&gt;Struct A&lt;/h2&gt;&#xA;&lt;p&gt;Given that:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are numbers&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;z&lt;/code&gt; is a color&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;w?&lt;/code&gt; is a boolean&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a variable &lt;code&gt;ex1&lt;/code&gt; that holds a &lt;code&gt;pqr&lt;/code&gt; with &lt;code&gt;x=10&lt;/code&gt;, &lt;code&gt;y=20&lt;/code&gt;,&#xA;&lt;code&gt;z=&amp;quot;blue&amp;quot;&lt;/code&gt;, and &lt;code&gt;w?&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sample Code A</title>
      <link>https://wy-cs.info/nand/ch08/sample-a/</link>
      <pubDate>Fri, 07 Feb 2025 12:11:58 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/sample-a/</guid>
      <description>&lt;p&gt;You should be able to write code like this yourself. These are just to&#xA;reassure you.&lt;/p&gt;&#xA;&lt;p&gt;The official tests contain &lt;a href=&#34;https://github.com/nand2tetris/projects/blob/main/08/ProgramFlow/BasicLoop/BasicLoop.vm&#34;&gt;ProgramFlow/BasicLoop&lt;/a&gt;, which is similar but&#xA;a little more complex.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1&#34;&gt;1.&lt;/h2&gt;&#xA;&lt;p&gt;This program should result in 10 and 30 on the stack.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;push constant 10&#xA;goto SKIP&#xA;push constant 20&#xA;label SKIP&#xA;push constant 30&#xA;label DONE&#xA;goto DONE&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2&#34;&gt;2.&lt;/h2&gt;&#xA;&lt;p&gt;This program should result in 131 and 151 on the stack&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;push constant 131&#xA;push constant 0&#xA;if-goto WHOMP&#xA;push constant 151&#xA;label WHOMP&#xA;goto WHOMP&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;3&#34;&gt;3.&lt;/h2&gt;&#xA;&lt;p&gt;This program should result in 101 on the stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Instructions I</title>
      <link>https://wy-cs.info/nand/ch06/110-instructions-1/</link>
      <pubDate>Fri, 18 Oct 2024 13:21:29 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch06/110-instructions-1/</guid>
      <description>&lt;p&gt;Potentially useful functions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;string-contains?&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;string-split&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;substring&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;string-replace&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;string-append&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Optional:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Package: &lt;a href=&#34;https://docs.racket-lang.org/match-string/index.html&#34;&gt;match-string&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;&#xA;&lt;p&gt;We want to be break a instruction string into three separate pieces:&#xA;the destination, the operation, and the jump/comparison.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Destination: the register(s) where the result goes.&lt;/li&gt;&#xA;&lt;li&gt;Operation: the computation performed by the ALU, like &lt;code&gt;A+1&lt;/code&gt; or&#xA;&lt;code&gt;M&amp;amp;D&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Jump comparison: &lt;code&gt;JMP&lt;/code&gt;, &lt;code&gt;JLE&lt;/code&gt; etc.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Your end goal is to take in an instruction string and produce a list&#xA;of strings with three components: &lt;code&gt;(list destination operation jump)&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Structs and Match</title>
      <link>https://wy-cs.info/nand/racket/struct-match/</link>
      <pubDate>Mon, 07 Oct 2024 22:02:55 -0500</pubDate>
      <guid>https://wy-cs.info/nand/racket/struct-match/</guid>
      <description>&lt;p&gt;Structures hold a fixed number of different kinds of items.&#xA;Each &lt;em&gt;field&lt;/em&gt; is always holding the same kind of object. (Conceptually;&#xA;in fact there are no rules enforced by ordinary Racket.)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(struct amazing (name year specialization) #:transparent)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: you have to declare structures &lt;code&gt;#:transparent&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The biggest consequence of &lt;code&gt;#:transparent&lt;/code&gt; is that two structures with&#xA;identical fields are considered &lt;code&gt;equal?&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mini-project&#34;&gt;Mini-project&lt;/h2&gt;&#xA;&lt;p&gt;Build a symbol table with update operations. (TBA DETAILS)&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Assembler WS 1</title>
      <link>https://wy-cs.info/nand/ch04/asm-ws01/</link>
      <pubDate>Fri, 20 Sep 2024 11:33:15 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch04/asm-ws01/</guid>
      <description>&lt;h2 id=&#34;assignments-only&#34;&gt;Assignments Only&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;D=D+23&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[100] &amp;lt;- 0&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[100] &amp;lt;- 17&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[100] &amp;lt;- RAM[200]&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[3] &amp;lt;- RAM[3] - 15&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[3] &amp;lt;- RAM[4] + 1&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A=A+3&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;RAM[2] &amp;lt;- RAM[0] + RAM[1] + 17&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;After this code runs, what is D? What values are in RAM?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; @74&#xA; D=A&#xA; @19&#xA; M=D&#xA; M=M+1&#xA; @18&#xA; M=A&#xA; A=A+1&#xA; D=M+A&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Suppose at the start we have RAM[0]=10 and RAM[1]=20.&#xA;After executing the code below, what valus are in A? RAM?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Random A</title>
      <link>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/rng-ex-1/</link>
      <pubDate>Mon, 13 Nov 2023 13:12:25 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/advanced/910-randomness/rng-ex-1/</guid>
      <description>&lt;p&gt;Remember to include &lt;code&gt;System.Random&lt;/code&gt; to make these exercises work.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print a random integer in the range [1,10].&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Print a random Double in the range [100,200].&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a circle of radius 2 centered at the origin with a random&#xA;color from this list:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; somecolors = [red, orange, yellow, green, blue, purple]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a function that takes in a &lt;code&gt;StdGen&lt;/code&gt; and produces a random&#xA;color from the &lt;code&gt;somecolors&lt;/code&gt; list (above).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tic-Tac-Toe</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch08/tictactoe/</link>
      <pubDate>Thu, 19 Oct 2023 11:49:54 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch08/tictactoe/</guid>
      <description>&lt;p&gt;We are going to write most of a tic-tac-toe game in Haskell.  For&#xA;uniformity, let us all use these board coordinates:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    (0,0) | (1,0) | (2,0)&#xA;    (0,1) | (1,1) | (2,1)&#xA;    (0,2) | (1,2) | (2,2)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a record to hold information for a tic-tac-toe game. Call your&#xA;record &lt;code&gt;Tttg&lt;/code&gt;. It must have&#xA;three fields:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Whose turn is it? (&lt;code&gt;nextPlayer&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Where did player 1 play? (&lt;code&gt;p1moves&lt;/code&gt;) &amp;hellip; these are &amp;lsquo;X&amp;rsquo;&lt;/li&gt;&#xA;&lt;li&gt;Where did player 2 play? (&lt;code&gt;p2moves&lt;/code&gt;) &amp;hellip; these are &amp;lsquo;O&amp;rsquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a variable &lt;code&gt;ex3&lt;/code&gt; to represent player 2 being next to move on&#xA;this board:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remainder 1</title>
      <link>https://wy-cs.info/ecs/javascript/remainder-1/</link>
      <pubDate>Thu, 08 Jun 2023 11:00:53 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/javascript/remainder-1/</guid>
      <description>&lt;p&gt;Make sure you memorize how to figure out &amp;ldquo;is x a multiple of N&amp;rdquo;?&#xA;(Check to see if the remainder of x by N is 0.)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Ask the person for a number. Output &amp;ldquo;DIVISIBLE BY 7&amp;rdquo; if their&#xA;number is divisible by 7. Otherwise output &amp;ldquo;nope&amp;rdquo;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Ask the person for a number. Print &amp;ldquo;DIVISIBLE BY 23&amp;rdquo; if it is&#xA;divisible by 23.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Ask the person for a number N. Count from 1 up to 100 printing out&#xA;every number that is divisible by N.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shopping</title>
      <link>https://wy-cs.info/ap-cs/solving/pro-com-5/shopping/</link>
      <pubDate>Fri, 02 Jun 2023 06:57:51 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/pro-com-5/shopping/</guid>
      <description>&lt;p&gt;The problem is the &lt;a href=&#34;https://www.hackerrank.com/contests/pro-com-5-0/challenges/shopping-spree-1/problem&#34;&gt;Shopping Spree&#xA;1&lt;/a&gt;&#xA;on HackerRank. (Remember you need to be signed in and enter the&#xA;contest to see it.)&lt;/p&gt;&#xA;&lt;p&gt;There are at least two different ways to approach storing of&#xA;coordinates for this problem. Think for a minute about what you will&#xA;have to do and see if you prefer one approach or the other.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Store all of the information in a 2D array and use (row, column) coordinates.&#xA;In that case you might want to use the &lt;code&gt;Posn&lt;/code&gt; class.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;java.util.*&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;implements&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Comparable&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xx&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;yy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;compareTo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ans&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ans&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ans&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;other&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ans&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Store all of the information in a long 1D array with &lt;code&gt;nrows*ncols&lt;/code&gt;&#xA;elements. In that case the index you use for &lt;code&gt;(row, col)&lt;/code&gt; will be&#xA;&lt;code&gt;(row * ncols + col)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Toy Story</title>
      <link>https://wy-cs.info/ap-cs/solving/pro-com-6/toystory/</link>
      <pubDate>Wed, 31 May 2023 07:14:55 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/pro-com-6/toystory/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;toystarter.txt&#34;&gt;starter code&lt;/a&gt; does most of the work reading in&#xA;the file.&lt;/p&gt;&#xA;&lt;p&gt;Make sure you develop a plan before you start coding!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Twenty One</title>
      <link>https://wy-cs.info/ap-cs/solving/pro-com-3/twenty-one/</link>
      <pubDate>Thu, 13 Apr 2023 13:25:46 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/solving/pro-com-3/twenty-one/</guid>
      <description>&lt;p&gt;The description of the Twenty One problem leaves a few details vague.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A player wins by getting a score of 21.&lt;/li&gt;&#xA;&lt;li&gt;As soon as a player gets a score of 21, the game ends. The other&#xA;player does not get a turn, and the first player does not keep&#xA;drawing.&lt;/li&gt;&#xA;&lt;li&gt;A player&amp;rsquo;s turn does not end until they fail to find any shells.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There are two important examples.&lt;/p&gt;&#xA;&lt;h3 id=&#34;example-1&#34;&gt;Example 1&lt;/h3&gt;&#xA;&lt;p&gt;The sequence of numbers is:&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Feb.G Review</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/110-febg-review/</link>
      <pubDate>Fri, 18 Feb 2022 17:33:55 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/110-febg-review/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Trace the execution of &lt;code&gt;(snow 300)&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;snow&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;remainder&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;quotient&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;add1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;snow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;quotient&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;snow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))]))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;(&lt;code&gt;tall-tree&lt;/code&gt;) Make an &lt;code&gt;n&lt;/code&gt; layer stack of green triangles and put a&#xA;brown rectangle at the bottom.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch22a/110-febg-review/tall-tree.png&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;(tall-tree 5)&lt;/h4&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;cr7 : integer(avoid) -&amp;gt; number&lt;/code&gt;) How many multiples of 7 are&#xA;there from &lt;code&gt;avoid&lt;/code&gt; up to 1000? Except do not count any multiple of&#xA;&lt;code&gt;avoid&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;(Math-only solutions discouraged; practice&#xA;recursion. Will your solution also work to avoid odd numbers as&#xA;well as multiples of &lt;code&gt;avoid&lt;/code&gt;?)&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 01</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-01/</link>
      <pubDate>Sat, 09 Oct 2021 20:12:20 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-01/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Practice looking at code and making inferences about the types of&#xA;various functions.&lt;/p&gt;&#xA;&lt;p&gt;The phrases &amp;ldquo;signature&amp;rdquo; and &amp;ldquo;type signature&amp;rdquo; mean the same thing.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Given the example usage below, write a possible type signature for &lt;code&gt;d1&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (d1 pic:stick-figure 100 50)&#xA; =&amp;gt; (make-color 100 50 250 255)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a possible signature for &lt;code&gt;d2&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Daily 07</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/daily-07/</link>
      <pubDate>Wed, 22 Sep 2021 07:15:39 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/daily-07/</guid>
      <description>&lt;h1 id=&#34;daily-7-not-quiz&#34;&gt;Daily 7 (Not Quiz)&lt;/h1&gt;&#xA;&lt;h2 id=&#34;agenda&#34;&gt;Agenda&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Mention and demo: &lt;code&gt;if-then&lt;/code&gt; and guards&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Recursion Practice&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Introduction to number bases: base 2, base 16&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do you write digits larger than 10?&lt;/li&gt;&#xA;&lt;li&gt;Math practice&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;making-choices&#34;&gt;Making Choices&lt;/h2&gt;&#xA;&lt;!--&#xA;1. Write a function `q1 :: Int -&gt; Int` that gives 100 when you put in 2,&#xA;   and otherwise gives 0.&#xA;   --&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Have the computer make a list of all of the perfect fourth powers&#xA;between 1000 and 5000.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Placement</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/110-stage1/</link>
      <pubDate>Wed, 26 May 2021 09:47:32 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/110-stage1/</guid>
      <description>&lt;p&gt;We are going to make an animation where clicking places a piece and&#xA;space bar changes the current player.&lt;/p&gt;&#xA;&lt;p&gt;You can choose the colors of the pieces yourself.&lt;/p&gt;&#xA;&lt;h2 id=&#34;example-model&#34;&gt;Example Model&lt;/h2&gt;&#xA;&lt;p&gt;Make an example game model showing one piece at (2,5) and the current&#xA;player being the opposite of the one who owns the piece. The mode&#xA;should be 1.&lt;/p&gt;&#xA;&lt;h2 id=&#34;grid&#34;&gt;Grid&lt;/h2&gt;&#xA;&lt;p&gt;You need a grid and functions to convert to and from grid&#xA;coordinates. Those should already be written from earlier&#xA;projects. Find them now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2020 Sem.II Final</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/sem2final/</link>
      <pubDate>Wed, 10 Jun 2020 07:00:43 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/sem2final/</guid>
      <description>&lt;p&gt;You may use the Picturing Programs book and the Racket Help Desk. You&#xA;may not use your old work. Please do not discuss this test with other people&#xA;until after 1:30pm on the day after the exam.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-signatures&#34;&gt;1. Signatures&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;info&lt;/h4&gt;&#xA;&#xA;    &lt;p&gt;MODEL: &lt;code&gt;tstm&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;p&lt;/code&gt;: a posn with number coordinates, like &lt;code&gt;(make-posn 3 4)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;n&lt;/code&gt;: a number, like &lt;code&gt;5&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;c&lt;/code&gt;: a color string, like &lt;code&gt;&amp;quot;red&amp;quot;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ell&lt;/code&gt;: a list of numbers, like &lt;code&gt;(list 8 15 20 21)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define-struct&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tstm&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ell&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;In this section all models are assumed and required to have their&#xA;parts with the correct types above. You do not need to check that&#xA;models you are given are correct, and models you produce must also&#xA;have the correct types in each spot.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snake Multiplayer</title>
      <link>https://wy-cs.info/intermediate-cs/projects/snake/110-multiplayer/</link>
      <pubDate>Fri, 24 Apr 2020 13:28:39 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/snake/110-multiplayer/</guid>
      <description>&lt;p&gt;Make sure you have a working &lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/projects/snake/&#34;&gt;single&#xA;player&lt;/a&gt;&#xA;snake (if not two player snake) before&#xA;starting this project!&lt;/p&gt;&#xA;&lt;p&gt;Overall, people report that the code for multiplayer snake gets&#xA;large. You probably want to make a separate folder for your snake game&#xA;and break it into separate files using require and provide. I&#xA;recommend each file only do one &amp;ldquo;part&amp;rdquo; of the animation. To give you&#xA;an idea, I made separate files for:&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Intro Exercises 1</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex1/</link>
      <pubDate>Tue, 17 Dec 2019 09:32:52 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Use the code below to answer:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; hit-snooze?: boolean number -&amp;gt; boolean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hit-snooze?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sleepy?&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;boolean=?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;sleepy?&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;700&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;What is wrong with this code? Fix it.&lt;/li&gt;&#xA;&lt;li&gt;Write a check-expect where this function returns true.&lt;/li&gt;&#xA;&lt;li&gt;Write a check-expect where this function returns false.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Simplify or explain and correct the error.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;(boolean=? (&amp;gt; 17 24) #false)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(boolean=? (= 1 1) &amp;quot;true&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(boolean=? practiced-piano? true)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(boolean=? hungry? false)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sometimes you get to sleep a lot (return true). That happens if you&#xA;did not have homework, did not do the homework you have, or the&#xA;homework was easy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bumper Cars</title>
      <link>https://wy-cs.info/intermediate-cs/typed/bumper-cars/</link>
      <pubDate>Thu, 16 May 2019 13:21:40 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/bumper-cars/</guid>
      <description>&lt;h2 id=&#34;game-struct&#34;&gt;Game struct&lt;/h2&gt;&#xA;&lt;p&gt;For bumper boats, we want a struct that contains:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;id&lt;/li&gt;&#xA;&lt;li&gt;name&lt;/li&gt;&#xA;&lt;li&gt;position&lt;/li&gt;&#xA;&lt;li&gt;velocity&lt;/li&gt;&#xA;&lt;li&gt;radius&lt;/li&gt;&#xA;&lt;li&gt;color&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;draw-handler&#34;&gt;Draw handler&lt;/h2&gt;&#xA;&lt;p&gt;For one player bumper cars, just draw the single car (circle) in the&#xA;right color, with the name shown in the middle of it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;tick-handler&#34;&gt;Tick handler&lt;/h2&gt;&#xA;&lt;p&gt;Update the position, adding the velocity.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mouse-handler&#34;&gt;Mouse handler&lt;/h2&gt;&#xA;&lt;p&gt;Change the velocity so that the circle moves towards the mouse click&#xA;with a speed of 10.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Store</title>
      <link>https://wy-cs.info/ecs/python/store/</link>
      <pubDate>Fri, 03 May 2019 11:31:26 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/store/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Offer choices with prices&lt;/li&gt;&#xA;&lt;li&gt;Ask what they want&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;I don&amp;rsquo;t have that&amp;rdquo; if you do not recognize the item.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;quit&amp;rdquo; = stop asking.&lt;/li&gt;&#xA;&lt;li&gt;Print what they have purchased so far.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;template&#34;&gt;Template&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;want = &amp;quot;get started&amp;quot;&#xA;while want != &amp;quot;quit&amp;quot;:&#xA;    want = input(&amp;quot;What do you want to buy?&amp;quot;)&#xA;    if want == &amp;quot;avocado&amp;quot;:&#xA;        money -= price&#xA;        avocado += 1&#xA;    elif ...:&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Senioritis</title>
      <link>https://wy-cs.info/docs/senioritis/</link>
      <pubDate>Sat, 09 Mar 2019 15:06:06 -0600</pubDate>
      <guid>https://wy-cs.info/docs/senioritis/</guid>
      <description>&lt;p&gt;Senior-itis is an affliction in which seniors no longer feel any&#xA;motivation to do work in school. They don&amp;rsquo;t care about what they are&#xA;learning, they feel it is pointless, they disengage.&lt;/p&gt;&#xA;&lt;p&gt;At the root, senioritis is a symptom; years of external motivation are&#xA;the cause. External motivation is a form of motivation that comes from&#xA;outside - grades, candy, money. Opposite of external motivation is&#xA;&lt;em&gt;internal&lt;/em&gt; motivation - doing something for the joy of&#xA;learning, to live a morally upright life, or because you value the&#xA;experiences you will have in the doing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paper Burning</title>
      <link>https://wy-cs.info/ecs/scratch/variables-b-burning/</link>
      <pubDate>Wed, 27 Feb 2019 10:36:46 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-b-burning/</guid>
      <description>&lt;p&gt;Sprites: main character, stove, water, paper.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Touch stove while burning&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;main character changes to burning costume&lt;/li&gt;&#xA;&lt;li&gt;fire variable set to 1&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Touch water&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;main character no longer burning&lt;/li&gt;&#xA;&lt;li&gt;fire variable set to 0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Touch paper while burning&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;paper burns and disappears&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Interfaces</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/interfaces/</link>
      <pubDate>Wed, 13 Feb 2019 10:30:31 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/interfaces/</guid>
      <description>&lt;h2 id=&#34;example-mouse-handler&#34;&gt;Example: mouse handler&lt;/h2&gt;&#xA;&lt;p&gt;A good example of an &lt;code&gt;interface&lt;/code&gt; is the&#xA;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/java/awt/event/MouseListener.html&#34;&gt;MouseListener&lt;/a&gt;. This&#xA;interface contains a function to be called when a mouse clicks on&#xA;something (actually different functions for press, release, and&#xA;complete click).&lt;/p&gt;&#xA;&lt;p&gt;Making this an interface means any class you create can have the&#xA;ability to work with mouse events.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Moving Ball</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/moving-ball/</link>
      <pubDate>Wed, 16 Jan 2019 20:19:59 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/moving-ball/</guid>
      <description>&lt;p&gt;We practice the basics of structures by creating an animation where&#xA;you can direct a ball to move around the screen.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use WASD keys to control the ball.&lt;/li&gt;&#xA;&lt;li&gt;Once you pick a direction, the ball continues to move in that&#xA;direction at the same speed until you tell it a different&#xA;direction.&lt;/li&gt;&#xA;&lt;li&gt;The game is over when the ball leaves the screen.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;planning&#34;&gt;Planning&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We used a structure holding the position and velocity of the ball.&lt;/li&gt;&#xA;&lt;li&gt;We listed the handlers we needed.&lt;/li&gt;&#xA;&lt;li&gt;We wrote check-expects as a class.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;writing&#34;&gt;Writing&lt;/h2&gt;&#xA;&lt;p&gt;Using the starter code from class, it took less than a day to get a&#xA;working animation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Two Dimensional Arrays</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-arrays-2d/</link>
      <pubDate>Tue, 18 Dec 2018 11:00:25 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-arrays-2d/</guid>
      <description>&lt;h2 id=&#34;fundamentals&#34;&gt;Fundamentals&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[][]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;cols&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;java.util.Arrays&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[][]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;given&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}};&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Arrays&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;deepToString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;given&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1QEp4FGMU1ShqXnAAwZ2gDNfMQqL6rmHUkAVeGWsszeU/edit?usp=sharing&#34;&gt;Array 2D intro and practice slides&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the &lt;code&gt;makeBoard&lt;/code&gt; function that creates a matrix of ones surrounded by a moat of zeros.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static int[][] makeBoard(int rows, int cols);&#xA;&#xA; int[][] result = makeBoard(5,7);&#xA; System.out.println(Arrays.deepToString(result);&#xA; /*&#xA; 0 0 0 0 0 0 0&#xA; 0 1 1 1 1 1 0&#xA; 0 1 1 1 1 1 0&#xA; 0 1 1 1 1 1 0&#xA; 0 0 0 0 0 0 0&#xA; */&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make &lt;code&gt;boxSplit&lt;/code&gt;, which takes in a 1D array of integers&#xA;of even length and splits it into two rows (in &amp;ldquo;row major order&amp;rdquo;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Randomness</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/random/</link>
      <pubDate>Tue, 17 Oct 2017 22:10:45 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/random/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Random numbers: &lt;code&gt;(random 3)&lt;/code&gt; gives a random number 0, 1, or 2. Notice that there are three possible answers, but they start counting at 0. Run the code below and you should get different answers each time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;random&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;random-ranges&#34;&gt;Random ranges&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;note&lt;/h4&gt;&#xA;&#xA;    We use the phrase &amp;ldquo;from 10 to 200&amp;rdquo; or &amp;ldquo;between 10 and 200&amp;rdquo; to both mean all of the integers n so that 10&amp;lt;=n&amp;lt;=200.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;How many numbers are there from 10 to 200, inclusive? It&amp;rsquo;s easy to make a mistake. My favorite method is to subtract a number to make the bottom of the range start counting at one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sample Code B</title>
      <link>https://wy-cs.info/nand/ch08/sample-b/</link>
      <pubDate>Sat, 15 Feb 2025 09:37:43 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/sample-b/</guid>
      <description>&lt;p&gt;Check some very basic functions and work your way up. The first of&#xA;these was &lt;em&gt;by far&lt;/em&gt; the most useful to me when I was debugging my code.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1&#34;&gt;1.&lt;/h2&gt;&#xA;&lt;p&gt;Since this function is so simple, you can start the stack wherever&#xA;youw want, say SP=16. When the code is done, you should have 555 on&#xA;the stack.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function Sys.init 0&#xA;  call fiver 0&#xA;  label DONE&#xA;  goto DONE&#xA;function fiver 0&#xA;  push constant 555&#xA;  return&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Struct B</title>
      <link>https://wy-cs.info/intermediate-cs/intensive/struct-b/</link>
      <pubDate>Fri, 14 Feb 2025 12:46:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/intensive/struct-b/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a structure &lt;code&gt;qqq&lt;/code&gt; that holds a number A, a color C, and&#xA;another number M.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a draw handler that shows two solid circles, one with radius&#xA;10 centered at (A,10), and one with radius 15 centered at&#xA;(100, M). Both circles are color C.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Instructions II</title>
      <link>https://wy-cs.info/nand/ch06/120-instructions-2/</link>
      <pubDate>Mon, 28 Oct 2024 16:27:51 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch06/120-instructions-2/</guid>
      <description>&lt;p&gt;We concentrate on decoding C-instructions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;review-examples&#34;&gt;Review Examples&lt;/h2&gt;&#xA;&lt;p&gt;In general, Hack assembly language looks like this nonsensical code segment:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@15&#xA;D=A&#xA;(LOOP)&#xA;@n   --- &amp;#34;n is a variable n stored at @16&amp;#34;&#xA;M=M-1&#xA;@LOOP&#xA;D;JLT&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;handling-components&#34;&gt;Handling Components&lt;/h2&gt;&#xA;&lt;p&gt;There are three separate components of a C-instruction: the&#xA;destination, the ALU math, and the jump comparison. For this part of&#xA;the project, assume that you have already been given that information&#xA;in a list of strings.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Quiz C - Solar Jump</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ch20-quiz-c/</link>
      <pubDate>Mon, 14 Mar 2022 11:33:39 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ch20-quiz-c/</guid>
      <description>&lt;h2 id=&#34;solar-jump-i&#34;&gt;Solar Jump I&lt;/h2&gt;&#xA;&lt;p&gt;You will see a red dot and a black dot, both radius 10.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Randomly place a black dot. Randomize every time you run the&#xA;code. It does not need the ability to move during a single run.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The red dot jumps to your mouse when you click.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hit &amp;ldquo;d&amp;rdquo; to double the distance between the centers of the black dot&#xA;and the red dot. The red dot should move directly away from the&#xA;black dot in this motion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Scanning 2D</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-arr2d-scan/</link>
      <pubDate>Thu, 17 Feb 2022 10:48:10 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-arr2d-scan/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;teaching-points&#34;&gt;Teaching Points&lt;/h2&gt;&#xA;&lt;p&gt;A process for approaching an array problem:&lt;/p&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;Example: begin by writing one clear example with numbers.&lt;/li&gt;&#xA;&lt;li&gt;Skeleton: set up variables and loops (number of rows, number of&#xA;columns, loop through rows, loop through columns).&lt;/li&gt;&#xA;&lt;li&gt;General case: write down code that will work most of the time&#xA;(e.g., in the middle of the array).&lt;/li&gt;&#xA;&lt;li&gt;Special cases: deal with the edges of the array where things might&#xA;be different.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;ddot&lt;/code&gt;) Suppose that &lt;code&gt;nums&lt;/code&gt; is an NxN square array of ints. The&#xA;main diagonal runs from the upper left (row=0, col=0) to the lower&#xA;right (row=N-1, col=N-1). The opposite diagonal runs from the upper&#xA;right (row=0, col=N-1) to the lower left (row=N-1, col=0). Find the&#xA;sum of the products of the corresponding elements in the main&#xA;diagonal and the opposite diagonal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jan Review 20</title>
      <link>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-review-20/</link>
      <pubDate>Mon, 03 Jan 2022 10:06:49 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/interlude-jan/jan-review-20/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Change &amp;ldquo;snow&amp;rdquo; to &amp;ldquo;ice&amp;rdquo;, but only when it appears between &amp;ldquo;December&amp;rdquo;&#xA;and &amp;ldquo;February&amp;rdquo;.  To simplify, you may assume that both December and&#xA;February appear in the string, and December comes before February.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;System&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;winter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;snow December snow ice snow February snow&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;snow December ice ice ice February snow&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a ASCII tree. Given:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;height of whole tree (height &amp;gt;= 6)&lt;/li&gt;&#xA;&lt;li&gt;width of crown at the top (width odd)&lt;/li&gt;&#xA;&lt;li&gt;trunk is always 4 lines tall and 3 characters wide&lt;/li&gt;&#xA;&lt;li&gt;width of crown increases by two &amp;ldquo;*&amp;rdquo; each line between bottom and top of crown (then decreasing halfway in between)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 02</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-02/</link>
      <pubDate>Tue, 12 Oct 2021 17:50:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-02/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;You should be familiar with &lt;a href=&#34;https://wy-cs.info/intermediate-cs/ch06/bigbang-check/&#34;&gt;the importance of check-expects&lt;/a&gt; before doing the exercises.&lt;/p&gt;&#xA;&lt;h2 id=&#34;long-leg-triangle&#34;&gt;Long Leg Triangle&lt;/h2&gt;&#xA;&lt;p&gt;The first animation code is below.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;left-mid&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay/align&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;left&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;middle&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;empty-scene&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;350&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;250&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;initial-model&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;right-triangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;initial-model&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-mouse&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;...to-write...&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;to-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;left-mid&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;Sketch the first image shown when the code is run. (Commit to&#xA;your best guess before testing it.)&lt;/li&gt;&#xA;&lt;li&gt;What kind of &amp;ldquo;thing&amp;rdquo; is the initial model?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;mouse-handler-1&#34;&gt;Mouse Handler 1&lt;/h3&gt;&#xA;&lt;p&gt;The purpose of the mouse handler &lt;code&gt;my-mouse&lt;/code&gt;&#xA;is to create a triangle with width equal to the&#xA;x-coordinate of the mouse but with the height always 100.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Indicator</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/120-indicator/</link>
      <pubDate>Tue, 01 Jun 2021 13:44:13 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/120-indicator/</guid>
      <description>&lt;p&gt;The indicator should be a somewhat-transparent version of the actual&#xA;piece.&lt;/p&gt;&#xA;&lt;h2 id=&#34;draw-handler&#34;&gt;Draw Handler&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;draw-indicator: posn player image -&amp;gt; image.&lt;/li&gt;&#xA;&lt;li&gt;draw-h2: game-model -&amp;gt; image.&#xA;The second draw handler should call the first draw handler to draw&#xA;the pieces on the board.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mouse-handler&#34;&gt;Mouse Handler&lt;/h2&gt;&#xA;&lt;p&gt;If your mouse handler does not remember the most recent position of&#xA;the mouse, you will have to add that now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snake AI</title>
      <link>https://wy-cs.info/intermediate-cs/projects/snake/120-ai/</link>
      <pubDate>Fri, 24 Apr 2020 13:28:46 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/snake/120-ai/</guid>
      <description>&lt;p&gt;We are going to write a computer player (&amp;ldquo;ai&amp;rdquo;) for a snake.&lt;/p&gt;&#xA;&lt;p&gt;The tick handler will give each computer controlled snake a chance to&#xA;choose a new direction just before the game state updates. The key&#xA;ai function will have a signature like this:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ai-function: snake world -&amp;gt; posn(direction)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In fact, most of the code will be building up or reducing the list of&#xA;possible choices, so expect most AI-related functions to take in a&#xA;list of directions in addition to the snake and the world, and put out&#xA;a possibly smaller list of directions - the best choices according to&#xA;that level of the AI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Intro Exercises 2</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex2/</link>
      <pubDate>Wed, 18 Dec 2019 10:09:41 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex2/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Simplify, explain and correct errors if needed.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;(and (&amp;lt; x 10) (&amp;gt; x 3) (&amp;lt; x 12))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(or (= 0 1) (&amp;lt; 15 8) (string=? &amp;quot;dog&amp;quot; &amp;quot;DOG&amp;quot;))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(not (= (+ 1 3 7 9) (+ 2 4 6 8)))&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(boolean=? (or (boolean=? lunchtime? true) study-hall?) false)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What does this function do? Is there any possibility of an error.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mystery?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Does writing the function above in a different way matter?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mystery2?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;n&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Challenge) The &lt;code&gt;lucky-charm? : image -&amp;gt; boolean&lt;/code&gt;. Give true if the image&#xA;matches &lt;code&gt;pic:unicorn&lt;/code&gt; (you can pick this image) or an orange star&#xA;(must work for every size orange star). Write some check-expects first!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Primer 2</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/primer-2/</link>
      <pubDate>Fri, 22 Nov 2019 14:31:21 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/primer-2/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;type Posn = (Int, Int)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;occupied :: Posn -&amp;gt; [Posn] -&amp;gt; Bool&lt;/code&gt;. True if the first argument&#xA;appears somewhere in the list which is the second argument.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;allOccupied:: [Posn] -&amp;gt; [Posn] -&amp;gt; Bool&lt;/code&gt;. True if every one of the&#xA;posns in the first list appear somewhere in the second list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  True == allOccupied [(1,5),(2,7)] [(2,7),(1,5),(3,7)]&#xA;  False == allOccupied [(1,5),(2,7)] [(2,7),(3,7)]&#xA;  False == allOccupied [(1,5),(2,7)] [(2,6),(2,8),(1,5)]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;occupiedPosn :: Board -&amp;gt; [Posn]&lt;/code&gt;: Just extract the occupied&#xA;positions, regardless of player.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bumper Two Player</title>
      <link>https://wy-cs.info/intermediate-cs/typed/bumper-two-player/</link>
      <pubDate>Mon, 20 May 2019 14:16:46 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/typed/bumper-two-player/</guid>
      <description>&lt;p&gt;First, a confession: we don&amp;rsquo;t actually make the boats bump each&#xA;other. We needed to finish the discussion in one day, so we did not&#xA;add any physics that wasn&amp;rsquo;t present in the one-player version.&lt;/p&gt;&#xA;&lt;!--&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&#xA;&#xA;    &lt;p&gt;Plain old attachments would go here.&lt;/p&gt;&#xA;&lt;pre&gt;&#xA;  &#xA;&lt;/pre&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;--&gt;&#xA;&lt;h2 id=&#34;one-player-review&#34;&gt;One Player Review&lt;/h2&gt;&#xA;&lt;p&gt;The one player code does the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bounce off walls&lt;/li&gt;&#xA;&lt;li&gt;Clicking sets velocity to be toward click at 5 units/tick&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;w&lt;/code&gt; / &lt;code&gt;s&lt;/code&gt; keys make the radius increase / decrease by 5 units.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;j&lt;/code&gt; / &lt;code&gt;k&lt;/code&gt; keys make the speed decrease / increase by 10%.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;c&lt;/code&gt; gives a new random color&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Requiring &lt;code&gt;bumper-boats-single.rkt&lt;/code&gt; gives the following functions:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adventure 1</title>
      <link>https://wy-cs.info/ecs/python/adventure-1/</link>
      <pubDate>Fri, 03 May 2019 11:34:50 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/python/adventure-1/</guid>
      <description>&lt;p&gt;There are at least two locations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sidewalk:&#xA;On the sidewalk you have a 30% chance of finding $5.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Store:&#xA;In the store you can buy a sandwich ($10) or a key ($5).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You win the game when you end up on the sidewalk with a sandwich and a&#xA;key.&lt;/p&gt;&#xA;&lt;h2 id=&#34;using-random-numbers&#34;&gt;Using random numbers&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import random&#xA;a = random.randint(1,100)&#xA;if a &amp;lt;= 25:&#xA;    print(&amp;quot;25% chance - you won&amp;quot;)&#xA;else:&#xA;    print(&amp;quot;75% chance - you lost&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Adventure Game</title>
      <link>https://wy-cs.info/ecs/scratch/adventure-game/</link>
      <pubDate>Thu, 28 Feb 2019 10:44:01 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/adventure-game/</guid>
      <description>&lt;p&gt;Characters: dragon, treasure, sword, armor, door, key.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The dragon has an 8/10 chance of being awake.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dragon breathes fire on you when you get close (possibly so close&#xA;you touch it).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;* No armor? You&#39;re dead.&#xA;* Armor on? It burns up.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sword: can kill the dragon.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Treasure&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Touching wakes up the dragon.&lt;/li&gt;&#xA;&lt;li&gt;You have three seconds before the dragon attacks.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Door = Escape route&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Key to unlock door.&lt;/li&gt;&#xA;&lt;li&gt;Win when you escape with the treasure&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;lite-version&#34;&gt;Lite Version&lt;/h2&gt;&#xA;&lt;p&gt;Only do dragon, armor, key, and door.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Speed Typer</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/speed-typer/</link>
      <pubDate>Wed, 16 Jan 2019 19:46:30 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/speed-typer/</guid>
      <description>&lt;p&gt;You are going to create a typing game - type a given word as fast as you&#xA;can.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch21/speed-typer/speed-type.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;We will keep track of the word, the letters typed so far, and the time&#xA;that has passed since the start of the game.&lt;/p&gt;&#xA;&lt;h2 id=&#34;planning&#34;&gt;Planning&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We decided on the kind of  structure we wanted for a model.&lt;/li&gt;&#xA;&lt;li&gt;We listed all of the functions and what they were going to do.&lt;/li&gt;&#xA;&lt;li&gt;We wrote check-expects as a class.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You should find check-expects shared on the Google Classroom after we&#xA;have written them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Primer 3</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/primer-3/</link>
      <pubDate>Mon, 07 Nov 2022 07:02:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/primer-3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A function to determine if a point is inside a rectangle.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; in_box :: Posn -&amp;gt; Posn -&amp;gt; Posn -&amp;gt; Bool&#xA; in_box lower_left upper_right p = False&#xA;&#xA; check_in_box = [ in_box (0,0) (4,8) (3,7),&#xA;                    not $ in_box (10,20) (15,30) (5,8) ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;2.A function to deterine if all of the points in a list are in a&#xA;rectangle.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    all_in_box :: Posn -&amp;gt; Posn -&amp;gt; [Posn] -&amp;gt; Bool&#xA;    all_in_box lower_left upper_right ps = False&#xA;&#xA;    check_all_in_box = [ all_in_box (0,0) (4,8) [(2,3),(4,6)],&#xA;                         not $ all_in_box (0,0) (4,8) [(1,4),(5,2)(0,7)],&#xA;                         not $ all_in_box (10,0) (15,9) [(14,10), (11,5)]]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A function that takes in lists of points and only keeps the ones in&#xA;which all of the points are in the box.&lt;/p&gt;</description>
    </item>
    <item>
      <title>20. Quiz D</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/ch20-quiz-d/</link>
      <pubDate>Wed, 16 Mar 2022 11:19:23 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/ch20-quiz-d/</guid>
      <description>&lt;p&gt;The 300x200 screen is split into two regions:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A yellow quarter-circle of radius 190, centered on the upper left&#xA;corner.&lt;/li&gt;&#xA;&lt;li&gt;A light blue on the remainder of the rectangle.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Clicking places a solid circle of radius 10.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Inside the yellow, the placed circle is red.&lt;/li&gt;&#xA;&lt;li&gt;On top of the light blue, the placed circle is blue.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Hitting space bar (&lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;) causes the circle to move, depending on the&#xA;location of the circle:&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.E Semester Review E</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-e/</link>
      <pubDate>Fri, 14 Jan 2022 11:38:45 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-e/</guid>
      <description>&lt;p&gt;(Review from January 2022.)&lt;/p&gt;&#xA;&lt;p&gt;We are writing an animation where you are supposed to click on a&#xA;random target color. Hitting a key gives you a new random color.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The model is a number. When the number is 10, the &amp;ldquo;target color&amp;rdquo; is&#xA;red. When the model is 20, the target is green. Write a function&#xA;that randomly produces either 10 or 20.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define (random-target n)&#xA;     ...)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The image to make is a 300x150 rectangle. The left half is red. The&#xA;right half is green. There is text that explains &amp;ldquo;Target: XXX&amp;rdquo;,&#xA;depending on which color you are supposed to hit.&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 03</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-03/</link>
      <pubDate>Fri, 15 Oct 2021 11:49:50 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-03/</guid>
      <description>&lt;h2 id=&#34;part-a&#34;&gt;Part A&lt;/h2&gt;&#xA;&lt;p&gt;Setup:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(define (draw-h-a c)&#xA;  (overlay (circle 100 &amp;#34;solid&amp;#34; c)&#xA;           (square 80 &amp;#34;outline&amp;#34; &amp;#34;black&amp;#34;)))&#xA;(big-bang (make-color 0 0 250)&#xA;  (on-draw draw-h-a 210 180) ;; little new thing?&#xA;  (on-mouse minnie-a))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;What &amp;ldquo;kind of thing&amp;rdquo; is the model? (Same question, restated: what&#xA;is the type of the model?)&lt;/li&gt;&#xA;&lt;li&gt;What is the signature of &lt;code&gt;draw-h-a&lt;/code&gt;?&lt;/li&gt;&#xA;&lt;li&gt;What is the name and signature for the mouse handler?&lt;/li&gt;&#xA;&lt;li&gt;Write a &lt;code&gt;check-expect&lt;/code&gt; for the mouse handler that shows that when&#xA;the old model is &lt;code&gt;(make-color 0 0 250)&lt;/code&gt; and you move the mouse to&#xA;coordinates (80, 130), the new model is &lt;code&gt;(make-color 80 255 255)&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Make up another check-expect for the mouse handler, guessing its&#xA;purpose from the first example.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Reversi Ray</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/130-ray/</link>
      <pubDate>Tue, 01 Jun 2021 13:44:17 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/130-ray/</guid>
      <description>&lt;p&gt;This variation on the game of Reversi is simpler to implement than the&#xA;&amp;ldquo;full version&amp;rdquo;, so we will do it first. In this version, we place one&#xA;piece on the board and then choose a direction to extend a line of&#xA;pieces in one direction.&lt;/p&gt;&#xA;&lt;p&gt;A line that extends in only one direction is called a ray, so this&#xA;version is called the &amp;ldquo;ray&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;In this version the &lt;code&gt;mode&lt;/code&gt; part of the struct gets used to tell the&#xA;difference between the mode of placing the anchor and the mode of&#xA;choosing the direction.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch13</title>
      <link>https://wy-cs.info/ml/r4ds/ch13/</link>
      <pubDate>Wed, 14 Oct 2020 20:33:57 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch13/</guid>
      <description>&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;&#xA;&lt;p&gt;The Lahman data is a huge dataset of baseball statistics. See the&#xA;&lt;a href=&#34;https://www.rdocumentation.org/packages/Lahman&#34;&gt;overview of the Sean &amp;ldquo;Lahman&amp;rdquo; baseball database&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;install.packages&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Lahman&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Lahman&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exercises&#34;&gt;Exercises&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;code&gt;People&lt;/code&gt; database has biographical information about the&#xA;players.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Make a histogram showing when players passed away&#xA;in the 20th century. Don&amp;rsquo;t use the default bin width.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.rdocumentation.org/packages/Lahman/versions/8.0-0/topics/AllstarFull&#34;&gt;&lt;code&gt;AllstarFull&lt;/code&gt;&#xA;dataset&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Make a bar chart showing the frequency of players being in&#xA;&amp;ldquo;x&amp;rdquo; all-star games. Only include players with x&amp;gt;6. Fill the&#xA;bars in with colors to denote Amerian League and National&#xA;League player counts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;strong&gt;Deleted&lt;/strong&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>13. Intro Exercises 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex3/</link>
      <pubDate>Thu, 19 Dec 2019 08:47:17 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-intro-ex3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;(a) Write a check-expect for &lt;code&gt;(question-1? 10 20)&lt;/code&gt;.&#xA;(b) Are there any inputs that will cause an error?&#xA;Explain why or why not.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;question-1?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1/2&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Simplify and identify any errors:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;question-2?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;boat-sinking?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;have-lifejackets?&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;boolean=?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;boat-sinking?&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;have-lifejackets?&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Simplify and identify any errors:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;eat-cheap?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;hungry?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;money&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcburger?&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;money&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;hungry?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;money&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcburger?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mcburger?&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the function &lt;code&gt;before-water?: string -&amp;gt; boolean&lt;/code&gt; that takes in&#xA;a string and determines if the string appears before the word&#xA;&amp;ldquo;water&amp;rdquo; in the dictionary.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Array Speedrun</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-5-speedrun/</link>
      <pubDate>Thu, 10 Jan 2019 09:41:00 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-array-ex-5-speedrun/</guid>
      <description>&lt;p&gt;Make create a two dimensional array of a given width and height filled&#xA;in a snake pattern with 0 and 1 as described below.&lt;/p&gt;&#xA;&lt;p&gt;The snake pattern starts with a 1, then has longer and longer&#xA;sequences of zeros separated by ones: 0 zeros, one, 1 zero, one, 2&#xA;zeroes, one, 3 zeroes, one, etc.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;11010010001000010000010000001&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The array is filled in by rows, first going to the right, then going&#xA;to the left, in the pattern shown by these &amp;ldquo;ascii arrows&amp;rdquo;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Board</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/135-board/</link>
      <pubDate>Thu, 03 Jun 2021 13:38:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/135-board/</guid>
      <description>&lt;p&gt;The first issue in dealing with &amp;ldquo;true reversi&amp;rdquo; is getting pieces from&#xA;the board.&lt;/p&gt;&#xA;&lt;h2 id=&#34;board-access&#34;&gt;Board Access&lt;/h2&gt;&#xA;&lt;p&gt;We will write a function to get the piece at a given location on the&#xA;board. This would be simple, except what should we do when that&#xA;location is empty?&lt;/p&gt;&#xA;&lt;h3 id=&#34;unoccupied&#34;&gt;Unoccupied&lt;/h3&gt;&#xA;&lt;p&gt;We will make a special piece that we use to indicate that the location&#xA;is empty. You should make your own by filling in &lt;code&gt;ZZZ&lt;/code&gt; with an&#xA;appropriate string or number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Flip Plan</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/137-plan/</link>
      <pubDate>Thu, 03 Jun 2021 13:38:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/137-plan/</guid>
      <description>&lt;p&gt;In &amp;ldquo;true reversi&amp;rdquo;, a play is required to flip one of the opponent&amp;rsquo;s&#xA;pieces. There are multiple sensible ways for you to program piece&#xA;flipping, one is explained here.&lt;/p&gt;&#xA;&lt;p&gt;This outline is just for context; there is nothing to write (yet)&#xA;using the information on this page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;flipping-plan&#34;&gt;Flipping Plan&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Determine how many steps in a given direction should be&#xA;flipped. In this plan, this is the most important step. It is&#xA;described below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.F Semester Review F</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-f/</link>
      <pubDate>Thu, 20 Jan 2022 06:57:37 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-f/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Version 0.9&lt;/p&gt;&#xA;&lt;h2 id=&#34;paper-programming&#34;&gt;Paper Programming&lt;/h2&gt;&#xA;&lt;!-- Pattern is not appropriate. Hard to see how to code even when &#xA;you know the pattern of digit+next digit --&gt;&#xA;&lt;p&gt;(Hard pattern; work with a group.)&#xA;We will work with a function &lt;code&gt;fa : number -&amp;gt; number&lt;/code&gt; whose purpose&#xA;is given by the check-expects below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 04</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-04/</link>
      <pubDate>Mon, 18 Oct 2021 11:51:07 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-04/</guid>
      <description>&lt;p&gt;Setup:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(define (short n)&#xA;  (beside (rectangle (- n 20) 10 &amp;#34;solid&amp;#34; &amp;#34;yellow&amp;#34;)&#xA;          (square 20 &amp;#34;solid&amp;#34; &amp;#34;goldenrod&amp;#34;)))&#xA;(define initial (short 300))&#xA;(define (draw-h-4 m)&#xA;  (overlay/align &amp;#34;right&amp;#34; &amp;#34;bottom&amp;#34;&#xA;                 m (rectangle 300 200 &amp;#34;solid&amp;#34; &amp;#34;lightblue&amp;#34;)))&#xA;(big-bang initial&#xA;  (on-draw draw-h-4)&#xA;  (on-mouse melody))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What &amp;ldquo;kind of thing&amp;rdquo; is the model? (Same question, restated: what&#xA;is the type of the model?)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the signature of &lt;code&gt;draw-h-4&lt;/code&gt;?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an accurate drawing of the first image shown.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Count Flips</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/140-flips/</link>
      <pubDate>Thu, 03 Jun 2021 13:38:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/140-flips/</guid>
      <description>&lt;p&gt;The plan is to count how many pieces will flip in a given&#xA;direction. The key part of this is a helper function that knows how&#xA;many pieces would be flipped so far in the analysis and a location (posn)&#xA;the board to continue analyzing.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Attachments&lt;/h4&gt;&#xA;&#xA;     &lt;section class=&#34;article&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/intermediate-cs/projects/reversi/140-flips/files/reversi-flip-examples.pdf&#34;&gt;reversi-flip-examples.pdf&lt;/a&gt;&#xA;(1383 kB)&#xA;&lt;/li&gt;&#xA;&lt;/section&gt;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The attachments are intended to be used to write check-expects for the&#xA;&lt;code&gt;count-flip-help&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;count-flip-outline&#34;&gt;Count Flip Outline&lt;/h2&gt;&#xA;&lt;p&gt;Counting how many pieces flip is done by summing the numbers of pieces&#xA;that are flipped in each direction. In a given direction, a helper&#xA;function examines a line of squares until it has figured out how many&#xA;pieces will flip in that sequence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch14</title>
      <link>https://wy-cs.info/ml/r4ds/ch14/</link>
      <pubDate>Thu, 22 Oct 2020 08:29:12 -0500</pubDate>
      <guid>https://wy-cs.info/ml/r4ds/ch14/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&#xA;&lt;p&gt;This chapter is incredibly useful. I recommend that you take notes, if&#xA;that helps you learn. At the very least read the chapter and the&#xA;&lt;a href=&#34;https://cran.r-project.org/web/packages/stringr/vignettes/stringr.html&#34;&gt;stringr vignette&lt;/a&gt;.&#xA;The tools of regular expressions are&#xA;available in most languages, including Python and Java.&lt;/p&gt;&#xA;&lt;p&gt;Below is a copy-and-paste of all of the good problems in Wickham&amp;rsquo;s&#xA;R4DS, &lt;a href=&#34;https://r4ds.had.co.nz/strings.html&#34;&gt;Chapter 14&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I.G Semester Review G</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-g/</link>
      <pubDate>Mon, 19 Dec 2022 10:25:06 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-g/</guid>
      <description>&lt;p&gt;Fall 2022, exam through Chapter 15 (conditionals), including&#xA;gradients.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;in-5-r?&lt;/code&gt;) Imagine drawing a circle centered at x=5 on the x-axis,&#xA;with a radius given by an input. A point x on the number line is in&#xA;that circle if x&amp;rsquo;s distance to 5 is less than or equal to the radius.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/sem1review/sem-review-g/number-line-explainer.png&#34; width=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Write a&#xA;function &lt;code&gt;in-5-r?&lt;/code&gt; that determines if a number x is within &amp;ldquo;radius&amp;rdquo;&#xA;of the number 5 on the number line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>big-bang 05</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/bigbang-05/</link>
      <pubDate>Tue, 19 Oct 2021 11:35:37 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/bigbang-05/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;a&#34;&gt;A&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(define (more n) (+ n 5))&#xA;(big-bang 25&#xA;  (on-tick more 0.2)&#xA;  (on-draw work))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You want to see an animation of a solid blue circle increasing in&#xA;radius in the center of a 400x300 black outline rectangle.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What kind of model is this animation using?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reversi Stack</title>
      <link>https://wy-cs.info/intermediate-cs/projects/reversi/150-stack/</link>
      <pubDate>Tue, 15 Jun 2021 21:30:45 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/projects/reversi/150-stack/</guid>
      <description>&lt;p&gt;This page describes a variation called &amp;ldquo;Reversi Stack&amp;rdquo;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;big-picture&#34;&gt;Big Picture&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A Piece now includes a stack field to count how many pieces are&#xA;stacked up at that location.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  (define-struct piece-stack (team loc stack))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Playing on your own stack increases the number of&#xA;pieces in your stack by one.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Playing on an empty square makes a stack of one of your own pieces.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Playing on an opponent&amp;rsquo;s stack decreases the size of the stack by&#xA;one, leaving the square empty if there are zero pieces in the stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-2a/</link>
      <pubDate>Sat, 09 Sep 2017 15:57:47 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-2a/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;&#xA;&lt;p&gt;On the line $y = 3x-5$, find at least 20 ordered pairs $(x,y)$ with&#xA;$0\le x \le 5$.&lt;/p&gt;&#xA;&lt;h2 id=&#34;class-work-for-2123&#34;&gt;Class work for 2.1&amp;ndash;2.3&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://projecteuler.net/problem=6&#34;&gt;Sum Square Difference&lt;/a&gt;&#xA;The sum of the squares of the first ten natural numbers is,&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; 1^2 + 2^2 + ... + 10^2 = 385&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The square of the sum of the first ten natural numbers is,&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (1 + 2 + ... + 10)^2 = 55^2 = 3025&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 - 385 = 2640.&lt;/p&gt;&#xA;&lt;p&gt;Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.3a</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-3a/</link>
      <pubDate>Tue, 11 Sep 2018 09:15:40 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-3a/</guid>
      <description>&lt;p&gt;Goals:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Range notation &lt;code&gt;[a,b..c]&lt;/code&gt; to make lists of integers.&lt;/li&gt;&#xA;&lt;li&gt;Apply a function to everything in a list by using the &amp;ldquo;list&#xA;comprehension&amp;rdquo;.&lt;/li&gt;&#xA;&lt;li&gt;Filter out some elements from an existing list using a list&#xA;comprehension.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;micro-projects&#34;&gt;Micro-projects&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;A list of the first 1000 integers.&lt;/li&gt;&#xA;&lt;li&gt;A list of the first 1000 perfect cubes.&lt;/li&gt;&#xA;&lt;li&gt;Set the variable &lt;code&gt;a3&lt;/code&gt; to be the sum of the first 100 perfect squares.&lt;/li&gt;&#xA;&lt;li&gt;The type signature for &lt;code&gt;a3&lt;/code&gt;, the previous answer..&lt;/li&gt;&#xA;&lt;li&gt;A list of all of the perfect squares between 90 and 1919.&lt;/li&gt;&#xA;&lt;li&gt;The type signature for a list of integers.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;em&gt;product&lt;/em&gt; of the numbers in the list of perfect squares above.&lt;/li&gt;&#xA;&lt;li&gt;A function &lt;code&gt;sqList&lt;/code&gt; to give all of the perfect squares between &lt;code&gt;lower&lt;/code&gt; and&#xA;&lt;code&gt;upper&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;The type signature for the function &lt;code&gt;sqList&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Use your function to get the first 17 perfect squares between 1500&#xA;and 4500.&lt;/li&gt;&#xA;&lt;li&gt;Write a new function sq25 that will return the first 25 perfect&#xA;squares between &lt;code&gt;lower&lt;/code&gt; and &lt;code&gt;upper&lt;/code&gt;. (If there are not 25, the&#xA;function will return however many there are.)&lt;/li&gt;&#xA;&lt;li&gt;A list with every third lowercase letter, starting at &amp;lsquo;a&amp;rsquo; then&#xA;&amp;rsquo;d&amp;rsquo;. (Hint: letters work the same as numbers.)&lt;/li&gt;&#xA;&lt;li&gt;A string with the last half of the alphabet (beginning with &amp;rsquo;n&amp;rsquo;).&lt;/li&gt;&#xA;&lt;li&gt;Write a function that takes in a list and produces a list of&#xA;ordered pairs  &lt;code&gt;(item, more)&lt;/code&gt;, giving the item and how many more&#xA;items after it are in the list.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;basic-functions&#34;&gt;Basic functions&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The remainder when 921013 is divided by 31.&lt;/li&gt;&#xA;&lt;li&gt;The whole number of times that 23148 is divisible by 17.&lt;/li&gt;&#xA;&lt;li&gt;Find five to the twelfth power.&lt;/li&gt;&#xA;&lt;li&gt;Find seven to the 707 power.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;medium-functions&#34;&gt;Medium functions&lt;/h2&gt;&#xA;&lt;p&gt;Write the signature for each.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch 6 Misc Exercises</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-misc-ex/</link>
      <pubDate>Thu, 21 Nov 2019 13:51:41 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-misc-ex/</guid>
      <description>&lt;p&gt;Look for opportunities to use &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;fold&lt;/code&gt;, and&#xA;&lt;code&gt;scan&lt;/code&gt;. Even if you have a solution without one, spend a minute&#xA;thinking about it. (It is OK to have solutions that do not use these&#xA;functions.)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;a. &lt;code&gt;early :: (Int, String) -&amp;gt; Bool&lt;/code&gt; Give true when the number is&#xA;even or the string starts with &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt;; false otherwise.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; ck1a = and [ early (20,&amp;quot;Cattle&amp;quot;), early  (5,&amp;quot;Banana&amp;quot;),&#xA;              early (1, &amp;quot;Antigone&amp;quot;), not $ early (3,&amp;quot;Fail&amp;quot;)]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;b. &lt;code&gt;addPosn :: (Num a) =&amp;gt; (a,a) -&amp;gt; (a,a) -&amp;gt; (a,a)&lt;/code&gt; Add the&#xA;corresponding x and y coordinates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.3b</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-3b/</link>
      <pubDate>Tue, 07 Sep 2021 10:08:04 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-3b/</guid>
      <description>&lt;p&gt;A few places use this variable:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;word = &amp;quot;alphabet soup is tasty&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Try each question, ask neighbors and discuss. These took about 25&#xA;minutes of thinking and talking, with some help along the way.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make the pattern &lt;code&gt;[1,4,7,10,13,16,19,22,25,28]&lt;/code&gt; without so much&#xA;typing.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make the pattern &lt;code&gt;[&#39;a&#39;,&#39;d&#39;,&#39;g&#39;,&#39;j&#39;,&#39;m&#39;]&lt;/code&gt; without so much&#xA;typing. Numbers and letters work in very similar ways.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How do you take two lists of numbers and make a list of ordered&#xA;pairs, like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.4</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-4/</link>
      <pubDate>Tue, 15 Sep 2020 12:23:08 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-4/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Please write type signatures for all of your functions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;demo n xs = [ n*x | x &amp;lt;- xs]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write an example of how you would call &lt;code&gt;demo&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the type signature of &lt;code&gt;demo&lt;/code&gt; assuming we make all numbers&#xA;&lt;code&gt;Int&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add an exception so that &lt;code&gt;demo 0 anything&lt;/code&gt; always returns the empty&#xA;list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.5</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-5/</link>
      <pubDate>Fri, 18 Sep 2020 12:06:24 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-5/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;opener&#34;&gt;Opener&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;removeOne&lt;/code&gt; function takes in a single number and a list of numbers.&#xA;It removes one copy of the number from the list of numbers.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;roce = [&#xA;  removeOne 5 [1,2,3] == [1,2,3]&#xA;  ,removeOne 5 [1,2,5,4] == [1,2,4]&#xA;  ,removeOne 9 [9,1,9,2,9] == [1,9,2,9]&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;Write the type signature for &lt;code&gt;removeOne&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Write the function.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;removeall&#34;&gt;removeAll&lt;/h2&gt;&#xA;&lt;p&gt;Write a function that removes all of the copies of a given number from&#xA;a list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Isthmus 2D</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-2d-a/</link>
      <pubDate>Tue, 15 Jan 2019 08:53:54 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-2d-a/</guid>
      <description>&lt;p&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/Isthmus&#34;&gt;isthmus&lt;/a&gt; is a narrow piece&#xA;of land with water on both sides, connecting two larger areas. Panama&#xA;is an isthmus connecting North and South America.&lt;/p&gt;&#xA;&lt;p&gt;An isthmus location contains a non-zero number with the same number to&#xA;the left and right, and has zeros above and below.&lt;/p&gt;&#xA;&lt;p&gt;In the example below, the middle 5 is an isthmus location.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  0&#xA;5 5 5&#xA;  0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Given 2d array of ints, count the number of isthmus locations that&#xA;contain odd numbers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universe Mistakes</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-mistakes/</link>
      <pubDate>Wed, 09 May 2018 10:38:49 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-mistakes/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A &lt;code&gt;package&lt;/code&gt; must have the entire model as its first argument. You can&amp;rsquo;t put part of the model in the first argument and another part in the second argument (where the message goes).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Do not write recursive functions that take a &lt;code&gt;model&lt;/code&gt; as an input.&#xA;It is a bad idea. Your code gets more complicated and there is no benefit.&#xA;Instead, write a helper function that takes in the list part of the model&#xA;(along with any other needed information).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rubric</title>
      <link>https://wy-cs.info/nand/ch10/rubric/</link>
      <pubDate>Wed, 07 May 2025 10:55:01 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch10/rubric/</guid>
      <description>&lt;p&gt;The most important point is to &lt;strong&gt;give specifics&lt;/strong&gt;. There is a world of&#xA;difference between &amp;ldquo;my code has some bugs&amp;rdquo; and &amp;ldquo;when I got to&#xA;processing the &lt;code&gt;constructor&lt;/code&gt; command I had forgotten to include a&#xA;varName for the name of the function&amp;rdquo;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Problem areas. What did you find difficult? Why?&lt;/li&gt;&#xA;&lt;li&gt;Good code, bad code. Show an example of each. Explain what makes it&#xA;good or bad.&lt;/li&gt;&#xA;&lt;li&gt;What helped you achieve the success that you did? (E.g.,&#xA;check-expects, good luck, long hours of debugging.)&lt;/li&gt;&#xA;&lt;li&gt;What advice would you give others attempting this project?&lt;/li&gt;&#xA;&lt;li&gt;Any advice for the teacher?&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.6</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-6/</link>
      <pubDate>Mon, 13 Sep 2021 07:09:00 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-6/</guid>
      <description>&lt;h2 id=&#34;simplified-design&#34;&gt;Simplified Design&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Signature&lt;/li&gt;&#xA;&lt;li&gt;Purpose (frequently given in the problem)&lt;/li&gt;&#xA;&lt;li&gt;Examples&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Build from simple to complex&lt;/li&gt;&#xA;&lt;li&gt;Roadmap for writing&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Write code.&lt;/li&gt;&#xA;&lt;li&gt;Test (&lt;code&gt;check-expect&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;opener&#34;&gt;Opener&lt;/h2&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;lotsOfLetters [4] == &amp;quot;aaaa&amp;quot;&#xA;lotsOfLetters [3,1,4] == &amp;quot;aaabcccc&amp;quot;&#xA;lotsOfLetters [3,1,4,1,5] == &amp;quot;aaabccccdeeeee&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;More than one approach works well!&lt;/p&gt;&#xA;&lt;p&gt;Today: handle one letter at a time, use a helper.&lt;/p&gt;&#xA;&lt;p&gt;Multiple simple helpers is good.&lt;/p&gt;&#xA;&lt;h2 id=&#34;check-expect&#34;&gt;Check-Expect&lt;/h2&gt;&#xA;&lt;p&gt;Just make a list of Boolean values that should all be True.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.B1</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-b1/</link>
      <pubDate>Mon, 12 Sep 2022 13:01:58 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-b1/</guid>
      <description>&lt;p&gt;Review assignment.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;p1&lt;/code&gt;) Write a function &lt;code&gt;p1&lt;/code&gt; that returns true if a number is a multiple&#xA;of 17. Also write a signature for &lt;code&gt;p1&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The following function&amp;rsquo;s purpose is to&#xA;return the elements of xs that are odd multiples of 7. What is&#xA;wrong with the function as written? Also write an improved version.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; p2 xs = [ x | x &amp;lt;- xs, x `elem` [1,3..] &amp;amp;&amp;amp; x `elem` [7,14..]]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;p3&lt;/code&gt; takes in a list of words and returns a list with&#xA;all of the words that have more than 4 letters. Also include words&#xA;that alphabetically come after &amp;ldquo;x&amp;rdquo;. Write the signature and the&#xA;function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell CW II.B2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/cw-b2/</link>
      <pubDate>Wed, 14 Sep 2022 12:52:31 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/cw-b2/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Review questions:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;b1&lt;/code&gt;) Make a list of ordered pairs which contain the square and cube of&#xA;each counting number 1 through 10.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; b1 == [(1,1),(2^2,2^3),(3^2, 3^3),(4^2,4^3), etc. ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;b2&lt;/code&gt;) Given a number m, write a function &lt;code&gt;b2&lt;/code&gt; to make a list of&#xA;all of the ordered pairs in &lt;code&gt;b1&lt;/code&gt; where $m$ is in the closed interval&#xA;$[x,y]$. That means $x \le m \le y$. As an example, think of $m=20$&#xA;and the ordered pair $(9,27)$ from &lt;code&gt;b1&lt;/code&gt;. Since $m=20$ is between&#xA;$x=9$ and $y=27$, we would say yes, $m=20$ is in the closed interval&#xA;$[x=9,y=27]$.&#xA;An example with a list of intervals is:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Design Process</title>
      <link>https://wy-cs.info/ai/python/299-design/</link>
      <pubDate>Fri, 15 Oct 2021 11:00:34 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/299-design/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Show you understand the problem.&lt;/li&gt;&#xA;&lt;li&gt;Write using a fast feedback process.&lt;/li&gt;&#xA;&lt;li&gt;Demonstrate your code works.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;understand-the-problem&#34;&gt;Understand the problem&lt;/h2&gt;&#xA;&lt;p&gt;Examples that you have worked out show that you understand the&#xA;problem. Pick two examples and show:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What information is input to the function?&lt;/li&gt;&#xA;&lt;li&gt;What is the output from the function?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;If the problem involves a &lt;em&gt;process&lt;/em&gt;, you should demonstrate the&#xA;process working in some step-by-step manner.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fast-feedback&#34;&gt;Fast feedback&lt;/h2&gt;&#xA;&lt;p&gt;One of the biggest problems beginner face is they hold incorrect&#xA;beliefs about what the computer does at some point. Several steps&#xA;later, the unexpected output causes an error. Confusion ensues.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 5 Quiz</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch05/ch05-quiz/</link>
      <pubDate>Thu, 07 Nov 2019 13:23:13 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch05/ch05-quiz/</guid>
      <description>&lt;p&gt;No notes, no book, do by yourself.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stone-age&#34;&gt;Stone Age&lt;/h2&gt;&#xA;&lt;p&gt;Write each of the following, using nothing but &amp;ldquo;stone age&amp;rdquo; tools:&#xA;guards, patterns, &lt;code&gt;==&lt;/code&gt; (etc), &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;. No length, head, tail, etc.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;myintercalate :: String -&amp;gt; [String] -&amp;gt; String&lt;/code&gt;. Given a separator&#xA;and a list of strings, create a string containing the separator in&#xA;between each of the strings (but not before the first or after the last).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; myintercalate &amp;quot;, &amp;quot; [&amp;quot;Witch&amp;quot;,&amp;quot;Bat&amp;quot;,&amp;quot;Broom&amp;quot;] == &amp;quot;Witch, Bat, Broom&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;myfindGE :: Int -&amp;gt; [Int] -&amp;gt; [Int]&lt;/code&gt;.  a list of&#xA;everything greater than or equal to the first argument.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Haskell HW 2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/hw-a2/</link>
      <pubDate>Fri, 13 Sep 2019 15:59:25 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/hw-a2/</guid>
      <description>&lt;p&gt;All of the points you should work with have &lt;code&gt;Int&lt;/code&gt; coordinates. So far&#xA;you only know &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, and lists of each of those.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;onLine&lt;/code&gt; that takes in a slope &lt;code&gt;m&lt;/code&gt;, a y-intercept &lt;code&gt;b&lt;/code&gt;, and a point &lt;code&gt;(x0,y0)&lt;/code&gt; and gives back True if the point is on the line &lt;code&gt;y=m*x+b&lt;/code&gt; and false otherwise.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;moreThan100&lt;/code&gt; that takes in a list of numbers and puts out a list of numbers. The output is the same as the input with all of the numbers less than or equal to 100 removed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 2 Test</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/ch02-test/</link>
      <pubDate>Thu, 12 Sep 2019 13:34:57 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/ch02-test/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;This is a test, please do it on your own and do not help others. You&#xA;are supposed to show your understanding of Haskell. Just getting an&#xA;answer might not show a good understanding.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create the following list with less effort:&#xA;&lt;code&gt;[31,35,39,43,47,...,431] &lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a list of all of the odd numbers less than 1000 that are&#xA;perfect squares. Notes:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 3 Quiz 2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch03/ch03-quiz-2/</link>
      <pubDate>Thu, 26 Sep 2019 18:56:52 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch03/ch03-quiz-2/</guid>
      <description>&lt;p&gt;Write a Haskell program to do each of the following.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Multiply all of the integers from 2 through 50, inclusive.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Give a list of integer coordinate points (x,y) on the graph&#xA;y=5x^2-80 that have y-coordinate less than 100.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a signature and function for &lt;code&gt;triplePay&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; triplePay &amp;quot;$75.15&amp;quot; == 225.45&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;signature&lt;/li&gt;&#xA;&lt;li&gt;function definition&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;It is acceptable if your numbers print with an extra 0.00001 (or&#xA;something similar).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recursion A</title>
      <link>https://wy-cs.info/intermediate-cs/intensive/recursion-a/</link>
      <pubDate>Thu, 27 Feb 2025 10:15:13 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/intensive/recursion-a/</guid>
      <description>&lt;p&gt;Trace the steps of executing the Racket code.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1&#34;&gt;1.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))]))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rec&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3.14&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2&#34;&gt;2.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;star&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;purple&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))]))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dsq&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Details</title>
      <link>https://wy-cs.info/nand/ch08/test-cases/details/</link>
      <pubDate>Wed, 19 Feb 2025 17:14:48 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/test-cases/details/</guid>
      <description>&lt;h2 id=&#34;level-i-program-flow&#34;&gt;Level I: Program Flow&lt;/h2&gt;&#xA;&lt;p&gt;These tests use &lt;code&gt;if-goto&lt;/code&gt; but no functions. All variable setup is done&#xA;by the script.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;BasicLoop.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;FibonacciSeries.&lt;/p&gt;&#xA;&lt;p&gt;Notes: arg[0] (RAM[400]) is the length of the Fibonacci series to&#xA;create. Turn it up to 8 and you should see 3000-3007 filled.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;level-ii-functions&#34;&gt;Level II: Functions&lt;/h2&gt;&#xA;&lt;p&gt;The first tests are &amp;ldquo;manual setup&amp;rdquo; tests.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SimpleFunction: this test sets up a fake stack frame in the test&#xA;script, so it does not require you to have a working call. It&#xA;accesses arguments and locals.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing Checks</title>
      <link>https://wy-cs.info/nand/ch05/writing-checks/</link>
      <pubDate>Wed, 09 Oct 2024 19:57:13 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch05/writing-checks/</guid>
      <description>&lt;p&gt;We will practice setting up situations that test to see if pieces of&#xA;your CPU are working.&lt;/p&gt;&#xA;&lt;p&gt;Appendix A3.3 covers testing programs on the CPU emulator.&lt;/p&gt;&#xA;&lt;h2 id=&#34;review&#34;&gt;Review&lt;/h2&gt;&#xA;&lt;p&gt;The CPU has inputs: &lt;code&gt;inM&lt;/code&gt;, &lt;code&gt;instruction&lt;/code&gt;, and &lt;code&gt;reset&lt;/code&gt;.&#xA;It has outputs &lt;code&gt;outM&lt;/code&gt;, &lt;code&gt;writeM&lt;/code&gt;, &lt;code&gt;addressM&lt;/code&gt;, and &lt;code&gt;pc&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Inside the CPU, the components are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Instruction memory (&amp;ldquo;ROM&amp;rdquo;) - determined by loading a program.&lt;/li&gt;&#xA;&lt;li&gt;Data memory (&amp;ldquo;RAM&amp;rdquo;) - visible in the emulator.&lt;/li&gt;&#xA;&lt;li&gt;Program counter (&amp;ldquo;PC&amp;rdquo;).&lt;/li&gt;&#xA;&lt;li&gt;Registers: (&amp;ldquo;ARegister&amp;rdquo;, &amp;ldquo;DRegister&amp;rdquo;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;testing-jumps&#34;&gt;Testing Jumps&lt;/h2&gt;&#xA;&lt;p&gt;In the CPU, we want to test the instruction &lt;code&gt;D;JLE&lt;/code&gt;. Our initial setup&#xA;will be &lt;code&gt;A=17&lt;/code&gt;, &lt;code&gt;D=-23&lt;/code&gt;, and &lt;code&gt;RAM[17] = 31&lt;/code&gt;.&#xA;The instructions to create the  initial setup are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing</title>
      <link>https://wy-cs.info/nand/racket/testing/</link>
      <pubDate>Mon, 07 Oct 2024 22:05:42 -0500</pubDate>
      <guid>https://wy-cs.info/nand/racket/testing/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; &amp;#34;demo2.rkt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;test-engine/racket-tests&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;module+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-3/2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; ordinarily bad style to have parens on lines by themselves&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; How would it matter if tests were not in the test submodule?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;module+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;module+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will work in DrRacket as written. Another way: run &lt;code&gt;raco test demo2&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyTest</title>
      <link>https://wy-cs.info/ai/python/pytest/</link>
      <pubDate>Wed, 20 Sep 2023 10:36:20 -0500</pubDate>
      <guid>https://wy-cs.info/ai/python/pytest/</guid>
      <description>&lt;p&gt;The simplest way of testing is to use&#xA;&lt;a href=&#34;https://docs.pytest.org/en/latest/&#34;&gt;pytest&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;writing-tests&#34;&gt;Writing tests&lt;/h2&gt;&#xA;&lt;p&gt;Pytest automatically runs functions whose names begin with &lt;code&gt;test&lt;/code&gt;. Use&#xA;&lt;code&gt;assert&lt;/code&gt; to check that values are what you expect.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;## double.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;test_double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;assert&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;running-tests&#34;&gt;Running tests&lt;/h2&gt;&#xA;&lt;p&gt;There are two ways to run your tests: manually or automatically.&lt;/p&gt;&#xA;&lt;h3 id=&#34;method-1-manually-run&#34;&gt;Method 1: Manually Run&lt;/h3&gt;&#xA;&lt;p&gt;Open the console and type &lt;code&gt;pytest main.py&lt;/code&gt;. All of your test cases in&#xA;&lt;code&gt;main.py&lt;/code&gt; will run.&lt;/p&gt;&#xA;&lt;h3 id=&#34;method-2-automatically-run&#34;&gt;Method 2: Automatically Run&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a separate file called &lt;code&gt;test_something.py&lt;/code&gt; that contains&#xA;your testing code. The &lt;code&gt;&amp;quot;test_&amp;quot;&lt;/code&gt; part of the filename is required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jan A</title>
      <link>https://wy-cs.info/intermediate-cs/ch17/jan-a/</link>
      <pubDate>Mon, 03 Jan 2022 14:13:49 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch17/jan-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;How would you create this scene?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;figure&gt;&lt;a href=&#34;ch17-jan-a.png&#34;&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch17/jan-a/ch17-jan-a.png&#34; width=&#34;300&#34;&gt;&lt;/a&gt;&#xA;&lt;/figure&gt;&#xA;&lt;h2 id=&#34;ellipse-width-animation&#34;&gt;Ellipse width animation&lt;/h2&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an animation where moving the mouse horizontally changes the&#xA;width of the ellipse. The ellipse width should be 0 when the mouse&#xA;is in the middle of the screen (x=250). See below for check-expects.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When the mouse moves to x=400, y=75, the width of the ellipse&#xA;is 300. Write a check-expect.&lt;/li&gt;&#xA;&lt;li&gt;When the mouse moves to x=250, y=120, the width of the ellipse&#xA;is 0. Write a check-expect.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;stopping-animation&#34;&gt;Stopping animation&lt;/h2&gt;&#xA;&lt;p&gt;Now add code so that clicking in the blue circle makes the animation&#xA;stop. We will do that by making the width negative when the animation&#xA;is supposed to stop.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. AQuiz IAnswers</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/11-answers-aquiz/</link>
      <pubDate>Fri, 22 Feb 2019 09:26:13 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/11-answers-aquiz/</guid>
      <description>&lt;h2 id=&#34;interface-ianswers&#34;&gt;Interface: IAnswers&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;IAnswers&lt;/code&gt; interface has the methods:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;int numAnswers();&#xA;int getAnswer(int k);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;class-mcanswers&#34;&gt;Class: MCAnswers&lt;/h2&gt;&#xA;&lt;p&gt;The multiple choice answers class &lt;code&gt;MCAnswers&lt;/code&gt; implements the &lt;code&gt;IAnswers&lt;/code&gt;&#xA;interface. Its constructor is:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;public MCAnswers (int[] answers)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;abstract-class-aquiz&#34;&gt;Abstract class: AQuiz&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Constructor takes in an &lt;code&gt;IAnswers&lt;/code&gt; key of correct answers.&lt;/li&gt;&#xA;&lt;li&gt;method &lt;code&gt;int score(IAnswers student)&lt;/code&gt; gives the score for the&#xA;remembered student answer sheet.&lt;/li&gt;&#xA;&lt;li&gt;abstract method &lt;code&gt;int scoreOne(int correct, int given)&lt;/code&gt; returns the&#xA;score for a single answer.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;class-mcquiz&#34;&gt;Class: MCQuiz&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Subclass of AQuiz&lt;/li&gt;&#xA;&lt;li&gt;Constructor takes in a &lt;code&gt;IAnswers&lt;/code&gt; key of correct answers.&lt;/li&gt;&#xA;&lt;li&gt;Scoring in the &lt;code&gt;scoreOne&lt;/code&gt; method is 4 points for a correct answer&#xA;and -1 point for a wrong answer.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;    int[] ans = {2,2,1,3,4};&#xA;    int[] student = {2,2,4,3,4};&#xA;    IAnswers a = new MCAnswers(ans);&#xA;    IAnswers s = new MCAnswers(student);&#xA;    AQuiz b = new MCQuiz(a);&#xA;    int result = b.score(s);&#xA;    System.out.println(result); // prints 15 = +4 +4 -1 +4 +4&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Quiz 1 Corrections</title>
      <link>https://wy-cs.info/ecs/scratch/corrections-quiz-1/</link>
      <pubDate>Fri, 15 Feb 2019 10:58:52 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/corrections-quiz-1/</guid>
      <description>&lt;p&gt;Get half of the points you lost back by doing corrections.&#xA;No limit, you can get more points even if you have an A already.&lt;/p&gt;&#xA;&lt;h2 id=&#34;general-instructions&#34;&gt;General Instructions&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain briefly what you did wrong. Examples:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The block &lt;em&gt;x&lt;/em&gt; does not exist.&lt;/li&gt;&#xA;&lt;li&gt;The block &lt;em&gt;y&lt;/em&gt; cannot fit inside a forever loop because it has a&#xA;round top (&amp;ldquo;hat block&amp;rdquo;).&lt;/li&gt;&#xA;&lt;li&gt;The forever means my motion never stops.&lt;/li&gt;&#xA;&lt;li&gt;No forever means I only check one time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Redo by writing an answer to a similar problem. (Change direction of&#xA;motion, action, or trigger for action.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Quiz M</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-1d-m/</link>
      <pubDate>Tue, 15 Jan 2019 21:36:37 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-1d-m/</guid>
      <description>&lt;p&gt;(&lt;code&gt;back13&lt;/code&gt;) Take each multiple of 13 that appears in the array and change all of&#xA;the numbers before it to be that multiple of 13, until you come to&#xA;another multiple of 13.&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;back13([11,12,13,14])&lt;/code&gt; =&amp;gt; &lt;code&gt;[13,13,13,14]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;back13([40,39,50,52,60])&lt;/code&gt; =&amp;gt; &lt;code&gt;[39,39,52,52,60]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;back13([21,23,25,26,90,65,17])&lt;/code&gt; =&amp;gt; &lt;code&gt;[26,26,26,26,65,65,17]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>12. Quiz N</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-1d-n/</link>
      <pubDate>Tue, 22 Jan 2019 09:05:31 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-quiz-1d-n/</guid>
      <description>&lt;p&gt;(&lt;code&gt;similarEnds&lt;/code&gt;)&#xA;An array has similar N-ends if the front and back N numbers are&#xA;in the reversed order.&lt;/p&gt;&#xA;&lt;p&gt;Return the largest N value for which an array has the same N-ends.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;N is a positive integer.&lt;/li&gt;&#xA;&lt;li&gt;Give 0 if the ends are not similar at all.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;similarEnds([20,30,40])&lt;/code&gt; =&amp;gt; &lt;code&gt;0&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;similarEnds([20,30,4,5,30,20])&lt;/code&gt; =&amp;gt; &lt;code&gt;2&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;similarEnds([20,30,40,50,50,40,30,20])&lt;/code&gt; =&amp;gt; &lt;code&gt;8&lt;/code&gt;. The repeating segments overlap.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;similarEnds([10,20,30,20,10])&lt;/code&gt; =&amp;gt; &lt;code&gt;5&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Checkpoint B</title>
      <link>https://wy-cs.info/nand/ch09/checkpoint-b/</link>
      <pubDate>Tue, 04 Mar 2025 12:04:58 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch09/checkpoint-b/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;number-theory&#34;&gt;Number Theory&lt;/h2&gt;&#xA;&lt;p&gt;We are writing a bunch of number-related functions. Even though many&#xA;of them have nothing to do with prime numbers, the class is called &lt;code&gt;Prime&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;int nprimes&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Array primes&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;accessor-methods&#34;&gt;Accessor methods&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;method int getNPrimes()&lt;/code&gt;: How many primes are in the array? This&#xA;should be stored in the &lt;code&gt;nprimes&lt;/code&gt; variable.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;method int getPrime(int k)&lt;/code&gt;: Get the kth prime, starting with&#xA;getPrime(0) = 2.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;functions&#34;&gt;Functions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;function boolean divides(int k, int n)&lt;/code&gt;: True when k divides n.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;function int isqrt(n)&lt;/code&gt;: Returns the greatest integer k with k*k &amp;lt;= n.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;function int countDivisors(int n)&lt;/code&gt;: Returns the number of divisors&#xA;of n. countDivisors(7) = 2.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;function Array divisors(int k)&lt;/code&gt;: An Array containing the divisors&#xA;of k in ascending order.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;more-methods&#34;&gt;More Methods&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;constructor Prime new(int k)&lt;/code&gt;: Create a Prime object.&#xA;The object should contain:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;an integer: the number of primes found (this will be k);&lt;/li&gt;&#xA;&lt;li&gt;an array of integers that is filled with the first&#xA;k prime numbers. When k=2 the array contains only the numbers 2&#xA;and 3.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;method boolean isKnownComposite(int n)&lt;/code&gt;: True when the number is&#xA;divisible by some number in the primes list, but is not itself prime.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Main.txt&#34;&gt;Main.jack&lt;/a&gt; testing code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class Prime {&#xA;  field int nprimes&#xA;  field Array primes;&#xA;&#xA;  method int getNPrimes() { return nprimes; }&#xA;  method int getPrime(int k) { return primes[k]; }&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;common-issues&#34;&gt;Common Issues&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Constructors need to return &lt;code&gt;this&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Recursion B</title>
      <link>https://wy-cs.info/intermediate-cs/intensive/recursion-b/</link>
      <pubDate>Fri, 28 Feb 2025 07:09:37 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/intensive/recursion-b/</guid>
      <description>&lt;p&gt;Trace every step.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1&#34;&gt;1.&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;helper&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;string=?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;light blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;light blue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mystery&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;cond&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;empty-image&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;circle&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;helper&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;helper&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))]))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Trace:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;(helper &amp;quot;pink&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(helper &amp;quot;light blue&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(helper &amp;quot;orange&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(mystery 50 20 60 &amp;quot;orange&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(mystery 50 20 70 &amp;quot;light blue&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;(mystery 40 30 120 &amp;quot;orange&amp;quot;)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;What could make this image?&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/intensive/recursion-b/bullseye-1.png&#34;&gt;&#xA;&lt;/figure&gt;</description>
    </item>
    <item>
      <title>Statics</title>
      <link>https://wy-cs.info/nand/ch08/test-cases/statics/</link>
      <pubDate>Wed, 19 Feb 2025 18:56:52 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/test-cases/statics/</guid>
      <description>&lt;p&gt;Test setup:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RAM[0]=256 in the script.&lt;/li&gt;&#xA;&lt;li&gt;Tester is responsible for starting &lt;code&gt;Sys.init&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Files:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Sys.vm&#34;&gt;Sys.vm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Class1.vm&#34;&gt;Class1.vm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Class2.vm&#34;&gt;Class2.vm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Read the book if you are unfamiliar with handling code given in&#xA;multiple files.&lt;/p&gt;&#xA;&lt;p&gt;Results:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stack, starting at RAM[256] should contain: 111, 222, 23, 15, 6, 8.&lt;/li&gt;&#xA;&lt;li&gt;SP=262&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>7. Review 1</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-1/</link>
      <pubDate>Thu, 24 Oct 2024 07:55:39 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-1/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;chapter-6&#34;&gt;Chapter 6&lt;/h2&gt;&#xA;&lt;p&gt;Common difficult topics: lambda and fold.&lt;/p&gt;&#xA;&lt;p&gt;Generally familiar topics, but don&amp;rsquo;t forget: map and filter.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;r1&lt;/code&gt; is supposed to remove multiples of a given number &lt;code&gt;m&lt;/code&gt;&#xA;from a list &lt;code&gt;nums&lt;/code&gt;, and then output a list whose items are &lt;code&gt;m&lt;/code&gt;&#xA;times the squares of the remaining items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Quiz B</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/11-quiz-b/</link>
      <pubDate>Mon, 25 Feb 2019 08:50:40 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/11-quiz-b/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Clothes&lt;/code&gt; interface has &lt;code&gt;int fashion()&lt;/code&gt; and &lt;code&gt;int warmth()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;HeadCovering&lt;/code&gt; is a class that implements the &lt;code&gt;Clothes&lt;/code&gt; interface. Its constructor&#xA;sets fashion and warmth, in that order.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;WoolClothes&lt;/code&gt; is a class that implements the &lt;code&gt;Clothes&lt;/code&gt; interface. It&#xA;takes in a &lt;code&gt;Clothes&lt;/code&gt; object in its constructor. It adds 5 to&#xA;the warmth provided by the Clothes because they are made of wool.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;Person&lt;/code&gt; is an abstract class with a &lt;code&gt;String name&lt;/code&gt; field and a&#xA;&lt;code&gt;String getName()&lt;/code&gt; function, as well as abstract methods &lt;code&gt;int getWarmth()&lt;/code&gt; and &lt;code&gt;int getFashion()&lt;/code&gt;. Constructor sets the name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced: Aimbooster</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/aimbooster/</link>
      <pubDate>Thu, 10 Jan 2019 14:21:43 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/aimbooster/</guid>
      <description>&lt;p&gt;In this animation you copy &lt;a href=&#34;https://aimbooster.com&#34;&gt;AimBooster.com&lt;/a&gt;,&#xA;but simplified so you can make it with what you know from Chapter 20.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A single circle is at a random place.&lt;/li&gt;&#xA;&lt;li&gt;Radius increases.&lt;/li&gt;&#xA;&lt;li&gt;Clicking on the circle gives you points inversely proportional to&#xA;the radius (maybe 100/radius).&lt;/li&gt;&#xA;&lt;li&gt;When the circle is hit, it disappears and another starts growing.&lt;/li&gt;&#xA;&lt;li&gt;When the circle reaches a certain radius it disappears.&lt;/li&gt;&#xA;&lt;li&gt;After missing three circles, the game is over.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Fibonacci</title>
      <link>https://wy-cs.info/nand/ch08/test-cases/fibonacci/</link>
      <pubDate>Wed, 19 Feb 2025 19:10:50 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/test-cases/fibonacci/</guid>
      <description>&lt;p&gt;This test is a modification of FibonacciElement to compute a number of&#xA;elements of the Fibonacci sequence. It should be easier to track down any&#xA;errors this way.&lt;/p&gt;&#xA;&lt;p&gt;The translated code should have a standard prelude that sets SP=256&#xA;and jumps to Sys.init.&lt;/p&gt;&#xA;&lt;h2 id=&#34;files&#34;&gt;Files&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Main.vm&#34;&gt;Main.vm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;Sys.vm&#34;&gt;Sys.vm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stack contains: 0, 1, 1, 2, 3, 5, 8, 13.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>7. Review 2</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-2/</link>
      <pubDate>Mon, 28 Oct 2024 11:42:14 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-2/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;These exercises are written to give practice using a &lt;code&gt;fold&lt;/code&gt;&#xA;operation. Your solution should have the form&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;f xs = foldl fhelp initial xs&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;rt&lt;/code&gt;) Make a function to produce a reversed running total of the&#xA;integers in the&#xA;input as well as the count of how many numbers appeared.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Quiz C</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/11-quiz-c/</link>
      <pubDate>Tue, 15 Mar 2022 21:18:59 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/11-quiz-c/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;A &lt;code&gt;Plant&lt;/code&gt; prefers to live in a certain range of temperatures, known&#xA;in the US as &amp;ldquo;hardiness zones&amp;rdquo; - integers from 1 through 13. Write a&#xA;constructor for a plant that sets its name and the low and high&#xA;numbers for the zones the plant tolerates (also see question 2).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Plant&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// hardiness zones&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 1A. You write a constructor&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 2. The zone method is described below.&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;zone&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;min_temp_F&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Other methods&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getLow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;low&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getHigh&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;high&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;getName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Hardiness_zone&#34;&gt;hardiness zone&lt;/a&gt;&#xA;of a plant is determined by the &amp;ldquo;average annual extreme minimum&#xA;temperature&amp;rdquo;. See the table below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Review 3</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-3/</link>
      <pubDate>Wed, 06 Nov 2024 06:56:06 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch07/ch7-review-3/</guid>
      <description>&lt;p&gt;This review covers a little bit of &lt;code&gt;Maybe&lt;/code&gt;, sorting, and folding. It&#xA;is designed to be done on paper not the computer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;maybe&#34;&gt;Maybe&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You might buy something at the store. If your money is at least&#xA;100, buy &amp;ldquo;Jeans&amp;rdquo;. If your money is at least 30, buy&#xA;&amp;ldquo;Shirt&amp;rdquo;. Otherwise, buy nothing. Write the &lt;code&gt;shop&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; shop :: Int -&amp;gt; Maybe String&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You work in a store and your job is to go to Customer Service, pick&#xA;up any item there, and return it to its place on the shelf. &amp;ldquo;Soft&#xA;drink&amp;rdquo; goes in aisle 10. &amp;ldquo;Toilet paper&amp;rdquo; is aisle 7. Any other item&#xA;goes to aisle 11. If there is nothing to return, then go to&#xA;aisle 1 and straighten up the area. Write the &lt;code&gt;aisle&lt;/code&gt; function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Connect Four Rubric</title>
      <link>https://wy-cs.info/ap-cs/haskell/connect-four/rubric/</link>
      <pubDate>Fri, 13 Oct 2017 10:40:15 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/connect-four/rubric/</guid>
      <description>&lt;p&gt;&lt;strong&gt;DRAFT: MAY CHANGE&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;There are four functions that you are expected to design and test:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;draw_board&lt;/code&gt;: Create a String representation of the board.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;is_legal_move&lt;/code&gt;: True if the attempted move is legal. Used to prevent players from moving in full columns or playing in column -5.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;is_won&lt;/code&gt;: True if the game is over (either player has four in a row).&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;make_move&lt;/code&gt;: Gives a new Board with a piece added. Assumes that the move is legal.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;To keep scoring straightforward, each function is worth 10 points.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch6 Quiz A</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-quiz-1/</link>
      <pubDate>Tue, 26 Nov 2019 09:28:00 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-quiz-1/</guid>
      <description>&lt;p&gt;Please write your answers on paper and turn in the paper.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain in your own words what &lt;code&gt;foldl&lt;/code&gt; is good for.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use &lt;code&gt;foldl&lt;/code&gt; to remove duplicates from a list. Write your own fold&#xA;function. Example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; undup [1,1,1,2,3,2] == [1,2,3]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You are going to hide a secret message inside a public message by&#xA;inserting the letters of the secret message every given number (n)&#xA;of the public message letters. If there are not enough letters in&#xA;the public message, just put the unused part of the secret message&#xA;at the end. Begin the output with part of the public message.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tiny 01</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/tiny-01/</link>
      <pubDate>Wed, 11 Oct 2023 13:07:09 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/tiny-01/</guid>
      <description>&lt;p&gt;Use the following variables:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;square&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;transparent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rhombus&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;35&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;outline&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;black&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;good&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay/align&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;left&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;middle&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;empty-scene&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;to-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;good&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; add more to this later&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- used on the first day of key and mouse handler in a 90 min class --&gt;&#xA;&lt;h2 id=&#34;part-i-identify-the-mistake&#34;&gt;Part I: Identify the Mistake&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;square-mover&lt;/code&gt; will be used as the &lt;strong&gt;key handler&lt;/strong&gt;.&#xA;It is supposed to make the current image move right 4 p&amp;rsquo;s. It currently has&#xA;multiple mistakes. Fix it.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (define (square-mover img)&#xA;     (beside w p p p p))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You want to shrink the square when you hit the &amp;ldquo;s&amp;rdquo; key. &lt;strong&gt;Explain&#xA;what is wrong&lt;/strong&gt; with this code in one phrase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch6 Advanced Notes</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch6-advanced-notes/</link>
      <pubDate>Thu, 05 Oct 2023 09:20:32 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch6-advanced-notes/</guid>
      <description>&lt;p&gt;There are a bunch of different types of fold. I have not distinguished&#xA;between them because most of my audience is not ready for that. If&#xA;you&amp;rsquo;re reading this, maybe you are ready to dive in a little deeper.&lt;/p&gt;&#xA;&lt;p&gt;Here are some resources:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.haskell.org/Foldr_Foldl_Foldl&#39;&#34;&gt;Explanation of the strict and non-strict versions of left and right&#xA;fold&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/20356742/foldr-foldl-haskell-explanation&#34;&gt;A digested&#xA;version&lt;/a&gt;&#xA;of that article created for Stack Overflow.&lt;/li&gt;&#xA;&lt;li&gt;A more sophisticated (and popular) &lt;a href=&#34;https://stackoverflow.com/questions/3429634/foldl-is-tail-recursive-so-how-come-foldr-runs-faster-than-foldl&#34;&gt;article about the speed of&#xA;different variants of fold&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>CS Events</title>
      <link>https://wy-cs.info/docs/events/</link>
      <pubDate>Mon, 08 Oct 2018 10:14:18 -0500</pubDate>
      <guid>https://wy-cs.info/docs/events/</guid>
      <description>&lt;p&gt;This is an incomplete list of programming competitions. Join the &amp;ldquo;Math&#xA;&amp;amp; CS&amp;rdquo; announcements group or the Competition Coding club for updates.&lt;/p&gt;&#xA;&lt;p&gt;Recommended entry points: Advent of Code is a wonderful on-ramp for&#xA;high school students. The USACO Guide is for the more competitive&#xA;students interested in algorithms. Google&amp;rsquo;s KickStart was wonderful,&#xA;but now discontinued (see below).&lt;/p&gt;&#xA;&lt;h2 id=&#34;favorites&#34;&gt;Favorites&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; is a Christmas-themed&#xA;sequence of 25 puzzles. Very accessible. My AP Computer Science A&#xA;students felt very accomplished when they started solving them on&#xA;their own.&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Inheritance Calls I</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/inheritance-3/</link>
      <pubDate>Sat, 29 Apr 2023 08:43:35 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/inheritance-3/</guid>
      <description>&lt;p&gt;A typical multiple choice question designed to assess understanding of&#xA;inheritance assigns an instance of a subclass to a variable whose type&#xA;is a superclass and then asks what methods would be called.&lt;/p&gt;&#xA;&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;&#xA;&lt;p&gt;The classes to be used in this discussion are &lt;code&gt;Mammal&lt;/code&gt; and&#xA;&lt;code&gt;Human&lt;/code&gt;. These are not supposed to be complete or make perfect&#xA;sense. Please forgive the weird &lt;code&gt;temperature&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Mammal&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;temperature&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Human&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Mammal&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;double&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;temperature&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;98&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;speak&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* not shown */&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;example-a&#34;&gt;Example A&lt;/h3&gt;&#xA;&lt;p&gt;A Human is assigned to a Mammal variable. Can you call its &lt;code&gt;speak&lt;/code&gt;&#xA;method?&lt;/p&gt;</description>
    </item>
    <item>
      <title>U WS 01</title>
      <link>https://wy-cs.info/intermediate-cs/universe/u-ws-01/</link>
      <pubDate>Wed, 19 Apr 2023 07:11:21 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/universe/u-ws-01/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h1 id=&#34;universe-worksheet-01&#34;&gt;Universe Worksheet 01&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Name at least one job a server performs.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain at least one thing the client does that the server does&#xA;not do.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When world1 sends a message, where is the first place the message&#xA;goes?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Which of the following types of information are allowed in a&#xA;message?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch 02 Quiz 1</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/quiz-1/</link>
      <pubDate>Wed, 15 Sep 2021 07:39:03 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/quiz-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a list &lt;code&gt;q1&lt;/code&gt; containing the integers&#xA;101, 110, 119, 128, 137, 146, 155, 164, 173, 182, 191, 200, 209,&#xA;218, and 227.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;q2&lt;/code&gt; that takes in a list of numbers and puts out a&#xA;list with each of those numbers tripled. Also write a signature for&#xA;this function.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;q3&lt;/code&gt; that takes in a number &lt;code&gt;top&lt;/code&gt; and a list of numbers,&#xA;and puts out a list of all of the numbers in the list whose squares&#xA;are less than &lt;code&gt;top&lt;/code&gt;. Also write a signature for this function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. String Dolphin</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/string-dolphin/</link>
      <pubDate>Wed, 23 Jan 2019 09:31:53 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/string-dolphin/</guid>
      <description>&lt;p&gt;Count how many times &amp;ldquo;dolphin&amp;rdquo; appears in a string. Except don&amp;rsquo;t count&#xA;the word &amp;ldquo;dolphin&amp;rdquo; if it comes immediately after &amp;ldquo;shark &amp;ldquo;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;public static int cdol(String str)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;cdol(&amp;quot;dolphin dolphin dolphin&amp;quot;)&lt;/code&gt; =&amp;gt; 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;cdol(&amp;quot;dolphin shark dolphin&amp;quot;)&lt;/code&gt; =&amp;gt; 1&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>11. Inheritance Calls II</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/inheritance-4/</link>
      <pubDate>Sat, 29 Apr 2023 09:22:04 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/inheritance-4/</guid>
      <description>&lt;p&gt;Question: is it possible to call a superclass&amp;rsquo;s&#xA;method of class M directly in your code (outside of the class M)?&lt;/p&gt;&#xA;&lt;h3 id=&#34;motivating-question&#34;&gt;Motivating Question&lt;/h3&gt;&#xA;&lt;p&gt;Is there a way to find out that &lt;code&gt;liam&lt;/code&gt; in the example below is really&#xA;16 and not 21? See marked point (1). Why or why not?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Kid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Liar&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Kid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Tester&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;demo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Kid&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;liam&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Liar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;liam&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// returns 21&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// (1) ??&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;discussion&#34;&gt;Discussion&lt;/h3&gt;&#xA;&lt;p&gt;In the example above, it seems reasonable to hope that you could find&#xA;out Liam&amp;rsquo;s true age. The overriding of age in Liar isn&amp;rsquo;t changing&#xA;anything fundamental about the Kid. This is actually &lt;strong&gt;not possible&lt;/strong&gt;&#xA;in Java.&lt;/p&gt;</description>
    </item>
    <item>
      <title>17. Review Restart 3</title>
      <link>https://wy-cs.info/intermediate-cs/ch17/review-sem-1-restart-3/</link>
      <pubDate>Fri, 10 Jan 2025 07:58:50 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch17/review-sem-1-restart-3/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You are on time if it is a school day an dtime is less&#xA;than 800. You are also on time if it is not a school day, no matter&#xA;what time it is.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; on-time? : number (time) boolean(school-day?) -&amp;gt; boolean&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;An egg is &amp;ldquo;hard&amp;rdquo; if cooked 10 minutes or more, &amp;ldquo;raw&amp;rdquo; if cooked less&#xA;than 6 min, and &amp;ldquo;soft&amp;rdquo; if it is cooked 6-10 min.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; egg-cook: number(minutes) -&amp;gt; string&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A deluxe burger costs $8 plus $3 each patty, and $2.25 extra if you&#xA;want bacon. Write the function and two checks - one with bacon and&#xA;one without.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch 02 Quiz 4</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/quiz-4/</link>
      <pubDate>Wed, 20 Sep 2023 16:30:57 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/quiz-4/</guid>
      <description>&lt;p&gt;On paper, write the function&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;f :: [Int] -&amp;gt; [Int]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This function has the following properties:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Skip input numbers that are below 100.&lt;/li&gt;&#xA;&lt;li&gt;Other numbers should be in the output list.&lt;/li&gt;&#xA;&lt;li&gt;Except if you hit 999 the process ends immediately, without output.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;checks1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;500&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;999&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;888&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;500&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;post-quiz-study-guide&#34;&gt;Post-Quiz Study Guide&lt;/h2&gt;&#xA;&lt;p&gt;Memorize these templates.&lt;/p&gt;&#xA;&lt;p&gt;Copy all of the input numbers to the output.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze0&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze0&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;laze0&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Skip odd numbers.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;laze1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;odd&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;laze1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;otherwise&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;laze1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;xs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Stop when you get to 10.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. AL - hasPieee</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-arraylist/</link>
      <pubDate>Wed, 16 Jan 2019 08:49:48 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-arraylist/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1gLoI2KTCvALpSvW26gLePK7NVkqIe84Aq9lgYkWqL24/edit#slide=id.g10ab11346d_3_5&#34;&gt;Array List&#xA;exercises&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;2019-01-16: &lt;code&gt;throddPigs&lt;/code&gt;, &lt;code&gt;hasPieee&lt;/code&gt;, ?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resources</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/resources/</link>
      <pubDate>Wed, 13 Oct 2021 20:07:13 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/resources/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1vlnUh2IjuwEBj-cvnqP7qww03LYGuqLto1eqbkGLV4M/edit?usp=sharing&#34;&gt;Chapter 6 Worksheet&#xA;1&lt;/a&gt;:&#xA;introduction and a quick reference chart.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/16v_4PSZMPGZCNFK4cdSqEaqcWg5vZ2Ds179gZUjhsHo/edit?usp=sharing&#34;&gt;Chapter 6 Worksheet&#xA;2&lt;/a&gt;:&#xA;A stack of beginner animation exercises with a lot of variety.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1kKznW0FQOfhWTHgM_agX3B1yiD2yyoN3UKuWBqPhGKc/edit?usp=sharing&#34;&gt;Chapter 6 Worksheet&#xA;3&lt;/a&gt;:&#xA;Two animations and &lt;code&gt;check-within&lt;/code&gt;. Read Section 7.5.3 in Picturing&#xA;Programs (book page 116).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Resources</title>
      <link>https://wy-cs.info/intermediate-cs/ch07/resources/</link>
      <pubDate>Wed, 13 Oct 2021 20:07:13 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch07/resources/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/193fiEVjSxTPF1i4WgTRjRHps3qDP1dcPxuBqJgEJAok/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;A&lt;/a&gt;:&#xA;Important basic info for working with numbers, including &lt;code&gt;#i&lt;/code&gt; and &lt;code&gt;check-within&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1aGHOEBBIaDv7YhWzprDr4v0WdzwZz1o40hTDViT9FXU/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;BC&lt;/a&gt;:&#xA;Lists of good problems from the book (Picturing Programs, Chapter 7).&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1w3D3FDAfiulQOswVmcWqs1ShFq46mLckEGKzKdqEsuI/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;D&lt;/a&gt;:&#xA;First big gradient creation practice.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1AZH9UpUeo7K8mb5cn4bYoUDXT686-vQpVs3WApLW-xQ/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;E&lt;/a&gt;:&#xA;More gradients, including a radial gradient!&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1bm-zTl0d4QM-Px9C9rF43uS05RjtWLGqhNwAPn0UyIQ/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;F&lt;/a&gt;:&#xA;Scaffolded practice with check-expects, more gradients.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1lNz7j5k5pNnxG4OREckKYMDHY6EVp701nPoCbmfHWSA/edit?usp=sharing&#34;&gt;Chapter 7 Worksheet&#xA;G&lt;/a&gt;:&#xA;Mostly advanced exercises, including the &amp;ldquo;reverse greyscale&amp;rdquo; transformation.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Pro Tips</title>
      <link>https://wy-cs.info/nand/ch08/pro-tips/</link>
      <pubDate>Fri, 07 Feb 2025 13:15:33 -0600</pubDate>
      <guid>https://wy-cs.info/nand/ch08/pro-tips/</guid>
      <description>&lt;h2 id=&#34;input&#34;&gt;Input&lt;/h2&gt;&#xA;&lt;p&gt;This function reads a file into lines of text:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get-code-01&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;file-&amp;gt;lines&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function does the same thing from the &amp;ldquo;standard input port&amp;rdquo;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get-code-02&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;port-&amp;gt;lines&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The good news is that both a string and a file can become a port.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get-code-file&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fname&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;with-input-from-file&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;fname&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;get-code-02&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;get-code-string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;with-input-from-string&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;str&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;get-code-02&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Future work: you could modify your &lt;code&gt;get-code-02&lt;/code&gt; so that it does all&#xA;of your compilation work instead of just reading in the lines.&lt;/p&gt;&#xA;&lt;h2 id=&#34;output&#34;&gt;Output&lt;/h2&gt;&#xA;&lt;p&gt;You can redirect output from your screen to a file by using&#xA;&lt;code&gt;with-output-to-file&lt;/code&gt; (among other ways).&lt;/p&gt;</description>
    </item>
    <item>
      <title>All Commands</title>
      <link>https://wy-cs.info/ecs/arduino/all-commands/</link>
      <pubDate>Mon, 20 May 2019 22:08:41 -0500</pubDate>
      <guid>https://wy-cs.info/ecs/arduino/all-commands/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;A &lt;em&gt;digital pin&lt;/em&gt; output can be set to true or false. (Use the operators&#xA;&lt;scratch class=&#34;inline&#34;&gt;true :: operators boolean&lt;/scratch&gt;&#xA;or&#xA;&lt;scratch class=&#34;inline&#34;&gt;false :: operators boolean&lt;/scratch&gt;.)&lt;/li&gt;&#xA;&lt;li&gt;A &lt;em&gt;PWM pin&lt;/em&gt; output can be set to any value 0 through 255.&lt;/li&gt;&#xA;&lt;li&gt;A &lt;em&gt;digital reading&lt;/em&gt; input is either true or false.&lt;/li&gt;&#xA;&lt;li&gt;An &lt;em&gt;analog reading&lt;/em&gt; input is a number from 0 to 1023.&lt;/li&gt;&#xA;&lt;li&gt;Divide analog reading inputs by 4 to use the in PWM pin&#xA;outputs. Using a larger number will work, but the actual effect&#xA;wraps around to zero every multiple of 256.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;snap4arduino-blocks&#34;&gt;Snap4Arduino Blocks&lt;/h2&gt;&#xA;&#xA;&lt;script src=&#34;https://wy-cs.info/js/scratchblocks-v3.5.2-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;window.onload = function () {&#xA;  console.log(&#39;MO: Loading scratchblocks&#39;);&#xA;  scratchblocks.renderMatching(&#39;pre.scratch&#39;);&#xA;  scratchblocks.renderMatching(&#39;scratch.inline&#39;, {inline: true});&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;pre class=&#34;scratch&#34;&gt;&#xA;&#xA;set digital pin ( v) to &lt;&gt; :: #468cfc&#xA;&#xA;analog reading ( v) :: #468cfc reporter&#xA;&#xA;set pin ( v) to value (128) :: #468cfc&#xA;&#xA;digital reading ( v) :: #468cfc boolean&#xA;&#xA;arduino connected? :: #468cfc boolean&#xA;&#xA;connect arduino at [] :: #468cfc&#xA;&#xA;disconnect arduino :: #468cfc&#xA;&#xA;set servo ( v) to [clockwise v] :: #468cfc&#xA;&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h2 id=&#34;interesting-facts&#34;&gt;Interesting Facts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Analog means continuously adjustable. Analog devices you know:&#xA;bicycle brakes, dimmer switches on (old incandescent) lights, knobs on&#xA;stove to adjust gas temperature.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Suggestions</title>
      <link>https://wy-cs.info/nand/ch10/suggestions/</link>
      <pubDate>Wed, 14 May 2025 15:24:56 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch10/suggestions/</guid>
      <description>&lt;p&gt;This unit was very challenging. These are recommendations written by&#xA;students.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Know what format stuff should be in at the start. &amp;ldquo;Lists inside of&#xA;lists.&amp;rdquo; Write everything out.&lt;/li&gt;&#xA;&lt;li&gt;Take a giant chunk of time to plan (1 week). Don&amp;rsquo;t just do every&#xA;function in the order it appears in the table.&lt;/li&gt;&#xA;&lt;li&gt;Discuss how to use placeholders for parts that are not complete.&lt;/li&gt;&#xA;&lt;li&gt;Detail what helpers you need. What will your code need to be able&#xA;to handle? (Teacher + students.)&lt;/li&gt;&#xA;&lt;li&gt;Plan for expression and statement from the very beginning.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Big Picture&lt;/strong&gt;. Understand the overview. Avoid planning for&#xA;situations that cannot happen. &amp;ldquo;What is the minimum to get&#xA;something to work?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;(&amp;ldquo;Ivan&amp;rsquo;s observation&amp;rdquo;) Code was redundant, had lots of copy and paste.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Advice/Warning.&lt;/strong&gt; Previous projects are just straight &amp;ldquo;grind&amp;rdquo;, but this&#xA;chapter benefits from more thought.&lt;/li&gt;&#xA;&lt;li&gt;Producing check-expects was as hard as writing the code. People&#xA;would have errors in their checks as well as their code. Sometimes&#xA;there would be inconsistencies based on erroneous&#xA;understandings. Making groups and writing checks first (like the&#xA;assembler) would be a big plus.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>AI Resources</title>
      <link>https://wy-cs.info/ai/resources/</link>
      <pubDate>Mon, 30 Aug 2021 11:46:04 -0500</pubDate>
      <guid>https://wy-cs.info/ai/resources/</guid>
      <description>&lt;h2 id=&#34;python&#34;&gt;Python&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://replit.com/languages/python3&#34;&gt;Python on ReplIt.com&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.anaconda.com/&#34;&gt;Conda&lt;/a&gt; for the home&#xA;install. Add &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;Mamba&lt;/a&gt; for a faster&#xA;package manager.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;books&#34;&gt;Books&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The official &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;python tutorial&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://openbookproject.net/thinkcs/python/english3e/&#34;&gt;How to Think Like a Computer&#xA;Scientist&lt;/a&gt;. An&#xA;online version with little interpreter boxes to run your code is at&#xA;&lt;a href=&#34;https://runestone.academy/runestone/books/published/thinkcspy/index.html&#34;&gt;Runestone Python&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Algorithm-Design-Manual-Computer-Science/dp/3030542556&#34;&gt;The Algorithm Design&#xA;Manual&lt;/a&gt;&#xA;by Steven Skiena. Used for graph theory.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/norvig/paip-lisp&#34;&gt;Paradigms of Artificial Intelligence Programming&lt;/a&gt; by Peter&#xA;Norvig. Used for the projects like the English grammar sentence&#xA;generator and the General Problem Solver. Written in Common Lisp so&#xA;you are probably not going to be reading it directly.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Chapter 2 Summary</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch02/ch02-summary/</link>
      <pubDate>Sat, 22 Sep 2018 16:06:40 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch02/ch02-summary/</guid>
      <description>&lt;p&gt;A list of the chapter contents, including past stumbling blocks.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a list: &lt;code&gt;[5..13]&lt;/code&gt; or &lt;code&gt;[5,10..100]&lt;/code&gt; or &lt;code&gt;[ n^2 | n&amp;lt;-[1..100], even n]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create a tuple: &lt;code&gt;(5,12)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Key to remember: head, tail, init, last, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Other list functions: maximum, minimum, sum, product, reverse&lt;/li&gt;&#xA;&lt;li&gt;More list functions: length, null, take, drop&lt;/li&gt;&#xA;&lt;li&gt;Sometimes useful: cycle, repeat, replicate&lt;/li&gt;&#xA;&lt;li&gt;Misc: &lt;code&gt;!!&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Double quotes make strings.&lt;/li&gt;&#xA;&lt;li&gt;Single quotes make individual characters.&lt;/li&gt;&#xA;&lt;li&gt;Strings are lists of characters, so &amp;ldquo;dog&amp;rdquo; == [&amp;rsquo;d&amp;rsquo;,&amp;lsquo;o&amp;rsquo;,&amp;lsquo;g&amp;rsquo;]&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Video Resources</title>
      <link>https://wy-cs.info/ap-cs/haskell/videos/</link>
      <pubDate>Thu, 07 Oct 2021 20:57:25 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/videos/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCBDp7ydYTHi1dh4Gnf3VTPA&#34;&gt;Graham&#xA;Hutton&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&#34;&gt;Functional Programming in&#xA;Haskell&lt;/a&gt;&#xA;is pretty good.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uBEPFkuPrcU&amp;amp;list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&amp;amp;index=5&#34;&gt;FP 5 - Types and&#xA;Classes&lt;/a&gt;,&#xA;time 38:40 begins practice identifying types of expressions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xy5rciaS2ys&amp;amp;list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&amp;amp;index=7&#34;&gt;FP 7 - List&#xA;Comprehensions&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WawJ8LArl54&amp;amp;list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&amp;amp;index=8&#34;&gt;FP 8 - Recursive&#xA;Functions&lt;/a&gt;&#xA;has a ton of examples.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=I9S61BYM9_4&amp;amp;list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&amp;amp;index=9&#34;&gt;FP 9 Exercises on&#xA;Recursion&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=I9S61BYM9_4&amp;amp;list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3&amp;amp;index=9&#34;&gt;FP 11 How to think recursively&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1jZ7j21g028&#34;&gt;Introduction to Haskell Programming by Paul&#xA;Szulc&lt;/a&gt; is reasonable&#xA;but not a course.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Google&#xA;&lt;a href=&#34;https://github.com/google/haskell-trainings&#34;&gt;haskell-trainings&lt;/a&gt; are&#xA;too advanced for beginners in my course.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Hangman Outline</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99a-hangman-outline/</link>
      <pubDate>Thu, 15 Mar 2018 13:48:54 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99a-hangman-outline/</guid>
      <description>&lt;!-- Use `define/contract` for all of your functions. --&gt;&#xA;&lt;p&gt;Write two check expects for every non-trivial function.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Three illustrations of &amp;ldquo;action&amp;rdquo; that should occur in the game. Explain what they are.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Model&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Top-down design.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Image sequence and loading images into Racket.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Key-handler&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Purpose&lt;/li&gt;&#xA;&lt;li&gt;Examples: at least two (which become tests)&lt;/li&gt;&#xA;&lt;li&gt;Write function.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Draw-handler&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Purpose&lt;/li&gt;&#xA;&lt;li&gt;Illustrations on paper (two) - easier than making computer examples.&lt;/li&gt;&#xA;&lt;li&gt;Examples: at least two (which will become tests)&lt;/li&gt;&#xA;&lt;li&gt;Write function.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Final screens: win and lose.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Hangman Images</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99b-hangman-images/</link>
      <pubDate>Thu, 15 Mar 2018 13:20:05 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99b-hangman-images/</guid>
      <description>&lt;p&gt;Goal for the day: produce a sequence of images to use for &amp;ldquo;hangman&amp;rdquo; and load it into Racket.&lt;/p&gt;&#xA;&lt;h2 id=&#34;image-sequence&#34;&gt;Image sequence&lt;/h2&gt;&#xA;&lt;p&gt;Draw a sequence of images &lt;code&gt;hang-0.png&lt;/code&gt;, &lt;code&gt;hang-1.png&lt;/code&gt;, etc., with the appropriate number of parts of the person filled in. Use &amp;ldquo;File -&amp;gt; Export as&amp;hellip;&amp;rdquo; to save each file with a different name.&lt;/p&gt;&#xA;&lt;p&gt;Tools:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Microsoft Paint on Windows&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://paintbrush.sourceforge.io/&#34;&gt;Paintbrush&lt;/a&gt; (&lt;a href=&#34;https://sourceforge.net/projects/paintbrush/files/latest/download?source=files&#34;&gt;download&lt;/a&gt;) on Macintosh. You will need to hold down Control when you click on the application to allow it to open for the first time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.gimp.org/&#34;&gt;Gimp&lt;/a&gt; on Linux.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;make-a-racket-function&#34;&gt;Make a Racket function&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Load images into Racket.&lt;/li&gt;&#xA;&lt;li&gt;Write a function that takes in the number of mistakes and returns the correct image of the gallows.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The best way to load an image from a file is to use &lt;code&gt;bitmap/file&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Hangman Key Handler</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99c-hangman-keyhandler/</link>
      <pubDate>Thu, 15 Mar 2018 15:31:22 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99c-hangman-keyhandler/</guid>
      <description>&lt;p&gt;The key handler needs to change the model depending on what key was&#xA;typed.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create an example model for some state in the game. You could use&#xA;one of your examples from the initial planning.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a check-expect that demonstrates what should happen when the&#xA;person hits a key which is in the word.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a check-expect that demonstrates what should happen when the&#xA;person hits a key which is not in the word.&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Hangman DH Warmup</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99d-hangman-drawhandler/</link>
      <pubDate>Fri, 16 Mar 2018 07:58:46 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99d-hangman-drawhandler/</guid>
      <description>&lt;p&gt;The key step is to draw the word with underscores for the letters missed.&lt;/p&gt;&#xA;&lt;p&gt;This page will not include any specific advice on how to draw the word&#xA;with underscores for the letters that are not guessed. The &lt;code&gt;wipeout&lt;/code&gt;&#xA;function below should provide you will all of the skills you need to&#xA;do it, though.&lt;/p&gt;&#xA;&lt;h2 id=&#34;underscore-warmup-i-omit&#34;&gt;Underscore Warmup I: omit&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;omit&lt;/code&gt; function takes in a word and a letter and returns the same word with every occurence of the letter omitted (left out).&lt;/p&gt;</description>
    </item>
    <item>
      <title>22a. Hangman Draw Handler</title>
      <link>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99e-hangman-drawhandler-2/</link>
      <pubDate>Tue, 20 Mar 2018 09:32:59 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch22a/199-hangman/99e-hangman-drawhandler-2/</guid>
      <description>&lt;p&gt;Draw the whole scene by using helper functions to draw the different&#xA;parts. At first you can just put all of the images &lt;code&gt;above&lt;/code&gt; each other;&#xA;later you can change the placement so it looks the way you prefer.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Draw the gallows based on how many wrong answers.&lt;/li&gt;&#xA;&lt;li&gt;Draw the mistaken letters.&lt;/li&gt;&#xA;&lt;li&gt;Draw the word with underscores for letters that are not guessed.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The key step is to draw the word with underscores for the letters missed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 Review 1</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2022-01/</link>
      <pubDate>Tue, 24 May 2022 14:52:27 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2022-01/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Multiply all of the coordinates by 5.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; m5: (Listof Posn) -&amp;gt; (Listof Posn)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Draw a bunch of radius 15 circles on a 400x300 empty scene.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; draw-circles: (Listof Posn) (Listof Color) -&amp;gt; Image&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sum the absolute value of the difference of the x and y coordinates&#xA;of the posns in the list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 Review 2</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2022-02/</link>
      <pubDate>Mon, 23 May 2022 11:58:37 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2022-02/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What is the difference between &lt;code&gt;for/list&lt;/code&gt; and &lt;code&gt;for*/list&lt;/code&gt;? Give an&#xA;example and explain in a sentence.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;A traditional checkerboard has alternating red and black squares. It&#xA;is oriented so the red (&amp;ldquo;light&amp;rdquo;) square is on the near right from each&#xA;player&amp;rsquo;s perspective. Pieces only go on the black (&amp;ldquo;dark&amp;rdquo;) squares.&#xA;The squares I use are 50x50.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 Review 3</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2022-03/</link>
      <pubDate>Tue, 31 May 2022 11:43:29 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2022-03/</guid>
      <description>&lt;p&gt;(Final for grades 8 and 12.)&lt;/p&gt;&#xA;&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;part-i&#34;&gt;Part I&lt;/h2&gt;&#xA;&lt;p&gt;Day 1 for multi-day classes.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an animation where clicking or dragging the mouse makes an&#xA;light orange rectangle with one corner at the mouse&amp;rsquo;s position.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There is a 40 pixel orange border around the rectangle.&lt;/li&gt;&#xA;&lt;li&gt;There are a whole number of size 20 stars, positioned as&#xA;below.&lt;/li&gt;&#xA;&lt;li&gt;The number of stars adjusts so they just almost fill&#xA;the width and height of the light orange rectangle (so that adding&#xA;one more will be wider than the rectangle, for example).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;See the &lt;a href=&#34;https://youtu.be/1LmU90awEQY&#34;&gt;video&lt;/a&gt; for an animation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 Review 4</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2022-04/</link>
      <pubDate>Mon, 06 Jun 2022 11:54:33 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2022-04/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Knight Moves.) Given the position of a&#xA;&lt;a href=&#34;http://www.chesscorner.com/tutorial/basic/knight/knight.htm&#34;&gt;knight&lt;/a&gt;,&#xA;return a list of all of the legal positions the knight can&#xA;occupy. Number the board coordinates 0 through 7 for both x and y.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; ;; knight: x(number) y(number) -&amp;gt; (Listof Posn)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Pawn Push.) In a simplified version of chess, a pawn can move&#xA;forward unless there is a piece directly in front of it.  When they&#xA;move, &amp;ldquo;white&amp;rdquo; pawns increase y by 1 and &amp;ldquo;black&amp;rdquo; pawns decrease y by 1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022 Review 5</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2022-05/</link>
      <pubDate>Wed, 08 Jun 2022 10:56:17 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2022-05/</guid>
      <description>&lt;p&gt;This was given as the final exam in Spring 2022.&lt;/p&gt;&#xA;&lt;!--&#xA;## TEACHER NOTES&#xA;Investigate for the future: give more guidance on the process?&#xA;Otherwise you will have people who cannot even write the draw handler.&#xA;You could require check-expects for certain parts, that might help.&#xA;For example: a check-expect for the mouse handler might help&#xA;solve the problems where the wrong numbers are selected on a click.&#xA;Also - in spite of what I wrote, some people choose an approach that&#xA;_cannot_ end up drawing the orange/blue grid patterns shown.&#xA;&#xA;### Common Flaws&#xA;* primes resets the state of everything instead of toggling primes&#xA;* one click works fine but the second click resets the state,&#xA;  forgetting the first click.&#xA;&#xA;--&gt;&#xA;&lt;h2 id=&#34;instructions&#34;&gt;Instructions&lt;/h2&gt;&#xA;&lt;p&gt;Right away - save with your name in the title.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 Review 1</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2023-01/</link>
      <pubDate>Fri, 26 May 2023 07:04:12 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2023-01/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;i-problems&#34;&gt;I. Problems&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;num-list: Integer -&amp;gt; (Listof Integer)&lt;/code&gt;. Using for/list, create a&#xA;list of numbers from 1 up to and including the given number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; (check-expect (num-list 5) (list 1 2 3 4 5))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Remove all of the zeros from a list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; packer: (Listof Number) -&amp;gt; (Listof Number)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;proper-divisors: Integer(m) -&amp;gt; (Listof Integer)&lt;/code&gt;. Given a positive&#xA;integer m, produce a list of all numbers between 1 and m (not&#xA;including 1 or m) that divide m.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 Review 2</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2023-02/</link>
      <pubDate>Wed, 31 May 2023 08:15:30 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2023-02/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;review2023tests.rkt&#34;&gt;starter code&lt;/a&gt; has check-expects.&lt;/p&gt;&#xA;&lt;p&gt;It is OK to use the Racket Help Desk, but not work written by you&#xA;or anyone else.&lt;/p&gt;&#xA;&lt;h2 id=&#34;i-problems-45-min&#34;&gt;I. Problems (45 min)&lt;/h2&gt;&#xA;&lt;p&gt;These problems center around a &amp;ldquo;Quiz&amp;rdquo; struct that holds information&#xA;for a teacher&amp;rsquo;s class. The Quiz structure contains:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: a string, the name of the student who took the quiz&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;num&lt;/code&gt;: an integer, the number of the quiz. Example: the quiz given on&#xA;Monday is 1 and the quiz from Wednesday is 2.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;score&lt;/code&gt;: a number, the raw score that the student earned&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;max&lt;/code&gt;: a number, the maximum possible score on the quiz&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Use the following definition:&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 Review 3</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2023-03/</link>
      <pubDate>Thu, 01 Jun 2023 19:15:58 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2023-03/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;You may consult the &lt;a href=&#34;https://docs.racket-lang.org&#34;&gt;Racket Help Desk&lt;/a&gt;,&#xA;the book &lt;a href=&#34;https://picturingprograms.com&#34;&gt;Picturing Programs&lt;/a&gt;, and the&#xA;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/&#34;&gt;class web site&lt;/a&gt;. You may use the&#xA;&lt;code&gt;posn-util&lt;/code&gt; without comment.&lt;/p&gt;&#xA;&lt;p&gt;No other reference materials are allowed. (No old assignments, stack overflow,&#xA;ChatGPT, etc.)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A playing card has an image and a value. The value is a number 1&#xA;through 13.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024 Review 2</title>
      <link>https://wy-cs.info/intermediate-cs/sem2review/2024-02/</link>
      <pubDate>Thu, 30 May 2024 22:21:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem2review/2024-02/</guid>
      <description>&lt;style&gt; /* Spacing between columns of the tables */&#xA;table.gap {&#xA;  border-collapse: separate;&#xA;  border-spacing: 50px 0;&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;&lt;strong&gt;You may always use helper functions. No need to ask.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;There is a &lt;a href=&#34;fifteen-starter.rkt&#34;&gt;starter code file&lt;/a&gt; that contains all&#xA;of the questions and checks from this page.&lt;/p&gt;&#xA;&lt;p&gt;You may consult the &lt;a href=&#34;https://docs.racket-lang.org&#34;&gt;Racket Help Desk&lt;/a&gt;,&#xA;the book &lt;a href=&#34;https://picturingprograms.com&#34;&gt;Picturing Programs&lt;/a&gt;, and the&#xA;&lt;a href=&#34;https://wy-cs.info/intermediate-cs/&#34;&gt;class web site&lt;/a&gt;. You may use the&#xA;&lt;code&gt;posn-util&lt;/code&gt; without comment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sem.I 2020 Review Notes</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/2020-sem1-review-notes/</link>
      <pubDate>Sat, 25 Jan 2020 08:23:12 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/2020-sem1-review-notes/</guid>
      <description>&lt;p&gt;These notes refer to the &lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/&#34;&gt;2019 review&#xA;guides&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-topics-1/&#34;&gt;Last Year&amp;rsquo;s Topic&#xA;List&lt;/a&gt;&#xA;is still very relevant. We did more with gradients and &lt;code&gt;build-image&lt;/code&gt; this&#xA;year, so you should add that to the list.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-1/&#34;&gt;I.1 Review&#xA;1&lt;/a&gt;:&#xA;All of these questions are relevant and were discussed this year.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-2/&#34;&gt;I.2 Review&#xA;2&lt;/a&gt;:&#xA;All good.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-3/&#34;&gt;I.3 Review&#xA;3&lt;/a&gt;:&#xA;Red-blue OK. Ignore reading. Others more complex.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-4/&#34;&gt;I.4 Review&#xA;4&lt;/a&gt;:&#xA;Question 1 only.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maueroats.github.io/teaching--2018-2019/intermediate-cs/sem1review/sem-review-5/&#34;&gt;I.5 Review&#xA;5&lt;/a&gt;:&#xA;&amp;ldquo;Extras: Lite Review Questions&amp;rdquo; only.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sem.I Final 2021</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem1final2021/</link>
      <pubDate>Tue, 02 Feb 2021 08:08:28 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem1final2021/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;part-a&#34;&gt;Part A&lt;/h2&gt;&#xA;&lt;p&gt;You are working in people coordinates to determine if a point is&#xA;inside this 200x100 shape.&#xA;People coordinates in this problem means $(0,0)$ in the lower left.&#xA;The rounded corners are quarters of radius&#xA;50 circles. There is an animation to demonstrate, but you do &lt;em&gt;not&lt;/em&gt;&#xA;need to write the animation!&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-04-26</title>
      <link>https://wy-cs.info/ml/daily/2021-04-26/</link>
      <pubDate>Mon, 26 Apr 2021 11:54:27 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2021-04-26/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Find the intersection $(x,y)$ of the line $p(t) = (1,2) + t(2,-4)$&#xA;with the line $q(t) = (3,1) + t(-5,1)$.&lt;/li&gt;&#xA;&lt;li&gt;Find an equation of the line perpendicular to $$r(t) = (0,3) + t(2,2)$$&#xA;which passes through the point $(1,2)$.&lt;/li&gt;&#xA;&lt;li&gt;Find a real number u so that the dot product of $(3,4)$ with&#xA;$(-2,5) + u(1,1)$ is zero.&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>2021-05-17</title>
      <link>https://wy-cs.info/ml/daily/2021-05-17/</link>
      <pubDate>Mon, 17 May 2021 09:08:23 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2021-05-17/</guid>
      <description></description>
    </item>
    <item>
      <title>2021-06-01 Dogs</title>
      <link>https://wy-cs.info/ml/daily/20210601-dogs/</link>
      <pubDate>Tue, 01 Jun 2021 09:13:56 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/20210601-dogs/</guid>
      <description>&lt;p&gt;The data is from Zurich, Switzerland, courtesy of the internet. The&#xA;idea to analyze this dataset comes from a &lt;a href=&#34;https://www.kaggle.com/kmader/dogs-of-zurich?select=zuordnungstabellehunderassehundetyp.csv&#34;&gt;post on Kaggle&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;translation&#34;&gt;Translation&lt;/h2&gt;&#xA;&lt;p&gt;German is the official language of Zurich. Most of the columns&#xA;are in German, but the translations to English aren&amp;rsquo;t too tricky. Use&#xA;a translator if you find something you do not understand.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ALTER -&amp;gt; Age&lt;/li&gt;&#xA;&lt;li&gt;GESCHLECHT -&amp;gt; Gender (w = weiblich, female; m = männlich, male)&lt;/li&gt;&#xA;&lt;li&gt;STADTKREIS -&amp;gt; City Quarter or District&lt;/li&gt;&#xA;&lt;li&gt;RASSE1 -&amp;gt; Dog&amp;rsquo;s Primary Breed&lt;/li&gt;&#xA;&lt;li&gt;RASSE2 -&amp;gt; Dog&amp;rsquo;s Secondary Breed&lt;/li&gt;&#xA;&lt;li&gt;GEBURTSJAHR_HUND -&amp;gt; Dog&amp;rsquo;s Year of Birth&lt;/li&gt;&#xA;&lt;li&gt;GESCHLECHT_HUND -&amp;gt; Dog&amp;rsquo;s Gender&lt;/li&gt;&#xA;&lt;li&gt;HUNDEFARBE -&amp;gt; Dog&amp;rsquo;s Color&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wy-cs.info/ml/data/swiss-dog-data/&#34;&gt;Dog data from Zurich&lt;/a&gt;. There should&#xA;be a notebook available to load the data and do some initial&#xA;cleaning.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-08-24 E, Var Practice</title>
      <link>https://wy-cs.info/ml/daily/2022-08-24/</link>
      <pubDate>Wed, 24 Aug 2022 15:06:50 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2022-08-24/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA;  tex: {&#xA;    inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]],&#xA;    macros: {&#xA;        Var: [&#34;\\operatorname{Var}&#34;],&#xA;        Cov: [&#34;\\operatorname{Cov}&#34;]&#xA;    },&#xA;  },&#xA; svg: {&#xA;     fontCache: &#39;global&#39;&#xA; }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Use the following table of probabilities. For the first part, assume&#xA;that $X$ and $Y$ are chosen &lt;em&gt;independently&lt;/em&gt;, so you pick one time&#xA;randomly for $X$ and then one time randomly for $Y$.&lt;/p&gt;&#xA;&lt;h2 id=&#34;independent-x-and-y&#34;&gt;Independent X and Y&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;prob:&lt;/th&gt;&#xA;          &lt;th&gt;0.35&lt;/th&gt;&#xA;          &lt;th&gt;0.20&lt;/th&gt;&#xA;          &lt;th&gt;0.20&lt;/th&gt;&#xA;          &lt;th&gt;0.25&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;X&lt;/td&gt;&#xA;          &lt;td&gt;10&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Y&lt;/td&gt;&#xA;          &lt;td&gt;80&lt;/td&gt;&#xA;          &lt;td&gt;-100&lt;/td&gt;&#xA;          &lt;td&gt;20&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;questions&#34;&gt;Questions&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;$E[ X ]$&lt;/li&gt;&#xA;&lt;li&gt;Probability that $X=10$ and $Y\ge 0$.&lt;/li&gt;&#xA;&lt;li&gt;Probability that $X \cdot Y &amp;gt; 100$.&lt;/li&gt;&#xA;&lt;li&gt;Probability that $X&amp;gt;5$ given that $Y&amp;gt;0$. (See note.)&lt;/li&gt;&#xA;&lt;li&gt;$E[Y]$&lt;/li&gt;&#xA;&lt;li&gt;$E[X^2]$&lt;/li&gt;&#xA;&lt;li&gt;$E[Y^2]$&lt;/li&gt;&#xA;&lt;li&gt;$\Var(X)$&lt;/li&gt;&#xA;&lt;li&gt;$\Var(Y)$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;stretch&#34;&gt;Stretch&lt;/h2&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Suppose, unlike above, that both $X$ and $Y$ are chosen at the&#xA;same time, so for example, you get $X=10$ and $Y=80$ exactly 35% of the time.&#xA;Calculate $E[X\cdot Y]$ in this case.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-08-31</title>
      <link>https://wy-cs.info/ml/daily/2022-08-31/</link>
      <pubDate>Tue, 30 Aug 2022 17:38:11 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2022-08-31/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA;  tex: {&#xA;    inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]],&#xA;    macros: {&#xA;        Var: [&#34;\\operatorname{Var}&#34;],&#xA;        Cov: [&#34;\\operatorname{Cov}&#34;]&#xA;    },&#xA;  },&#xA; svg: {&#xA;     fontCache: &#39;global&#39;&#xA; }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;h2 id=&#34;normal-distribution&#34;&gt;Normal Distribution&lt;/h2&gt;&#xA;&lt;p&gt;Q: Why is the normal distribution so important?&lt;/p&gt;&#xA;&lt;p&gt;A: You can watch a &lt;a href=&#34;https://nyti.ms/2k0zBAQ&#34;&gt;CreatureCast&#xA;video&lt;/a&gt; (&lt;a href=&#34;https://www.nature.com/scitable/blog/creature-cast/the_central_limit_theorum/&#34;&gt;original source?&lt;/a&gt;) or read a &lt;a href=&#34;https://stats.stackexchange.com/questions/49212/importance-of-normal-distribution&#34;&gt;sophisticated&#xA;answer&lt;/a&gt;.&#xA;For data analysis, the fact that errors are indendependent means that&#xA;the are approximately normal when averaged.&lt;/p&gt;&#xA;&lt;p&gt;Random facts&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;std dev&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Percent of data&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;68%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;95%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;99.7%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>2022-09-02</title>
      <link>https://wy-cs.info/ml/daily/2022-09-02/</link>
      <pubDate>Fri, 02 Sep 2022 12:30:22 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2022-09-02/</guid>
      <description>&lt;p&gt;This became a worksheet.&lt;/p&gt;&#xA;&lt;h2 id=&#34;evarba-mistake&#34;&gt;E[Var(B|A)] Mistake&lt;/h2&gt;&#xA;&lt;p&gt;Discuss the problem with the &lt;a href=&#34;https://drive.google.com/file/d/1-W6rsGpQrqxZ9BpixRQ21lQoY99xoArO/view?usp=sharing&#34;&gt;last quiz&lt;/a&gt;, $E[ \Var(B|A) ]$.&lt;/p&gt;&#xA;&lt;p&gt;A very common mistake was to correctly expand the variance&#xA;$$ \Var(B|A) = E[B^2|A] + E[B|A]^2, $$&#xA;and then apply the expectation:&#xA;$$ E[\Var(B|A)] = E[E[B^2|A]] + E[E[B|A]^2]. $$&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The first term is $E[B^2]$; you computed that number earlier on the quiz.&lt;/li&gt;&#xA;&lt;li&gt;The second term is not $E[B]^2$&amp;hellip; That would be applying a rule that turns&#xA;$E[B^2]$ into $E[B]^2$, but you know those are not usually equal.  $\Var(B)$&#xA;is the difference between them!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;experiment-with-eba&#34;&gt;Experiment with E[B|A]&lt;/h2&gt;&#xA;&lt;p&gt;Use the table of probabilities of each event happening.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Independence</title>
      <link>https://wy-cs.info/ml/daily/independence/</link>
      <pubDate>Wed, 07 Sep 2022 12:29:12 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/independence/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA;  tex: {&#xA;    inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]],&#xA;    macros: {&#xA;        Var: [&#34;\\operatorname{Var}&#34;],&#xA;        Cov: [&#34;\\operatorname{Cov}&#34;]&#xA;    },&#xA;  },&#xA; svg: {&#xA;     fontCache: &#39;global&#39;&#xA; }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;Mathematical definition of the &lt;em&gt;conditional probability&lt;/em&gt; of A given&#xA;that B is true:&#xA;$$ P(A | B) = \frac{P(A \text{ and } B)}{P(B)} . $$&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Definition.&lt;/strong&gt; Two variables are independent if knowing one has no effect&#xA;on your knowledge of the other, that is:&#xA;$$\text{A, B independent} \Rightarrow P(A | B) = P(A) , $$&#xA;and similarly for B.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-11-04 MtF</title>
      <link>https://wy-cs.info/ml/daily/2022-11-04/</link>
      <pubDate>Fri, 04 Nov 2022 12:44:45 -0500</pubDate>
      <guid>https://wy-cs.info/ml/daily/2022-11-04/</guid>
      <description>&lt;p&gt;We are working on the Modeling the Future challenge. I like some of&#xA;the questions and do not like others. We will work on it through&#xA;Monday Nov 7, a total of 3 days, and then present our work (Wednesday).&lt;/p&gt;&#xA;&lt;h2 id=&#34;no-retyping&#34;&gt;No Retyping&lt;/h2&gt;&#xA;&lt;p&gt;Make variables when you need to reuse quantities. Ask if you need help&#xA;making variables.&lt;/p&gt;&#xA;&lt;p&gt;Places where a human retypes a result are error prone. If you get more&#xA;data, or discover errors in the data, you want to be able to just&#xA;re-run the whole analysis. Steps where you need to recopy the data&#xA;from earlier prevent that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023-01-23 Weekly</title>
      <link>https://wy-cs.info/ml/daily/2023-01-23/</link>
      <pubDate>Mon, 23 Jan 2023 12:12:05 -0600</pubDate>
      <guid>https://wy-cs.info/ml/daily/2023-01-23/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA;  tex: {&#xA;    inlineMath: [[&#39;$&#39;, &#39;$&#39;], [&#39;\\(&#39;, &#39;\\)&#39;]],&#xA;    macros: {&#xA;        Var: [&#34;\\operatorname{Var}&#34;],&#xA;        Cov: [&#34;\\operatorname{Cov}&#34;]&#xA;    },&#xA;  },&#xA; svg: {&#xA;     fontCache: &#39;global&#39;&#xA; }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Homework set ISL-05W, confidence intervals and the bootstrap method.&lt;/p&gt;&#xA;&lt;h2 id=&#34;weekly-homework&#34;&gt;Weekly Homework&lt;/h2&gt;&#xA;&lt;h3 id=&#34;big-picture&#34;&gt;Big Picture&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the definition of a p-value? What (abstract) information do&#xA;you need to have in order to compute a p-value?&lt;/p&gt;</description>
    </item>
    <item>
      <title>2025-10-20 Daily Worksheet</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2025-10-20/</link>
      <pubDate>Mon, 20 Oct 2025 11:49:54 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2025-10-20/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;review&#34;&gt;Review&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Inside a function &lt;code&gt;f x&lt;/code&gt;, use &lt;code&gt;let&lt;/code&gt; to create variables x2 holding x&#xA;squared, and x3 holding x cubed. Then create the function below.&lt;/p&gt;&#xA;&lt;p&gt;$$ f(x) = x^3 (x^2-1) $$&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;new&#34;&gt;New&lt;/h2&gt;&#xA;&lt;p&gt;An official data type is &lt;code&gt;Maybe a&lt;/code&gt;. The data definition is:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    data Maybe a = Nothing | Just a&#xA;        deriving (Show, Eq, ...)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write a function &lt;code&gt;g2&lt;/code&gt; that takes in a &lt;code&gt;Maybe Int&lt;/code&gt; and returns 0 if&#xA;it is given &lt;code&gt;Nothing&lt;/code&gt; and otherwise 10 more than the absolute value&#xA;of the int.&lt;/p&gt;</description>
    </item>
    <item>
      <title>For 1.4</title>
      <link>https://wy-cs.info/intermediate-cs/pro/for/for-1.4/</link>
      <pubDate>Fri, 09 May 2025 10:01:55 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/pro/for/for-1.4/</guid>
      <description>&lt;p&gt;The review section contains a mix of &amp;ldquo;sequence-making&amp;rdquo; commands like&#xA;&lt;code&gt;in-range&lt;/code&gt; and lists. When the question gives a sequence-making command,&#xA;write the list it will produce. When the question gives a list, write&#xA;a sequence-making command that could be used to produce it.&lt;/p&gt;&#xA;&lt;p&gt;To write list answers, give the first three items, then &lt;code&gt;...&lt;/code&gt; to the&#xA;last item. The long list:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;(list 21 22 23 24 25 26 27 28 29 30)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;should be written:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Match</title>
      <link>https://wy-cs.info/nand/ch06/match/</link>
      <pubDate>Mon, 21 Oct 2024 11:41:53 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch06/match/</guid>
      <description>&lt;p&gt;Use &lt;code&gt;match&lt;/code&gt; as much as possible.&lt;/p&gt;&#xA;&lt;p&gt;Match documentation in the &lt;a href=&#34;https://docs.racket-lang.org/guide/match.html&#34;&gt;Racket&#xA;Guide&lt;/a&gt; and in the&#xA;&lt;a href=&#34;https://docs.racket-lang.org/reference/match.html#(part._match)&#34;&gt;Racket&#xA;Reference&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The exercises on this page are intended to use:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Basic matching of symbols and other constants.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;...&lt;/code&gt; - Unlimited repetition.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;..N&lt;/code&gt; - Limited repetition.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The function &lt;code&gt;q1&lt;/code&gt; takes in a symbol and puts out a number. If the&#xA;symbol is not in the table, output 0. Just use a &lt;code&gt;match&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Symbol&lt;/th&gt;&#xA;          &lt;th&gt;&amp;lsquo;one&lt;/th&gt;&#xA;          &lt;th&gt;&amp;rsquo;two&lt;/th&gt;&#xA;          &lt;th&gt;&amp;rsquo;three&lt;/th&gt;&#xA;          &lt;th&gt;&amp;rsquo;thirty&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Number&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;q2&lt;/code&gt;) In this exercise, you will write a function that makes pairs&#xA;with program labels and the line numbers on which they occur. The&#xA;setup here is that you have a list containing a line number and a&#xA;Hack instruction in parentheses. For example, the Hack program&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Review Questions</title>
      <link>https://wy-cs.info/nand/ch03/review-questions/</link>
      <pubDate>Tue, 17 Sep 2024 07:11:16 -0500</pubDate>
      <guid>https://wy-cs.info/nand/ch03/review-questions/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain RAM8. Include details about the chips from Chapter 3 that&#xA;are used.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is two&amp;rsquo;s complement arithemtic? Why does it exist? Is it&#xA;better or worse than having a &amp;ldquo;sign bit&amp;rdquo;? Explain.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What would be different if you use youd a sign bit instead. Be&#xA;specific and include details explaining your answer.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make the DMux chip from simpler chips.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Self Promotion</title>
      <link>https://wy-cs.info/docs/self-promotion/</link>
      <pubDate>Sat, 16 Dec 2023 05:52:18 -0600</pubDate>
      <guid>https://wy-cs.info/docs/self-promotion/</guid>
      <description>&lt;p&gt;You have to adverise what you are doing. Make sure everybody&#xA;knows. The parts that are hard, advertise that you&amp;rsquo;re working on&#xA;them. Even better if you can explain &lt;em&gt;why&lt;/em&gt; they are hard to you.&lt;/p&gt;&#xA;&lt;h2 id=&#34;status-reports&#34;&gt;Status Reports&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ohio.edu/cas/mando&#34;&gt;Professor Matthew Ando&lt;/a&gt; gave a&#xA;beautiful explanation about writing papers, which I will&#xA;paraphrase. Professor Ando always wanted his work in algebraic&#xA;topology to look like complex analysis. The problem is that the&#xA;complex analysis we see now was developed over 200 years. The proofs&#xA;have been refined and polished; they look beautiful. New work doesn&amp;rsquo;t&#xA;look like that. Matthew says that every year you should publish a&#xA;paper about what you have been working on. Don&amp;rsquo;t wait for&#xA;perfection. It might not come in your lifetime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023 Exam Review I</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2023-12-14/</link>
      <pubDate>Thu, 14 Dec 2023 07:01:21 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2023-12-14/</guid>
      <description>&lt;style type=&#34;text/css&#34;&gt;&#xA;    ol { list-style-type: roman; }&#xA;    ol ol { list-style-type: lower-alpha; }&#xA;    ol ol ol { list-style-type: lower-roman; }&#xA;    ol ol ol ol { list-style-type: decimal; }&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;i-class-and-instance&#34;&gt;I. Class and Instance&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;Dilate&lt;/code&gt; class requires a function &lt;code&gt;dilate&lt;/code&gt; that takes in a&#xA;double (the dilation factor) and an instance of the Dilate class,&#xA;and puts out a new instance of the dilate class.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write the &lt;code&gt;Dilate&lt;/code&gt; class declaration.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A &lt;code&gt;Point3D&lt;/code&gt; is defined as below. Make &lt;code&gt;Point3D&lt;/code&gt; an instance of the&#xA;&lt;code&gt;Dilate&lt;/code&gt; class.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gifts</title>
      <link>https://wy-cs.info/docs/gifts/</link>
      <pubDate>Mon, 06 Nov 2023 12:47:12 -0600</pubDate>
      <guid>https://wy-cs.info/docs/gifts/</guid>
      <description>&lt;p&gt;I don&amp;rsquo;t need any presents to encourage me to do my job. I will take&#xA;care of your students as best I can. You can stop reading here and&#xA;just worry about yourself / your work / your student.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I would love to have you come speak to a class about your career.&lt;/li&gt;&#xA;&lt;li&gt;I enjoy things students make. Art. Stories. Food. Pictures.&lt;/li&gt;&#xA;&lt;li&gt;I love to eat. Especially desserts.&lt;/li&gt;&#xA;&lt;li&gt;I love to cook.&lt;/li&gt;&#xA;&lt;li&gt;I do not drink coffee.&lt;/li&gt;&#xA;&lt;li&gt;I buy a lot at Target and from Amazon.&lt;/li&gt;&#xA;&lt;li&gt;Electronic and mechanical devices are cool.&lt;/li&gt;&#xA;&lt;li&gt;I appreciate support of the robotics team; support us through the&#xA;&lt;a href=&#34;https://www.friendsofwhitneyyoung.org/&#34;&gt;Friends of Whitney Young&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;CPS has &lt;a href=&#34;https://www.cps.edu/globalassets/cps-pages/about-cps/ethics/gifts-4.23.2022.pdf&#34;&gt;ethical guidelines on&#xA;gifts&lt;/a&gt;. Summary:&#xA;single gifts up to $50 are ok; multiple gifts from one source up to&#xA;$100 total in a year.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Turn in Work</title>
      <link>https://wy-cs.info/intermediate-cs/docs/turn-in-work/</link>
      <pubDate>Wed, 13 Sep 2023 14:24:24 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/turn-in-work/</guid>
      <description>&lt;h2 id=&#34;racket&#34;&gt;Racket&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Save the file.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Upload the Racket file. Make sure to the the file with the rkt&#xA;suffix, not the bak (backup) file.&lt;/p&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/docs/turn-in-work/drracket_turnin1.png&#34; width=&#34;200&#34;&gt;&#xA; &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&amp;ldquo;Binary&amp;rdquo; or &amp;ldquo;text&amp;rdquo; are both OK types of submission.&#xA;If your file has any images, it will appear as a &amp;ldquo;Binary File&amp;rdquo;;&#xA;otherwise, it is &amp;ldquo;Text&amp;rdquo;.&#xA;Google Drive does not understand DrRacket files.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;wescheme&#34;&gt;WeScheme&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hit the save button first!&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Share.&lt;/p&gt;&#xA; &lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/docs/turn-in-work/wescheme_step1.png&#34; width=&#34;300&#34;&gt;&#xA; &lt;/figure&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Include the source code. (Answer: &amp;ldquo;Yes&amp;rdquo;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-12-20 AoC 09</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2022-12-20/</link>
      <pubDate>Tue, 20 Dec 2022 06:55:38 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2022-12-20/</guid>
      <description>&lt;p&gt;Read the 2022 Advent of Code Day 9: &lt;a href=&#34;https://adventofcode.com/2022/day/9&#34;&gt;Rope&#xA;Bridge&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;You may use your own method to solve or follow this outline.&lt;/p&gt;&#xA;&lt;p&gt;Discuss at least one problem that arises, and how you handle&#xA;it. Hopefully there will be some debugging.&lt;/p&gt;&#xA;&lt;h2 id=&#34;defintions&#34;&gt;Defintions&lt;/h2&gt;&#xA;&lt;p&gt;Use the following starter definitions. Make sure to remove any leading&#xA;spaces if you copy and paste this code.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RState&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- &amp;#34;Rope State&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(4 pts) The data file comes in the form &amp;ldquo;L 27&amp;rdquo; - a single letter, a space,&#xA;then a number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-11-30 Composite Poly</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2022-11-30/</link>
      <pubDate>Wed, 30 Nov 2022 07:00:53 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2022-11-30/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;In this exercise we will investigate the question of whether a quadratic&#xA;function with integer coefficients that does not factor can always&#xA;produce &lt;a href=&#34;https://en.wikipedia.org/wiki/Composite_number&#34;&gt;composite numbers&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Given integers a and b, the polynomial they correspond to is the&#xA;quadratic:&#xA;$$ f(x) = x^2 + a * x + b .$$&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type Poly = (Int,Int)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The first question is whether this polynomial factors.  The&#xA;&amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Factor_theorem&#34;&gt;factor theorem&lt;/a&gt;&amp;rdquo;&#xA;&amp;hellip; says that if we find a value $x=c$ so that $f(c)=0$, then&#xA;$(x-c)$ is a factor of $f(x)$. In math class you probably learned&#xA;that the possible integer zeros of $f(x)$ are the divisors of the&#xA;constant term. That means we are going to&#xA;check to see if any of the divisors k of b&#xA;(positive or negative) make the function zero. If you find one,&#xA;you&amp;rsquo;ve found a factorization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-08-29</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2022-08-29/</link>
      <pubDate>Mon, 29 Aug 2022 14:56:57 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2022-08-29/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make this list with less work:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; [26,25,24,23,22,21,20,19,18,17,16,15,14,&#xA; 13,12,11,10,9,8,7,6,5,4,3,2,1]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make this string with less work:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; &amp;quot;abcdefghij&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How do you make a list that starts &lt;code&gt;[8,8,8,8,8&lt;/code&gt; and then goes on&#xA;forever.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the signature of the function you used in the previous&#xA;question?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;What is the difference between &lt;code&gt;cycle&lt;/code&gt; and &lt;code&gt;repeat&lt;/code&gt;?&lt;/p&gt;&#xA;&lt;p&gt;Possible signature: &lt;code&gt;cycle :: [Int] -&amp;gt; [Int]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Example: &lt;code&gt;cycle [8,9,11] == ?&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write an example showing an equality between &lt;code&gt;cycle&lt;/code&gt; applied to&#xA;something and &lt;code&gt;repeat&lt;/code&gt; applied to something.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022-08-25</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2022-08-25/</link>
      <pubDate>Thu, 25 Aug 2022 10:27:58 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2022-08-25/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;List of all numbers 5 through 50.&lt;/li&gt;&#xA;&lt;li&gt;List of all multiples of 13 from 0 to 260.&lt;/li&gt;&#xA;&lt;li&gt;Perfect squares from $1^2$ to $15^2$.&lt;/li&gt;&#xA;&lt;li&gt;Use the function $f(x) = (x-4)^2+5$. Plug in integers from $x=-10$&#xA;to $x=10$ and get the output values $y=f(x)$ in a list.&lt;/li&gt;&#xA;&lt;li&gt;Modify question 4 so that it only has values with $y&amp;lt;50$.&lt;/li&gt;&#xA;&lt;li&gt;Make a list of all integers from 1 to 100 whose squares are beween&#xA;500 and 5000.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;miscellany&#34;&gt;Miscellany&lt;/h2&gt;&#xA;&lt;p&gt;Haskell &lt;i class=&#34;fas fa-heart&#34;&gt;&lt;/i&gt; loves integers.&#xA;Most of the time we will work with integers.&#xA;When you have the choice of taking the square&#xA;root of x or squaring y, pick the squaring.&#xA;You don&amp;rsquo;t want to deal with the complexity of decimals in Haskell&#xA;when it is not required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advanced Study</title>
      <link>https://wy-cs.info/docs/advanced-study/</link>
      <pubDate>Wed, 30 Mar 2022 15:41:29 -0500</pubDate>
      <guid>https://wy-cs.info/docs/advanced-study/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ossu/computer-science#core-programming&#34;&gt;OSSU Core&#xA;Programming&lt;/a&gt;.&#xA;How to Code and Programming Languages are important Intermediate CS&#xA;ideas. Object-oriented design and design patterns are AP CS A and&#xA;beyond.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://projecteuler.net/archives&#34;&gt;Project Euler Problems&lt;/a&gt; are a&#xA;great way to give yourself something to do in a new programming&#xA;language.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;How to Think Like a Computer Scientist: &lt;a href=&#34;https://openbookproject.net/thinkcs/python/english3e/&#34;&gt;online&#xA;book&lt;/a&gt;,&#xA;&lt;a href=&#34;https://runestone.academy/ns/books/published/thinkcspy/index.html&#34;&gt;interactive online&#xA;project&lt;/a&gt;,&#xA;and &lt;a href=&#34;https://www.amazon.com/Think-Python-Like-Computer-Scientist/dp/1491939362/&#34;&gt;Think Python on&#xA;Amazon&lt;/a&gt;&#xA;are all versions of the same book.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sarabander.github.io/sicp/&#34;&gt;Structure and Interpretation of Computer&#xA;Programs&lt;/a&gt; - a famously&#xA;interesting and challenging text used in the MIT introductory&#xA;computer science course for many years. A mathematical&#xA;sophistication is needed to read it successfully. (Try it!)&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-11-22</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-11-22/</link>
      <pubDate>Mon, 22 Nov 2021 07:08:15 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-11-22/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(xer) The function &lt;code&gt;xer :: (Double, Double) -&amp;gt; (Int, Int)&lt;/code&gt; gives&#xA;the grid coordinates of the square that contains the given&#xA;coordinates. (See image.)&lt;/p&gt;&#xA;&lt;p&gt;The grid squares have side length 4.&#xA;There is a grid with one square is centered at&#xA;(-6.5,-6.5), another at (-6.5,-2.5), and more filling in the space.&lt;/p&gt;&#xA;&lt;p&gt;For example, &lt;code&gt;xer (-6.4,-5.9) == (0,0)&lt;/code&gt; and &lt;code&gt;xer (6.5,2.5)==(3,2)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CodeWorld&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;centers&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Double&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;centers&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;draw1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;translated&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6.5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;putStrLn&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;checks&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;drawingOf&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pictures&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;coordinatePlane&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;draw1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;centers&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;checks&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Barbell) Make an &lt;code&gt;activityOf&lt;/code&gt; in&#xA;&lt;a href=&#34;https://code.world/haskell&#34;&gt;CodeWorld&lt;/a&gt; that has a solid orange&#xA;rectangle with two blue circles, one on each end of the rectangle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-11-08</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-11-08/</link>
      <pubDate>Mon, 08 Nov 2021 10:07:48 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-11-08/</guid>
      <description>&lt;p&gt;You can write Haskell using &lt;a href=&#34;code.world/haskell&#34;&gt;https://code.world/haskell&lt;/a&gt;.&#xA;There is a &lt;a href=&#34;https://drive.google.com/file/d/11HTeqiYeTfLcYA1CPQ0qyiMoV7ZMFVnV/view?usp=sharing&#34;&gt;demo video&lt;/a&gt; for CPS students (kind of poor sound&#xA;quality).&lt;/p&gt;&#xA;&lt;h3 id=&#34;demo-code&#34;&gt;Demo Code&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;{-# LANGUAGE OverloadedStrings #-}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CodeWorld&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;{--&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;main = do drawingOf $ pictures [ myRect2, myRect, coordinatePlane ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;  where myRect = colored red $ translated 4 2.5 $ solidRectangle 8 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        myRect2 = colored (RGBA 0 0 1.0 0.5) $ solidRectangle 6 2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;showRed&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Bool&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;showBlue&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Bool&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;initialModel&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;eventHandler&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Event&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;eventHandler&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KeyPress&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;showRed&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;eventHandler&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PointerPress&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;eventHandler&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;game&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;activityOf&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;initialModel&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;eventHandler&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;drawHandler&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;maybeVisible&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;color&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;True&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;color&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;maybeVisible&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;color&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;False&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RGBA&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- transparent&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;drawHandler&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Picture&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;drawHandler&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GameState&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;pictures&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;blueRect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#000&#34;&gt;redRect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;redRect&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;colored&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;maybeVisible&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;red&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;showRed&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#000&#34;&gt;translated&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2.5&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#000&#34;&gt;solidRectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#000&#34;&gt;blueRect&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;colored&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;maybeVisible&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RGBA&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#000&#34;&gt;solidRectangle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;notes-on-code&#34;&gt;Notes on Code&lt;/h3&gt;&#xA;&lt;p&gt;There are two &amp;ldquo;more difficult than necessary&amp;rdquo; items shown above:&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-11-01</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-11-01/</link>
      <pubDate>Fri, 29 Oct 2021 10:54:30 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-11-01/</guid>
      <description>&lt;p&gt;This is a 1 dimensional version of win detection in Connect Four.&lt;/p&gt;&#xA;&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;&#xA;&lt;p&gt;Write the &lt;code&gt;all_match_nz&lt;/code&gt; function that returns True when all of the&#xA;elements of the input list are the same &lt;em&gt;and not zero&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;all_match_nz :: [Player] -&amp;gt; Bool&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;It makes sense to say &lt;code&gt;all_match_nz [] == True&lt;/code&gt;, but make sure that&#xA;&lt;code&gt;all_match_nz [0,0,0,0] == False&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;skip-counter&#34;&gt;Skip Counter&lt;/h2&gt;&#xA;&lt;p&gt;A board consists of X, O, and blank squares.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;X..XOX.XOX.X&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;A player wins with four evenly spaced markers. In this case, there are&#xA;four evenly spaced X&amp;rsquo;s (indices 3, 5, 7, and 9), so X wins this game.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-28</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-28/</link>
      <pubDate>Thu, 28 Oct 2021 10:03:48 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-28/</guid>
      <description>&lt;p&gt;We discussed &lt;code&gt;topOfPile&lt;/code&gt; first. This function gives the y-coordinate&#xA;(row) that a piece dropped in a particular column will end up in.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;topOfPile :: Board -&amp;gt; Int -&amp;gt; Int&#xA;topOfPile board col = undefined&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Using the example board &lt;code&gt;b&lt;/code&gt; pictured below:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/ap-cs/haskell/daily/2021-10-28/pile-board.png&#34; width=&#34;250px&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;Playing in column 1 would result in a piece in row 2. Playing in&#xA;column 3 would result in a piece in row 0. Playing in column 2&#xA;should give a row of 3, even if the board has only three rows - worry&#xA;about that being an illegal move in a different place.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-27</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-27/</link>
      <pubDate>Wed, 27 Oct 2021 08:53:31 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-27/</guid>
      <description>&lt;h2 id=&#34;opener&#34;&gt;Opener&lt;/h2&gt;&#xA;&lt;p&gt;Put the strings together, inserting the separator between each one.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;myB :: String -&amp;gt; [String] -&amp;gt; String&#xA;myB _ _ = &amp;quot;&amp;quot;&#xA;&#xA;testB = [ myB &amp;quot;Q&amp;quot; [&amp;quot;R&amp;quot;] == &amp;quot;R&amp;quot;, &#xA;          myB &amp;quot;:&amp;quot; [&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;] == &amp;quot;A:B:C&amp;quot; ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;1-alpha&#34;&gt;1. Alpha&lt;/h2&gt;&#xA;&lt;p&gt;Write a function that takes in a list of numbers and puts out a String&#xA;with the corresponding letters of the alphabet.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;alpha :: [Int] -&amp;gt; String&#xA;alpha _ = &amp;quot;&amp;quot;&#xA;&#xA;alphaTest = [ &#xA;  alpha [25] == &amp;quot;Z&amp;quot;&#xA;  ,alpha [1,2,0,0] == &amp;quot;BCAA&amp;quot;&#xA;  ]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;2-beta&#34;&gt;2. Beta&lt;/h2&gt;&#xA;&lt;p&gt;Write a function that takes in a list of lists and puts out a String&#xA;with each row changed into letters of the alphabet, separated by the&#xA;&lt;code&gt;\n&lt;/code&gt; character.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-25</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-25/</link>
      <pubDate>Mon, 25 Oct 2021 07:31:50 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-25/</guid>
      <description>&lt;p&gt;Basic definitions:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Player&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Piece&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Player&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Posn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Board&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Piece&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are two different ways you could represent a Connect Four&#xA;board. We will write some functions to convert between the two&#xA;possible representations. These functions are to warm up; they might&#xA;not actually be used in your final version of the game.&lt;/p&gt;&#xA;&lt;h2 id=&#34;representations&#34;&gt;Representations&lt;/h2&gt;&#xA;&lt;p&gt;There are two different ways to represent the following 2 row, 3&#xA;column board:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;- O -&#xA;O X X&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;One way would be simply to replace X by 1 and O by 2, letting 0&#xA;represent the empty squares.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-18</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-18/</link>
      <pubDate>Mon, 18 Oct 2021 09:57:48 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-18/</guid>
      <description>&lt;p&gt;Having little functions that run tests is better than retyping your&#xA;test code every time. Automation means you will test more, and you&#xA;don&amp;rsquo;t have to remember the correct results if your program shows them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;infinite-loops&#34;&gt;Infinite Loops&lt;/h2&gt;&#xA;&lt;p&gt;Print something before and after your checks to help you figure out&#xA;when you have an infinite loop. I saw someone with&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;ck&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;putStrLn&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Begin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;putStrLn&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;checks&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;putStrLn&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;End&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The example check below never terminates (infinite loop)&amp;hellip; try it&#xA;with the &lt;code&gt;ck&lt;/code&gt; function above and notice how you never see &amp;ldquo;End&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-14</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-14/</link>
      <pubDate>Thu, 14 Oct 2021 11:24:38 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-14/</guid>
      <description>&lt;p&gt;The &lt;code&gt;isEverywhere&lt;/code&gt; function takes in a list of integers (xs) and a&#xA;single integer (n) and returns true if the number n appears at least once&#xA;in every pair of adjacent numbers in xs.&lt;/p&gt;&#xA;&lt;p&gt;Examples:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;isEverywhere :: [Int] -&amp;gt; Int -&amp;gt; Bool&#xA;isEverywhere [1,3,4] 3 == True&#xA;isEverywhere [3,1,4] 3 == False&#xA;isEverywhere [3,1,1,3] 3 == False&#xA;isEverywhere [7] 3 == True &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The last one is kind of weird - &amp;ldquo;logically&amp;rdquo;, if there are no adjacent&#xA;pairs then &amp;ldquo;every one&amp;rdquo; has a 3. If the answer were False then you&#xA;would have to be able to show a pair of adjacent numbers without a&#xA;three&amp;hellip; but you can&amp;rsquo;t, there aren&amp;rsquo;t any.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-12</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-12/</link>
      <pubDate>Tue, 12 Oct 2021 11:15:41 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-12/</guid>
      <description>&lt;p&gt;Warmup: count the number of times that an 8 comes before a 9 in a list of&#xA;integers.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Basic: count one for every 8 that comes &lt;em&gt;immediately&lt;/em&gt; before a 9.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Advanced: count one for every time there is a 9 somewhere after an&#xA;8, giving two for this example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  [8,1,1,1,9,8,9]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;class-notes&#34;&gt;Class notes&lt;/h2&gt;&#xA;&lt;p&gt;If the problem is phrased &amp;ldquo;count the number of times a 9 comes after&#xA;an 8&amp;rdquo;, then I would count two for either of these examples:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feeling Failure</title>
      <link>https://wy-cs.info/docs/feeling-failure/</link>
      <pubDate>Wed, 06 Oct 2021 22:03:09 -0500</pubDate>
      <guid>https://wy-cs.info/docs/feeling-failure/</guid>
      <description>&lt;p&gt;One common problem at Whitney Young: lots of people here are used to&#xA;being good at everything. When you find something you are not&#xA;instantly successful at, it is natural to think you are intrinsically&#xA;&amp;ldquo;no good at it&amp;rdquo;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;positive-messages-for-you&#34;&gt;Positive messages for you&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Your family cares for you no matter what. (Support!)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Talking is better than hiding. (Even when you feel like you know nothing.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You will get into a good fit college even if your senior year does&#xA;not feel perfect. College applications can make people feel&#xA;bad. I observed a senior denigrate their accomplishments as &amp;ldquo;six&#xA;years of slacking.&amp;rdquo; No way, it&amp;rsquo;s not true.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-06</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-06/</link>
      <pubDate>Wed, 06 Oct 2021 08:04:47 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-06/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The function &lt;code&gt;shuffle2 :: [Int] -&amp;gt; [Int] -&amp;gt; [Int]&lt;/code&gt; takes in two&#xA;lists of numbers and interleaves them, taking two from the first&#xA;list, then one from the second list. When one list runs out the&#xA;rest of the other list is output.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; shuffle2 [10,20,30,40] [100,200,300] == &#xA;     [10,20,100,30,40,200,300]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;code&gt;either24 :: [Int] -&amp;gt; Bool&lt;/code&gt;) Given an array of ints, return true&#xA;if the array contains a 2 next to a 2 or a 4 next to a 4, but not&#xA;both.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-10-04</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-10-04/</link>
      <pubDate>Mon, 04 Oct 2021 09:57:37 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-10-04/</guid>
      <description>&lt;p&gt;The &lt;code&gt;makes&lt;/code&gt; function takes in a number n and a list of numbers xs. It&#xA;returns the number of ways to make n by adding the first number in the&#xA;list to some other number later in the list.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;makes :: Int -&amp;gt; [Int] -&amp;gt; Int&#xA;makes 12 [6,6] == 1&#xA;makes 11 [8,3,11,3] == 2&#xA;makes 2 [1,1,1,1] == 3 &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Continue to &lt;a href=&#34;https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-04/&#34;&gt;Chapter 4 Discussion IV&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021-09-30</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2021-09-30/</link>
      <pubDate>Thu, 30 Sep 2021 07:06:24 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2021-09-30/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h2 id=&#34;char-vs-list-of-char&#34;&gt;Char vs List of Char&lt;/h2&gt;&#xA;&lt;p&gt;Recently seen problem: attempt to put an &lt;code&gt;@&lt;/code&gt; sign after the first&#xA;letter of a word:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;f :: [Char] -&amp;gt; [Char]  -- same as String -&amp;gt; String&#xA;f &amp;quot;&amp;quot; = &amp;quot;&amp;quot;&#xA;f (x:xs) = x : &amp;quot;@&amp;quot; : xs&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This code does not work because &lt;code&gt;&amp;quot;@&amp;quot;&lt;/code&gt; is a list containing a single&#xA;character, which could also be written &lt;code&gt;[&#39;@&#39;]&lt;/code&gt;, instead of the desired&#xA;single character &lt;code&gt;&#39;@&#39;&lt;/code&gt;. The correct function follows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Student Achievement</title>
      <link>https://wy-cs.info/ml/data/student/</link>
      <pubDate>Mon, 05 Apr 2021 09:43:55 -0500</pubDate>
      <guid>https://wy-cs.info/ml/data/student/</guid>
      <description>&lt;section class=&#34;article&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/student/files/student-mat.csv&#34;&gt;student-mat.csv&lt;/a&gt;&#xA;(56 kB)&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ml/data/student/files/student-por.csv&#34;&gt;student-por.csv&lt;/a&gt;&#xA;(92 kB)&#xA;&lt;/li&gt;&#xA;&lt;/section&gt;&#xA;&lt;p&gt;&lt;a href=&#34;ISL-05-StudentAchievement.ipynb&#34;&gt;Example notebook&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sem.1 Final</title>
      <link>https://wy-cs.info/ml/isl/sem-i/final/</link>
      <pubDate>Tue, 02 Feb 2021 15:45:39 -0600</pubDate>
      <guid>https://wy-cs.info/ml/isl/sem-i/final/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;$&#xA;\DeclareMathOperator{\Normal}{Normal}&#xA;\DeclareMathOperator{\Exp}{Exp}&#xA;$&lt;/p&gt;&#xA;&lt;h2 id=&#34;part-i&#34;&gt;Part I&lt;/h2&gt;&#xA;&lt;p&gt;Givens:&lt;/p&gt;&#xA;&lt;p&gt;\begin{gather*}&#xA;X \sim \Normal(\mu=2, \sigma^2 = 5)&#xA;\\&#xA;W \sim \Exp(λ=-0.6)&#xA;\end{gather*}&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Produce good estimates (or exact values) for $E[X]$, $E[W]$, and&#xA;$E[Y]$. Explain the method(s) you used in a few words or sentences.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Find the variance of Y.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>02 Quiz A</title>
      <link>https://wy-cs.info/ml/isl/ch02/02-quiz-a/</link>
      <pubDate>Thu, 07 Jan 2021 08:01:25 -0600</pubDate>
      <guid>https://wy-cs.info/ml/isl/ch02/02-quiz-a/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Explain whether you would generally expect a flexible or inflexible&#xA;learning method to perform better. Explain why.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;For each scenario: (a) regression or classification? (b) inference&#xA;or prediction? (c) What are n and p?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a graph using R. Then use K-nearest neighbors with K=3 to&#xA;classify the mystery point.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;application&#34;&gt;Application&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Side-by-side boxplot.&lt;/li&gt;&#xA;&lt;li&gt;Create a new qualitative variable.&lt;/li&gt;&#xA;&lt;li&gt;Histogram&lt;/li&gt;&#xA;&lt;li&gt;Which variables would be useful to predict X?&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Timeseries</title>
      <link>https://wy-cs.info/ml/rmisc/timeseries/</link>
      <pubDate>Mon, 05 Oct 2020 11:33:06 -0500</pubDate>
      <guid>https://wy-cs.info/ml/rmisc/timeseries/</guid>
      <description>&lt;p&gt;You might want to work with a &amp;ldquo;Time Series&amp;rdquo; as a tibble.&lt;/p&gt;&#xA;&lt;h2 id=&#34;do-you-have-a-time-series&#34;&gt;Do you have a time series?&lt;/h2&gt;&#xA;&lt;p&gt;Look for a sign that you are looking at a time series at the start of&#xA;its printout:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;A Time Series: 192 × 8&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;simple-conversion&#34;&gt;Simple Conversion&lt;/h2&gt;&#xA;&lt;p&gt;If you want to keep it simple, just use the row number in the table to&#xA;keep track of how many months into the time series you are.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Practice All</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-practice-all/</link>
      <pubDate>Wed, 15 Jan 2020 10:06:15 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-practice-all/</guid>
      <description>&lt;p&gt;Do all of this work in a single Racket file. You &lt;strong&gt;need to turn this&#xA;assignment in&lt;/strong&gt; on classroom. You may attach your solution file or&#xA;copy and paste the code as a &lt;em&gt;private&lt;/em&gt; comment and mark the assignment&#xA;complete.&lt;/p&gt;&#xA;&lt;p&gt;Read Section 15.6 (Unnecessary conditionals) to review how to&#xA;simplify. (PDF page 230ff.)&lt;/p&gt;&#xA;&lt;p&gt;Note to book readers: I disagree with the author about section 15.7&#xA;(nested conditionals) so I suggest not reading it. If you need to put&#xA;conditionals inside of conditionals, make a helper function.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flying</title>
      <link>https://wy-cs.info/ecs/scratch/variables-c-flying/</link>
      <pubDate>Thu, 07 Mar 2019 09:38:55 -0600</pubDate>
      <guid>https://wy-cs.info/ecs/scratch/variables-c-flying/</guid>
      <description>&lt;p&gt;Write down your solution.&lt;/p&gt;&#xA;&lt;p&gt;You stand on a platform with a pair of wings near you.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Touch the wings to pick them up.&lt;/li&gt;&#xA;&lt;li&gt;Fall when not touching the platform if you have no wings.&lt;/li&gt;&#xA;&lt;li&gt;Hover or fly if you do have wings. (Can go up, don&amp;rsquo;t fall down.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Write:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Wings: all code needed.&lt;/li&gt;&#xA;&lt;li&gt;Character: Flying and falling&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>11. Treasure Hunt</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/treasurehunt/</link>
      <pubDate>Thu, 21 Feb 2019 11:19:22 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/treasurehunt/</guid>
      <description>&lt;p&gt;Create an interface &lt;code&gt;Currency&lt;/code&gt; that has a &lt;code&gt;double getGoldValue()&lt;/code&gt;&#xA;method that returns the number of grams of gold that equal the worth&#xA;of the item.&lt;/p&gt;&#xA;&lt;p&gt;Create a &lt;code&gt;BankNote&lt;/code&gt; class that implements the &lt;code&gt;Currency&lt;/code&gt; interface. A&#xA;&lt;code&gt;BankNote&lt;/code&gt; should be created in denominations of 1, 2, 5, 10, 20, 50,&#xA;or 100, although you need not enforce this. A &lt;code&gt;BankNote&lt;/code&gt; represents a&#xA;single bill, so you might have lots of them. Add a &lt;code&gt;toString&lt;/code&gt; method&#xA;(see example code below).&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Instanceof</title>
      <link>https://wy-cs.info/ap-cs/jm/ch11/instanceof/</link>
      <pubDate>Thu, 21 Feb 2019 11:19:17 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch11/instanceof/</guid>
      <description>&lt;p&gt;The &lt;code&gt;instanceof&lt;/code&gt; operator tells you if a variable is an &amp;ldquo;instance of&amp;rdquo;&#xA;(made from a subclass of) a given class. Example: &lt;code&gt;if (x instanceof Cat) { ... }&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Casting looks like this: &lt;code&gt;(Cat) x&lt;/code&gt;. Casting can fail (with a &amp;ldquo;runtime&#xA;exception&amp;rdquo;) if &lt;code&gt;x&lt;/code&gt; is not really a Cat. This can happen inside&#xA;functions that do not know where their inputs are coming from.&lt;/p&gt;&#xA;&lt;p&gt;Frequently you check to see if something is the right class before&#xA;using a cast to &amp;ldquo;convert it&amp;rdquo; to that class. The quotes are around&#xA;&amp;ldquo;convert&amp;rdquo; because casting just reveals a relationship that is already&#xA;true, it does not create a new relationship or change the object in&#xA;any way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Classes Review</title>
      <link>https://wy-cs.info/ap-cs/sem1/classes-review/</link>
      <pubDate>Fri, 25 Jan 2019 14:30:51 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/sem1/classes-review/</guid>
      <description>&lt;h2 id=&#34;gnome&#34;&gt;Gnome&lt;/h2&gt;&#xA;&lt;p&gt;A Gnome has a double precision height in meters and an integer weight&#xA;in kilograms. When you make a new Gnome, if you do not specify the&#xA;weight it is assumed to be 10kg.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    Gnome a = new Gnome(0.37, 4); // 0.37m, 4kg&#xA;&#x9;Gnome b = new Gnome(0.61); // 0.61m, 10kg&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The Gnome class should have the following methods:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;public void grow()&lt;/code&gt;: Increase the height by 0.1m.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public void eat()&lt;/code&gt;: A Gnome gains 1kg every 3 times it eats.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;public String see()&lt;/code&gt;: Returns a string showing height and&#xA;weight: &amp;ldquo;ht: 0.37m, wt: 4kg&amp;rdquo; for the Gnome &lt;code&gt;a&lt;/code&gt; above.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Write the complete &lt;code&gt;Gnome&lt;/code&gt; class.&lt;/li&gt;&#xA;&lt;li&gt;Demonstrate its use by making a 12kg, 80cm tall gnome, having it&#xA;grow and then eat 5 times. Print out what you &lt;code&gt;see()&lt;/code&gt;: it should be&#xA;0.9m and 13kg.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;shootingstar&#34;&gt;ShootingStar&lt;/h2&gt;&#xA;&lt;p&gt;[This class had problems, was unclear and the details of tick() are not&#xA;important now.]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Agar.io</title>
      <link>https://wy-cs.info/intermediate-cs/ch21/agar-io/</link>
      <pubDate>Fri, 18 Jan 2019 07:45:22 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch21/agar-io/</guid>
      <description>&lt;p&gt;I hope you know the game Agar.io. A circle moves around the screen toward&#xA;the mouse. There is a &amp;ldquo;food&amp;rdquo;. When the circle touches (eats) the food, the food disappears and the circle gets larger. The food reappears in a random location.&lt;/p&gt;&#xA;&lt;p&gt;Starter code: &lt;a href=&#34;agar-io-checks.rkt&#34;&gt;agar-io.rkt&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Advanced:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;As the circle gets larger, it moves more slowly.&lt;/li&gt;&#xA;&lt;li&gt;When the mouse is further from the center of the circle, it moves more quickly.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Troll Quiz Practice</title>
      <link>https://wy-cs.info/intermediate-cs/ch20/trollquiz/</link>
      <pubDate>Fri, 11 Jan 2019 14:28:43 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/trollquiz/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;You control a star, move four directions with the arrow keys.&lt;/li&gt;&#xA;&lt;li&gt;The goal is a stop sign in a random non-moving location.&lt;/li&gt;&#xA;&lt;li&gt;Game stops when your star drives into the stop sign.&lt;/li&gt;&#xA;&lt;li&gt;Win screen appears.&lt;/li&gt;&#xA;&lt;li&gt;Hit &amp;ldquo;q&amp;rdquo; to quit. Shows &amp;ldquo;quitter&amp;rdquo; instead of &amp;ldquo;you win&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>8. Build It Test</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-test/</link>
      <pubDate>Thu, 06 Dec 2018 14:19:06 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-test/</guid>
      <description>&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The model is a time we will call $t$. The time will be between $0$ and $6\pi$.&lt;/p&gt;&#xA;&lt;p&gt;The people coordinates are given by:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;  (define (x-blue t) (* 200 (cos t))&#xA;  (define (y-red  t) (* 150 (sin t))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;yellow-box&#34;&gt;Yellow Box&lt;/h2&gt;&#xA;&lt;p&gt;Make a 400x50 yellow rectangle for the background.&#xA;Place a single horizontal gray line in the middle (for the axis).&lt;/p&gt;</description>
    </item>
    <item>
      <title>2018-10-16</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2018-10-16/</link>
      <pubDate>Wed, 17 Oct 2018 08:46:50 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2018-10-16/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codingbat.com/prob/p169506&#34;&gt;notAlone&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;notAlone&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;notAlone&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;nums&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;undefined&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://usaco.org/index.php?page=viewproblem2&amp;amp;cpid=831&#34;&gt;Team Tic Tac Toe&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write teamWins to determine if a given team wins a given three&#xA;in a row.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;teamWins&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Char&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Bool&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;teamWins&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;team&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;undefined&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write allThrees, which gets all of the three in a row segments&#xA;from a board.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;allThrees&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;allThrees&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;board&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;undefined&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write allTeams, which produces a list of all possible teams.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;allTeams&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Combine the previous functions to solve the problem.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Bonus.) &lt;a href=&#34;http://usaco.org/index.php?page=viewproblem2&amp;amp;cpid=833&#34;&gt;Family&#xA;Tree&lt;/a&gt;. I use&#xA;&lt;code&gt;momList&lt;/code&gt; to be the list of pairs of strings (mother, child).&lt;/p&gt;</description>
    </item>
    <item>
      <title>2018.10.12</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/daily/2018-10-12/</link>
      <pubDate>Fri, 12 Oct 2018 21:38:03 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/daily/2018-10-12/</guid>
      <description>&lt;p&gt;Make an animation with two stick figures moving at the same time:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;One starts at the top left corner of the frame and moves right.&lt;/li&gt;&#xA;&lt;li&gt;The other starts in the bottom right corner of the frame and moves&#xA;left.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;It is OK if the animation does not work once the figures get to the&#xA;edge(s).&lt;/p&gt;&#xA;&lt;p&gt;Remember: start with one moving figure, work through the process step&#xA;by step until you have one figure moving correctly. Then add the other&#xA;figure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2018.10.11</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/daily/2018-10-11/</link>
      <pubDate>Fri, 12 Oct 2018 21:36:21 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/daily/2018-10-11/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an animation with a shape that turns 15 degrees and grows by&#xA;20% every second. (Possibly adjust to 5 degrees and 2% every 0.3&#xA;sec once it works and you want it to look good.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an animation where a shape starts in the upper left corner of&#xA;an outlines rectangle and moves to a position 5 pixels right and&#xA;two pixels down every 0.1 second.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>2018-10-09 Project</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2018-10-09/</link>
      <pubDate>Tue, 09 Oct 2018 09:38:11 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2018-10-09/</guid>
      <description>&lt;p&gt;You have a week to complete this project. You will need to find time&#xA;to work on it outside of class.&lt;/p&gt;&#xA;&lt;p&gt;Due: Monday, October 15, 2018&lt;/p&gt;&#xA;&lt;h2 id=&#34;option-1-recommended&#34;&gt;Option 1 (Recommended)&lt;/h2&gt;&#xA;&lt;p&gt;Do both of the following, including at least three tests for each function:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Six coding bat problems. Recommended sources&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://codingbat.com/java/Array-2&#34;&gt;Array-2&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://codingbat.com/java/String-2&#34;&gt;String-2&lt;/a&gt;,&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://codingbat.com/java/Logic-1&#34;&gt;Logic-1&lt;/a&gt;. Other choices&#xA;permitted, ask.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;One Computing Olymiad problem, Bronze level. (Ex: &lt;a href=&#34;http://usaco.org/index.php?page=dec15results&#34;&gt;Dec&#xA;2015&lt;/a&gt; or &lt;a href=&#34;http://usaco.org/index.php?page=jan16results&#34;&gt;Jan 2016&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;option-2-advanced-a&#34;&gt;Option 2 (Advanced, A+)&lt;/h2&gt;&#xA;&lt;p&gt;Write &lt;a href=&#34;https://wy-cs.info/ap-cs/haskell/connect-four/&#34;&gt;Connect Four&lt;/a&gt;. There is a&#xA;project walkthrough with a list of functions to write and notes on the&#xA;trouble spots.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2018.10.04 Square Pasture</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2018-10-04/</link>
      <pubDate>Thu, 04 Oct 2018 08:41:30 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2018-10-04/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://usaco.org/index.php?page=viewproblem2&amp;amp;cpid=663&#34;&gt;Square&#xA;Pasture&lt;/a&gt;. There&#xA;are two rectangular pastures, each given by the coordinates of their&#xA;upper left and lower right points. The two pastures do not&#xA;overlap. Find the minimum area required for a single square pasture to&#xA;enclose the two rectangle pastures.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;sqPasture&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;sqPasture&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;x4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;y4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;undefined&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;additional-exercise&#34;&gt;Additional Exercise&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codingbat.com/prob/p159979&#34;&gt;List run of 3&lt;/a&gt;. Given a list of&#xA;&lt;code&gt;Int&lt;/code&gt;, return true if the array contains either three even or three&#xA;odd values all next to each other. Lists of length less than 3 are&#xA;definitely false because they don&amp;rsquo;t even have three values.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2018.10.03 Cow Signal</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2018-10-03/</link>
      <pubDate>Wed, 03 Oct 2018 10:02:02 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2018-10-03/</guid>
      <description>&lt;p&gt;We worked on the &lt;a href=&#34;http://usaco.org/index.php?page=viewproblem2&amp;amp;cpid=665&#34;&gt;Cow&#xA;Signal&lt;/a&gt;&#xA;problem.&lt;/p&gt;&#xA;&lt;p&gt;To make your writing simpler, you should use the signature below. The&#xA;very last step of printing out everything on its own line is not an&#xA;important part of the problem.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;cowSignal&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Printing on multiple lines: use &lt;code&gt;\n&lt;/code&gt; like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;This&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;prints&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;many&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;lines&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;putStrLn&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://repl.it/@maueroats/FreeViolentLanserver&#34;&gt;Solution discussed period 2.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Racket?</title>
      <link>https://wy-cs.info/intermediate-cs/docs/why-racket/</link>
      <pubDate>Wed, 05 Sep 2018 20:12:44 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/why-racket/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Many people we encounter tell us they wish they knew how to code and then ask which programming language they should learn. Given the press that some programming languages get, this question is not surprising. But it is also wholly inappropriate. Learning to program in a currently fashionable programming language often sets up students for eventual failure. Fashion in this world is extremely short lived. A typical “quick programming in X” book or course fails to teach principles that transfer to the next fashion language. Worse, the language itself often distracts from the acquisition of transferable skills, at the level of both expressing solutions and dealing with programming mistakes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sem.II Final Splash</title>
      <link>https://wy-cs.info/ap-cs/jm/sem2final/final-splash/</link>
      <pubDate>Tue, 12 Jun 2018 09:15:41 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/sem2final/final-splash/</guid>
      <description>&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;Helper Classes&lt;/h4&gt;&#xA;&#xA;     &lt;section class=&#34;article&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;a href=&#34;https://raw.githubusercontent.com/maueroats/teaching--2025-2026/main/ap-cs/jm/sem2final/final-splash.files/ReadMatrix.java&#34;&gt;ReadMatrix.java&lt;/a&gt;&#xA;(1 kB)&#xA;&lt;/li&gt;&#xA;&lt;/section&gt;&#xA;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The Whitney Young Dolphins have come up with a new game to play: &amp;ldquo;Splash&amp;rdquo;.&lt;/p&gt;&#xA;&lt;script&gt;&#xA;MathJax = {&#xA; tex: {&#xA;  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],&#xA;  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]&#xA; },&#xA;    svg: {&#xA;        fontCache: &#39;global&#39;&#xA;    }&#xA;};&#xA;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;The game of splash is played on an $N \times N$ grid. A dolphin claims&#xA;a square by splashing their fin and writing their id number in the&#xA;square.&lt;/p&gt;&#xA;&lt;p&gt;The game ends when all of the squares have numbers in them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>14. Test Corrections</title>
      <link>https://wy-cs.info/ap-cs/jm/ch14/ch14-test-corr/</link>
      <pubDate>Thu, 01 Mar 2018 11:13:41 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch14/ch14-test-corr/</guid>
      <description>&lt;p&gt;Tests from Chapter 14 are returned Thursday/Friday.&lt;/p&gt;&#xA;&lt;p&gt;Understanding your score:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Number: multiple choice score, out of 20.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Letter below number: programming free response score.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Grading:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;20 points multiple choice: turn in test corrections Monday for half&#xA;points back.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;20 points free response: discuss with me if you had problems&#xA;here. (A=95%, B=85%, etc.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Test corrections:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Explain what the right answer is. Show work justifying you are correct.&lt;/li&gt;&#xA;&lt;li&gt;Code tracing (problems 2,8) - explain in writing what happens as you&#xA;trace your example through the program.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>13. ArrayList Quiz</title>
      <link>https://wy-cs.info/ap-cs/jm/ch13/13-quiz-1/</link>
      <pubDate>Tue, 13 Feb 2018 08:20:28 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch13/13-quiz-1/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Change the sequence &amp;ldquo;I&amp;rdquo; &amp;ldquo;run&amp;rdquo; &amp;ldquo;fast&amp;rdquo; to &amp;ldquo;You&amp;rdquo; &amp;ldquo;and&amp;rdquo; &amp;ldquo;I&amp;rdquo; &amp;ldquo;run&amp;rdquo; &amp;ldquo;fast&amp;rdquo;&#xA;every place that the former occurs.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static void runfast(ArrayList&amp;lt;String&amp;gt; data)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;No mice&lt;/strong&gt;. Remove every &amp;ldquo;mouse&amp;rdquo; (or &amp;ldquo;mice&amp;rdquo;) in the input.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt; public static void noMouse(ArrayList&amp;lt;String&amp;gt; school)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;&#xA;&lt;p&gt;Read Wolfram&amp;rsquo;s numbering scheme for&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Elementary_cellular_automaton&#34;&gt;one dimensional cellular automata&lt;/a&gt;. Write a function that creates a new ArrayList according to a given rule number.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;public static ArrayList&amp;lt;Boolean&amp;gt; evolve (int rule, ArrayList&amp;lt;Boolean&amp;gt; data)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>12. Chomp</title>
      <link>https://wy-cs.info/ap-cs/jm/ch12/12-chomp/</link>
      <pubDate>Sun, 21 Jan 2018 23:08:32 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch12/12-chomp/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone.git&#34;&gt;Class JavaMethods GitHub&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone/tree/master/ch12/Chomp&#34;&gt;Chomp project directory&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone/blob/master/ch12/Chomp/CharMatrix.java&#34;&gt;CharMatrix class&lt;/a&gt;.&#xA;The CharMatrix code can be copy-and-pasted into Repl.it or DrJava. Make sure you test your code as you go, so you know what the problems are. There is a &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone/blob/master/ch12/Chomp/CharMatrixTester.java&#34;&gt;tester file&lt;/a&gt; in the Chomp project directory that works with DrJava.&lt;/p&gt;&#xA;&lt;h2 id=&#34;issues&#34;&gt;Issues&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Using DrJava: how do you run the tests? &lt;strong&gt;Answer&lt;/strong&gt;: Make sure the file &lt;code&gt;CharMatrixTester.java&lt;/code&gt; is in your project. Click &lt;code&gt;Compile Project&lt;/code&gt; and then &lt;code&gt;Test Project&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Semester Review Topics List</title>
      <link>https://wy-cs.info/intermediate-cs/sem1review/sem-review-topics-1/</link>
      <pubDate>Sun, 21 Jan 2018 23:01:04 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/sem1review/sem-review-topics-1/</guid>
      <description>&lt;p&gt;We have learned about randomness, writing consistent signatures for&#xA;big-bang, writing high quality tests, and how to limit numerical values.&lt;/p&gt;&#xA;&lt;h2 id=&#34;recent-major-topics&#34;&gt;Recent major topics&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Randomness&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Work with a non-random function first.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Non-random function has more parameters than random version.&lt;/li&gt;&#xA;&lt;li&gt;Testable.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Random function&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Calls non-random function with random input.&lt;/li&gt;&#xA;&lt;li&gt;Not usually tested.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Signatures / Big-Bang&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Information flow must be consistent&lt;/li&gt;&#xA;&lt;li&gt;Write signatures for everything&lt;/li&gt;&#xA;&lt;li&gt;Test everything individually&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;code&gt;check-with&lt;/code&gt; to catch signature errors. (See below.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Testing&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit Testing Level II</title>
      <link>https://wy-cs.info/ap-cs/testing/testing-medium/</link>
      <pubDate>Fri, 19 Jan 2018 10:39:50 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/testing/testing-medium/</guid>
      <description>&lt;p&gt;You can make common setup code run with &lt;code&gt;@Before&lt;/code&gt;. Use it to give instance variables&#xA;their initial values for each test. This method runs once before &lt;strong&gt;each&lt;/strong&gt; test, so it will reset the variables to the values you want them to have at the start.&lt;/p&gt;&#xA;&lt;h2 id=&#34;common-setup-for-all-tests&#34;&gt;Common setup for all tests&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;@Before&lt;/code&gt;: Method runs before every test. Used to set up instance variables containing objects to be tested.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    private int maxNum;&#xA;    @Before&#xA;    public void set_max() {&#xA;        maxNum = 4;&#xA;    }&#xA;    @Test&#xA;    public void test_max() {&#xA;        assertEquals(maxNum,4);&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;many-tests-with-the-same-setup&#34;&gt;Many tests with the same setup&lt;/h2&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;https://github.com/junit-team/junit4/wiki/Parameterized-tests&#34;&gt;parameterized tests&lt;/a&gt;.&#xA;They may be to complex for beginners, but see &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/java-rotary-phone/blob/master/ch10q2/HospitalTest.java&#34;&gt;my HospitalTest code on GitHub&lt;/a&gt; or &lt;a href=&#34;HospitalTest.java&#34;&gt;the raw file&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10. Test</title>
      <link>https://wy-cs.info/ap-cs/jm/ch10/10-test/</link>
      <pubDate>Thu, 11 Jan 2018 21:55:42 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/jm/ch10/10-test/</guid>
      <description>&lt;p&gt;We took a test on Strings, a little bit of loops, and CodingBat. You should use the &lt;a href=&#34;Main.java&#34;&gt;testing code template&lt;/a&gt; to make sure your code works before re-submitting it. Please resubmit Tuesday.&lt;/p&gt;&#xA;&lt;p&gt;You should be able to copy and paste this code in to &lt;code&gt;repl.it&lt;/code&gt; as well as using it in DrJava.&lt;/p&gt;</description>
    </item>
    <item>
      <title>15. Practice Quiz</title>
      <link>https://wy-cs.info/intermediate-cs/ch15/15-practice-quiz/</link>
      <pubDate>Sun, 10 Dec 2017 21:55:22 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch15/15-practice-quiz/</guid>
      <description>&lt;h2 id=&#34;review-concepts&#34;&gt;Review Concepts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Design process (as always!). Signature, purpose, examples, function, check-expect.&#xA;Especially plan to use the design process when you can &lt;strong&gt;not&lt;/strong&gt; write the function.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Helper functions as in: &lt;code&gt;count-votes-4&lt;/code&gt;, &lt;code&gt;who-won&lt;/code&gt;, &lt;code&gt;4-votes-&amp;gt;winner&lt;/code&gt;.&#xA;Note that repeated code is &lt;em&gt;not&lt;/em&gt; full credit.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Decisions based on types of inputs (Section 15.8).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;quiz-questions&#34;&gt;Quiz Questions&lt;/h2&gt;&#xA;&lt;p&gt;You may not consult any person or any old homework when taking this&#xA;quiz. You may consult the book and the Racket Help Desk without citing&#xA;them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Karel Intellij</title>
      <link>https://wy-cs.info/ap-cs/karel/karel-intellij/</link>
      <pubDate>Tue, 28 Nov 2017 21:30:53 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/karel-intellij/</guid>
      <description>&lt;p&gt;This documents using &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IntelliJ IDEA&lt;/a&gt; development environment. Way overkill unless &lt;a href=&#34;http://drjava.org&#34;&gt;DrJava&lt;/a&gt; is giving you trouble.&lt;/p&gt;&#xA;&lt;h2 id=&#34;easy-method&#34;&gt;Easy method&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/apcs-karel-intellij&#34;&gt;apcs-karel-intellij&lt;/a&gt; repository.&lt;/p&gt;&#xA;&lt;p&gt;This is just a snapshot to get you started at home. I just copied all of the java files from the karel repository to a new directory in the correct place.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/2017-2018-wy-ap-cs/apcs-karel-intellij&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;IDEA has: File -&amp;gt; New -&amp;gt; Project from existing sources&amp;hellip; that will let you import my files. If you are lucky you can even just use my whole folder.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step&#34;&gt;Step by step&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;New project in IDEA: File -&amp;gt; New -&amp;gt; Project&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;Make lib and src subfolders.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;KarelJRobot.jar&lt;/code&gt; goes into lib.&lt;/li&gt;&#xA;&lt;li&gt;All java files go into src.&lt;/li&gt;&#xA;&lt;li&gt;IDEA:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;File -&amp;gt; Project Structure&amp;hellip; -&amp;gt; Modules (under Project Settings on left)&lt;/li&gt;&#xA;&lt;li&gt;Select &amp;ldquo;Dependencies&amp;rdquo; tab.&lt;/li&gt;&#xA;&lt;li&gt;Use &amp;ldquo;+&amp;rdquo; and choose the KarelJRobot.jar file in the lib folder.&lt;/li&gt;&#xA;&lt;li&gt;I checked the box &amp;ldquo;Export&amp;rdquo;; not sure if that matters.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Build -&amp;gt; Build Project. I had to delete the &amp;ldquo;HackBot.java&amp;rdquo; since I did not include the hacked KarelHRobot library.&lt;/li&gt;&#xA;&lt;li&gt;Run -&amp;gt; Run&amp;hellip;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Ch13 Exercises</title>
      <link>https://wy-cs.info/intermediate-cs/ch13/ch13-exa/</link>
      <pubDate>Mon, 27 Nov 2017 10:03:20 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch13/ch13-exa/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Exercises: 13.3.{3-5}, 13.4.1&lt;/li&gt;&#xA;&lt;li&gt;Exercises: 13.4.2, 13.5.1&lt;/li&gt;&#xA;&lt;li&gt;Exercises: 13.7.{2-7}&lt;/li&gt;&#xA;&lt;li&gt;Exercises: 13.7.{8-13}&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;review&#34;&gt;Review&lt;/h2&gt;&#xA;&lt;p&gt;Exercises that must be reviewed for understanding: 13.7.{7,9,12}.&lt;/p&gt;&#xA;&lt;p&gt;Notes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;13.7.7 &lt;code&gt;play-craps&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;13.7.9 &lt;code&gt;not-single-letter?&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;13.7.12 &lt;code&gt;is-not-red-square?&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Karel Hacked</title>
      <link>https://wy-cs.info/ap-cs/karel/karel-hack/</link>
      <pubDate>Wed, 22 Nov 2017 14:48:29 -0600</pubDate>
      <guid>https://wy-cs.info/ap-cs/karel/karel-hack/</guid>
      <description>&lt;p&gt;On GitHub, I have placed a &lt;a href=&#34;https://github.com/2017-2018-wy-ap-cs/apcs-karel/blob/master/lib/KarelHRobot.jar&#34;&gt;KarelHRobot.jar&lt;/a&gt; that has a hacked &lt;code&gt;UrRobot&lt;/code&gt; that has the following capabilities:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;street()&lt;/code&gt;: The current street the robot is on (row = y)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;avenue()&lt;/code&gt;: The current avenue the robot is on (column = x)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;direction()&lt;/code&gt;: The direction the robot is facing.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;beepers()&lt;/code&gt;: The number of beepers the robot has in its beeper bag.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I know some people have already enhanced &lt;code&gt;UrRobot&lt;/code&gt; with similar capabilities.&#xA;These hacks are to let the rest of you finish your project without learning every&#xA;trick of Karel programming.&lt;/p&gt;</description>
    </item>
    <item>
      <title>8. Test Corrections</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/test-corrections/</link>
      <pubDate>Fri, 10 Nov 2017 16:44:02 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/test-corrections/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1eEIpi5qKbtrFmycjpI_Q2eXL0yTCrSh9CbHEybYvXnQ/edit?usp=sharing&#34;&gt;Chapter 8 Test&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Do corrections for +8 or more points of credit.&lt;/p&gt;&#xA;&lt;p&gt;Corrections mean complete, correct following of the design process for each function.&lt;/p&gt;&#xA;&lt;p&gt;Scores will still be &amp;ldquo;curved&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Number Review More</title>
      <link>https://wy-cs.info/intermediate-cs/ch08/number-review-more/</link>
      <pubDate>Mon, 06 Nov 2017 08:27:17 -0600</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch08/number-review-more/</guid>
      <description>&lt;p&gt;More review problems:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make an ellipse on a background.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The ratio of the width to the height of the ellipse is 3 to 4.&lt;/li&gt;&#xA;&lt;li&gt;The x-coordinate of the mouse controls the width.&lt;/li&gt;&#xA;&lt;li&gt;Hit any key to reset the ellipse to 60 by 80.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A point moves on the graph of y = abs(x-90).&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The point starts at (0,90).&lt;/li&gt;&#xA;&lt;li&gt;The point goes back to (0,90) after it gets to (200,110).&lt;/li&gt;&#xA;&lt;li&gt;The origin is in the lower left (people coordinates, quadrant I).&lt;/li&gt;&#xA;&lt;li&gt;Moving the mouse makes the point go faster.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;A straight line goes through (50,25) and the point where the mouse is.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Online Help</title>
      <link>https://wy-cs.info/intermediate-cs/e-courses/</link>
      <pubDate>Sun, 29 Oct 2017 12:33:32 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/e-courses/</guid>
      <description>&lt;p&gt;The best resource I am aware of is Gregor Kiczales&amp;rsquo; course &lt;a href=&#34;https://www.edx.org/course/how-code-simple-data-ubcx-htc1x&#34;&gt;How to Code: Simple Data&lt;/a&gt;. The course is available for free through edX.&lt;/p&gt;&#xA;&lt;h2 id=&#34;kiczales-course-structure&#34;&gt;Kiczales Course Structure&lt;/h2&gt;&#xA;&lt;p&gt;The two most important parts of the course (from my point of view) are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Module 1b: How to Design Functions.&lt;/strong&gt; The design process.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Module 3a: How to Design Worlds.&lt;/strong&gt; Big-bang.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-design-programs-videos&#34;&gt;How to Design Programs Videos&lt;/h2&gt;&#xA;&lt;p&gt;Professor Matthew Flatt has a &lt;a href=&#34;https://my.eng.utah.edu/~cs3520/f20/htdp-videos.html&#34;&gt;long list of videos about&#xA;Racket fundamentals&lt;/a&gt;.&#xA;Of course some of them are slightly different from what we learn, but&#xA;overall they teach the difficult fundamentals. No graphics when I&#xA;checked (Fall 2021).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Online Resources</title>
      <link>https://wy-cs.info/intermediate-cs/docs/e-courses/</link>
      <pubDate>Sun, 29 Oct 2017 12:33:32 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/e-courses/</guid>
      <description>&lt;p&gt;The best resource I am aware of is Gregor Kiczales&amp;rsquo; course &lt;a href=&#34;https://www.edx.org/course/how-code-simple-data-ubcx-htc1x&#34;&gt;How to&#xA;Code: Simple&#xA;Data&lt;/a&gt;. The&#xA;course is available for free through edX. (Last checked: Fall 2019.)&lt;/p&gt;&#xA;&lt;p&gt;There are also groups in Slack, Discord, and Reddit dedicated to&#xA;Racket.&lt;/p&gt;&#xA;&lt;h2 id=&#34;kiczales-course-structure&#34;&gt;Kiczales Course Structure&lt;/h2&gt;&#xA;&lt;p&gt;The two most important parts of the course (from my point of view) are:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Module 1b: How to Design Functions.&lt;/strong&gt; The design process.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Module 3a: How to Design Worlds.&lt;/strong&gt; Big-bang.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-10-12</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/daily/2017-10-12/</link>
      <pubDate>Thu, 12 Oct 2017 12:05:16 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/daily/2017-10-12/</guid>
      <description>&lt;p&gt;Make an animation of a dog that:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;gets bigger every time you hit a key (every key).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;gets smaller when you move the mouse.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;memorize&#34;&gt;Memorize&lt;/h1&gt;&#xA;&lt;p&gt;Memorize the steps of the design process!&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-10-10</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/daily/2017-10-10/</link>
      <pubDate>Tue, 10 Oct 2017 13:13:08 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/daily/2017-10-10/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;flying-rectangle.rkt&#34;&gt;Flying purple rectangle&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Make a small rectangle centered in the middle of the bottom of a big white rectangular canvas. As time goes on the rectangle should move up.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://wy-cs.info/intermediate-cs/ch06/daily/2017-10-10/flying-rectangle.gif&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Growing diamond&lt;/strong&gt;. Make a diamond that sits on the right side of the page&#xA;and gets larger.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Animation Practice</title>
      <link>https://wy-cs.info/intermediate-cs/ch06/daily/animation-practice/</link>
      <pubDate>Thu, 05 Oct 2017 21:58:10 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch06/daily/animation-practice/</guid>
      <description>&lt;h2 id=&#34;progress-bar-1&#34;&gt;Progress bar 1&lt;/h2&gt;&#xA;&lt;p&gt;Make a solid purple bar that starts in the middle of the left side of the screen and grows to the right at a constant rate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-10-04</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-10-04/</link>
      <pubDate>Wed, 04 Oct 2017 10:55:32 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-10-04/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Without10 (&lt;a href=&#34;http://codingbat.com/prob/p196976&#34;&gt;source&lt;/a&gt;). Take a list of numbers and remove all of the tens. The remaining numbers shift toward the start of the list and zeros fill in at the end.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;NotAlone (&lt;a href=&#34;http://codingbat.com/prob/p169506&#34;&gt;source&lt;/a&gt;).&#xA;We will say that an element in an array is &amp;ldquo;alone&amp;rdquo; if there are values&#xA;before and after it, and those values are different from it. Return a&#xA;version of the list where every instance of the given value&#xA;which is alone is replaced by whichever value to its left or right is&#xA;larger.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-10-03</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-10-03/</link>
      <pubDate>Tue, 03 Oct 2017 15:48:19 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-10-03/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(Previous class leftover.)&#xA;Write &lt;code&gt;only14&lt;/code&gt; (&lt;a href=&#34;http://codingbat.com/prob/p186672&#34;&gt;source&lt;/a&gt;) that takes in a list of numbers and gives a boolean result.&#xA;The result is true if every number in the list is either a 1 or a 4.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Write &lt;code&gt;isEverywhere&lt;/code&gt;(&lt;a href=&#34;http://codingbat.com/prob/p110222&#34;&gt;source&lt;/a&gt;). &amp;ldquo;We&amp;rsquo;ll say that a value is &amp;ldquo;everywhere&amp;rdquo; in an array if for every pair of adjacent elements in the array, at least one of the pair is that value. Return true if the given value is everywhere in the array.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chapter 6 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch06/ch06-reading-guide/</link>
      <pubDate>Mon, 02 Oct 2017 09:19:07 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch06/ch06-reading-guide/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in a list of numbers and output a list containing all of the numbers greater than 8.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in a list of numbers and output a list containing all of the numbers between 10 and 20 (inclusive).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in a list of numbers. Multiply all of the numbers in a list by 10 to make the output list.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Take in a list of lists. Arrange the list of lists according to how&#xA;many elements each list has, so longer sublists go first and shorter sublists&#xA;go later.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typeclass Notes</title>
      <link>https://wy-cs.info/ap-cs/haskell/typeclass-notes/</link>
      <pubDate>Sun, 24 Sep 2017 13:16:03 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/typeclass-notes/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Num: Addition, multiplication, a way to convert from an integer. Also absolute value and negation.&lt;/li&gt;&#xA;&lt;li&gt;Real: Part of the real number line. Ordered numbers. &lt;code&gt;toRational&lt;/code&gt;. Does not imply decimals!&lt;/li&gt;&#xA;&lt;li&gt;Enum: Next and previous (&lt;code&gt;succ&lt;/code&gt;-essor and &lt;code&gt;pred&lt;/code&gt;-ecessor).&lt;/li&gt;&#xA;&lt;li&gt;Integral: Integer division.&lt;/li&gt;&#xA;&lt;li&gt;Fractional: &amp;ldquo;Decimal&amp;rdquo; division.&lt;/li&gt;&#xA;&lt;li&gt;Floating: transcendental functions (exponentials, trig, pi, e).&lt;/li&gt;&#xA;&lt;li&gt;RealFrac: truncate and round.&lt;/li&gt;&#xA;&lt;li&gt;RealFloat: efficient floating point.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>2017-09-18</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-09-18/</link>
      <pubDate>Mon, 18 Sep 2017 13:02:44 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-09-18/</guid>
      <description>&lt;p&gt;We discussed problem 7 from the homework. You should finish it based on the discussion.&lt;/p&gt;&#xA;&lt;p&gt;Mentioned from Chapter 5: &lt;code&gt;type&lt;/code&gt; to make short ways to say types. Examples:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Pt&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Ship&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Pt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Shots&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Pt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We wrote the function &lt;code&gt;is_sunk&lt;/code&gt; for battleship.&lt;/p&gt;&#xA;&lt;p&gt;Functions we discussed:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;]: Join two Boolean values with logical and.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:and&#34;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt;: Join a list of Boolean values with logical and.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://hackage.haskell.org/package/base-4.10.0.0/docs/Prelude.html#v:any&#34;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt;: Apply a tester function and then join all of the values together with &amp;ldquo;and&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All of these functions have counterparts for logical or; they are: &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;any&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-09-14 Indentation</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-09-13/</link>
      <pubDate>Wed, 13 Sep 2017 20:38:45 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-09-13/</guid>
      <description>&lt;p&gt;Indentation is significant in Haskell. Haskell uses indentation to&#xA;group pieces of code together. This is similar to Python, but there&#xA;are &amp;ldquo;false cognates&amp;rdquo; - similar code that is indented differently in&#xA;the two languages.  In Racket, grouping is done only by parentheses.&lt;/p&gt;&#xA;&lt;h2 id=&#34;indenting-to-the-same-level&#34;&gt;Indenting to the same level&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&#xA;&lt;h4 class=&#34;alert-heading&#34;&gt;tip&lt;/h4&gt;&#xA;&#xA;    &amp;ldquo;All grouped expressions must be exactly aligned.&amp;rdquo;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Example 1a: good indentation&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mod&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;   &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mod&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- good. aligned with top x.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Example 1a: bad indentation&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-09-12</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-09-12/</link>
      <pubDate>Tue, 12 Sep 2017 14:38:08 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-09-12/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Memorize how to write a basic main method:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  main = do putStrLn &amp;#34;Loaded&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use &amp;ldquo;&amp;ndash;&amp;rdquo; (two dashes) to comment to the end of the line. This is&#xA;equivalent to Racket &amp;ldquo;;&amp;rdquo; (semicolon).&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Function name rules:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Must begin with lowercase letter.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hyphens (-) are not allowed in names.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Underscore (_) may be used instead.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Traditionally &lt;code&gt;camelCase&lt;/code&gt; is used for functions. (First letter&#xA;lowercase, then uppercase each new word.)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We will learn about the &lt;code&gt;$&lt;/code&gt; sign soon, but it is a substitute for&#xA;putting parentheses from somewhere to the end of the line. That means&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017-09-11</title>
      <link>https://wy-cs.info/ap-cs/haskell/daily/2017-09-11/</link>
      <pubDate>Mon, 11 Sep 2017 10:47:02 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/daily/2017-09-11/</guid>
      <description>&lt;p&gt;removeVowels word = [ letter | letter &amp;lt;- word, not (letter &lt;code&gt;elem&lt;/code&gt; &amp;ldquo;aeiouAEIOU&amp;rdquo; )]&lt;/p&gt;&#xA;&lt;p&gt;wordLenPairs wordlist = [ (word, length word) | word &amp;lt;- wordlist ]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Source Code Files (ghci)</title>
      <link>https://wy-cs.info/ap-cs/haskell/ghci-details/</link>
      <pubDate>Mon, 11 Sep 2017 10:12:55 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ghci-details/</guid>
      <description>&lt;p&gt;Writing a file is different from typing in an interpreter like repl.it or ghci.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch01 Reading Guide</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch01/ch01-reading-guide/</link>
      <pubDate>Sat, 09 Sep 2017 15:36:40 -0500</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch01/ch01-reading-guide/</guid>
      <description>&lt;h1 id=&#34;haskell-introduction-reading-questions&#34;&gt;Haskell introduction reading questions&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Haskell is supposed to be a &lt;em&gt;purely functional language&lt;/em&gt;. Unpack that:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What does &lt;em&gt;pure&lt;/em&gt; mean?&lt;/li&gt;&#xA;&lt;li&gt;What is the difference between &lt;em&gt;functional&lt;/em&gt; and &lt;em&gt;imperative&lt;/em&gt;? (The book is not so clear on this point. What do you think it says, in your own words?)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Haskell is &lt;em&gt;lazy&lt;/em&gt;. What does this mean?&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Haskell is &lt;em&gt;statically typed&lt;/em&gt;. This could be unpacked, too.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What does &lt;em&gt;typed&lt;/em&gt; mean?&lt;/li&gt;&#xA;&lt;li&gt;The word &lt;em&gt;static&lt;/em&gt; in English can mean &amp;ldquo;not changing&amp;rdquo;. How would you apply that meaning in this context?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;When did work on Haskell begin?&lt;/p&gt;</description>
    </item>
    <item>
      <title>WeScheme</title>
      <link>https://wy-cs.info/intermediate-cs/docs/ics-wescheme-note/</link>
      <pubDate>Sat, 09 Sep 2017 07:00:30 -0500</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/ics-wescheme-note/</guid>
      <description>&lt;p&gt;WeScheme is a browser-based version of Racket. It works well for at&#xA;least the first semester of Intermediate Computer Science.&lt;/p&gt;&#xA;&lt;h2 id=&#34;special-notes-for-wescheme-users&#34;&gt;Special notes for WeScheme users&lt;/h2&gt;&#xA;&lt;p&gt;You can use &lt;a href=&#34;http://wescheme.org&#34;&gt;WeScheme&lt;/a&gt; if you cannot install&#xA;&lt;a href=&#34;https://racket-lang.org&#34;&gt;DrRacket&lt;/a&gt;.&#xA;For example, if you have a Chromebook for your home computer.&lt;/p&gt;&#xA;&lt;p&gt;There are a few differences:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Omit the &lt;code&gt;(require picturing-programs)&lt;/code&gt; line.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;strong&gt;Chapter 1&lt;/strong&gt;) See the &lt;a href=&#34;https://wy-cs.info/intermediate-cs/docs/wescheme-ch1/&#34;&gt;Chapter 1 WeScheme starter code&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;(&lt;strong&gt;Chapter 3&lt;/strong&gt;) Use the &lt;a href=&#34;https://wy-cs.info/intermediate-cs/docs/wescheme-ch3/&#34;&gt;Chapter 3 WeScheme starter&lt;/a&gt; code.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Instead of copy and pasting in a picture, you need to copy the link for the image and use &lt;code&gt;bitmap/url&lt;/code&gt; like this:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.what-dog.net/Images/faces2/main004.jpg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;(&lt;strong&gt;Chapter 6&lt;/strong&gt;) Inside &lt;code&gt;big-bang&lt;/code&gt; you need to use the phrase &lt;code&gt;to-draw&lt;/code&gt; instead of &lt;code&gt;on-draw&lt;/code&gt; that we use in DrRacket.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;draw-handler&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;empty-scene&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tick-handler&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;scale&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.01&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;big-bang&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;circle&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;solid&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-tick&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tick-handler&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#dfdfdf&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;to-draw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;draw-handler&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;google-docs-backups&#34;&gt;Google Docs Backups&lt;/h2&gt;&#xA;&lt;p&gt;Many students keep &amp;ldquo;backups&amp;rdquo; of their work by copy and pasting it into&#xA;Google Docs. That is fine. If you intend to &lt;em&gt;write&lt;/em&gt; code in Google&#xA;Docs, you need to turn off smart quotes. (Click to enlarge.)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://wy-cs.info/intermediate-cs/ch20/20-intro-ex-1/20-intro-checkexpect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/ch20/20-intro-ex-1/20-intro-checkexpect/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;slope-posn&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8/15&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;perp?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;perp?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-line?&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;on-line?&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;posn-unit&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3/5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4/5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;check-expect&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;posn-unit&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;make-posn&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5/13&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12/13&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://wy-cs.info/intermediate-cs/docs/wescheme-ch1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/wescheme-ch1/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; This code makes variables for each of the images from the book.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:bloch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/bloch.jpg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:hieroglyphics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/hieroglyphics.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:hacker&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/mad_hacker.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:book&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/qbook.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:stick-figure&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/stick-figure.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:scheme-logo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/schemelogo.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:calendar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/calendar.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:train-engine&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/train_engine.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:train-car&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/train_car.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; This section defines simple functions used in Chapter 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-cw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-ccw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-180&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-cw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-90&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-ccw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-180&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;180&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Now you are ready to write your programs from Chapter 1 and beyond.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#| ;; to see the pictures get rid of this line (1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:bloch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:hieroglyphics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:hacker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:book&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:stick-figure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:scheme-logo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:calendar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:train-engine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:train-car&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;|#&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; to see the pictures get rid of this line (2)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://wy-cs.info/intermediate-cs/docs/wescheme-ch3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wy-cs.info/intermediate-cs/docs/wescheme-ch3/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-racket&#34; data-lang=&#34;racket&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;;;; WeScheme Starter Code: Chapters 1 and 3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 1 Images&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:bloch&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/bloch.jpg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:hieroglyphics&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/hieroglyphics.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:hacker&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/mad_hacker.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:book&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/qbook.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:stick-figure&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/stick-figure.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:scheme-logo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/schemelogo.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:calendar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/calendar.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:train-engine&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/train_engine.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pic:train-car&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bitmap/url&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://picturingprograms.com/pictures/train_car.png&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 1 Functions: rotate-cw rotate-ccw rotate-180&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; This section defines simple functions used in Chapter 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-cw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-ccw&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; rotate-180&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-cw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;-90&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-ccw&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate-180&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rotate&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;180&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 3 Functions for WeScheme&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 3: crop-left crop-right crop-top crop-bottom&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop-left&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop-right&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop-top&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop-bottom&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;crop&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 3: colorize&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;colorize&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;the-image-color&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;color?&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;the-image-color&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;the-image-color&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name-&amp;gt;color&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;the-image-color&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 3: overlay/offset&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay/offset&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;overlay/xy&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-width&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;image-height&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;bg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#000&#34;&gt;bg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Chapter 7: real-&amp;gt;int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;real-&amp;gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;exact-&amp;gt;inexact&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;round&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#| ;; Images - get rid of this line to show images.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:bloch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:hieroglyphics&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:hacker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:book&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:stick-figure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:scheme-logo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:calendar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:train-engine  ; not a variable in DrRacket&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;pic:train-car     ; not a variable in DrRacket&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;|#&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;; Get rid of this line to show images.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Test cases for Chapter 4 Discussion III</title>
      <link>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-03/ch04disc03tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wy-cs.info/ap-cs/haskell/ch04/ch04-discussion-03/ch04disc03tests/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;withoutDoubles :: Int -&amp;gt; Int -&amp;gt; Bool -&amp;gt; Int&#xA;withoutDoubles = undefined&#xA;&#xA;testWithout = [withoutDoubles 2 3 True == 5&#xA;              , withoutDoubles 3 3 True == 7&#xA;              , withoutDoubles 3 3 False == 6&#xA;              ]&#xA;&#xA;xyBalance :: String -&amp;gt; Bool&#xA;xyBalance = undefined&#xA;&#xA;testXY = [xyBalance &amp;#34;pixxa&amp;#34; == False&#xA;         , xyBalance &amp;#34;pixely art&amp;#34; == True&#xA;         , xyBalance &amp;#34;xay anythxng&amp;#34; == False&#xA;         ]&#xA;&#xA;teaParty :: Int -&amp;gt; Int -&amp;gt; Int&#xA;teaParty tea candy = undefined&#xA;   where good = 1&#xA;         great = 2&#xA;         bad = 0&#xA;&#xA;testTea = [ bad == teaParty 1 3&#xA;          , bad == teaParty 0 20&#xA;          , good == teaParty 7 9&#xA;          , great == teaParty 6 12&#xA;          , great == teaParty 15 7&#xA;          , bad == teaParty 2 7&#xA;          , bad == teaParty 7 2&#xA;           ]&#xA;     where good = 1&#xA;           great = 2&#xA;           bad = 0&#xA;&#xA;unluckyOne2 :: [Int] -&amp;gt; Bool&#xA;unluckyOne2 = undefined&#xA;&#xA;testUnlucky12 = [ True == unluckyOne2 [1,3,5,9]&#xA;                , True == unluckyOne2 [7,1,3,5,9]&#xA;                , True == unluckyOne2 [9,3,1,3]&#xA;                , False == unluckyOne2 [9,3,1,4,3]&#xA;                , False == unluckyOne2 []&#xA;                , False == unluckyOne2 [2,1,5,3]&#xA;                ]&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
